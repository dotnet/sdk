.\" Automatically generated by Pandoc 2.7.2
.\"
.TH "dotnet run command" "1" "" "" ".NET Core"
.hy
.SH dotnet run
.PP
\f[B]This article applies to: \[OK]\f[R] .NET Core 1.x SDK and later versions
.SH NAME
.PP
\f[C]dotnet run\f[R] - Runs source code without any explicit compile or launch commands.
.SH SYNOPSIS
.SS .NET Core 3.0
.IP
.nf
\f[C]
dotnet run [-c|--configuration] [-f|--framework] [--force] [--interactive] [--launch-profile] [--no-build] [--no-dependencies]
    [--no-launch-profile] [--no-restore] [-p|--project] [-r|--runtime] [-v|--verbosity] [[--] [application arguments]]
dotnet run [-h|--help]
\f[R]
.fi
.SS .NET Core 2.1
.IP
.nf
\f[C]
dotnet run [-c|--configuration] [-f|--framework] [--force] [--launch-profile] [--no-build] [--no-dependencies]
    [--no-launch-profile] [--no-restore] [-p|--project] [--runtime] [-v|--verbosity] [[--] [application arguments]]
dotnet run [-h|--help]
\f[R]
.fi
.SS .NET Core 2.0
.IP
.nf
\f[C]
dotnet run [-c|--configuration] [-f|--framework] [--force] [--launch-profile] [--no-build] [--no-dependencies]
    [--no-launch-profile] [--no-restore] [-p|--project] [--runtime] [[--] [application arguments]]
dotnet run [-h|--help]
\f[R]
.fi
.SS .NET Core 1.x
.IP
.nf
\f[C]
dotnet run [-c|--configuration] [-f|--framework] [-p|--project] [[--] [application arguments]]
dotnet run [-h|--help]
\f[R]
.fi
.PP
   *   *   *   *   *
.SH DESCRIPTION
.PP
The \f[C]dotnet run\f[R] command provides a convenient option to run your application from the source code with one command.
It\[cq]s useful for fast iterative development from the command line.
The command depends on the \f[C]dotnet build\f[R] command to build the code.
Any requirements for the build, such as that the project must be restored first, apply to \f[C]dotnet run\f[R] as well.
.PP
Output files are written into the default location, which is \f[C]bin/<configuration>/<target>\f[R].
For example if you have a \f[C]netcoreapp2.1\f[R] application and you run \f[C]dotnet run\f[R], the output is placed in \f[C]bin/Debug/netcoreapp2.1\f[R].
Files are overwritten as needed.
Temporary files are placed in the \f[C]obj\f[R] directory.
.PP
If the project specifies multiple frameworks, executing \f[C]dotnet run\f[R] results in an error unless the \f[C]-f|--framework <FRAMEWORK>\f[R] option is used to specify the framework.
.PP
The \f[C]dotnet run\f[R] command is used in the context of projects, not built assemblies.
If you\[cq]re trying to run a framework-dependent application DLL instead, you must use dotnet without a command.
For example, to run \f[C]myapp.dll\f[R], use:
.IP
.nf
\f[C]
dotnet myapp.dll
\f[R]
.fi
.PP
For more information on the \f[C]dotnet\f[R] driver, see the .NET Core Command Line Tools (CLI) topic.
.PP
To run the application, the \f[C]dotnet run\f[R] command resolves the dependencies of the application that are outside of the shared runtime from the NuGet cache.
Because it uses cached dependencies, it\[cq]s not recommended to use \f[C]dotnet run\f[R] to run applications in production.
Instead, create a deployment using the \f[C]dotnet publish\f[R] command and deploy the published output.
.PP
.SH OPTIONS
.SS .NET Core 3.0
.PP
\f[C]--\f[R]
.PP
Delimits arguments to \f[C]dotnet run\f[R] from arguments for the application being run.
All arguments after this delimiter are passed to the application run.
.PP
\f[C]-c|--configuration {Debug|Release}\f[R]
.PP
Defines the build configuration.
The default value for most projects is \f[C]Debug\f[R].
.PP
\f[C]-f|--framework <FRAMEWORK>\f[R]
.PP
Builds and runs the app using the specified framework.
The framework must be specified in the project file.
.PP
\f[C]--force\f[R]
.PP
Forces all dependencies to be resolved even if the last restore was successful.
Specifying this flag is the same as deleting the \f[I]project.assets.json\f[R] file.
.PP
\f[C]-h|--help\f[R]
.PP
Prints out a short help for the command.
.PP
\f[C]--interactive\f[R]
.PP
Allows the command to stop and wait for user input or action (for example, to complete authentication).
.PP
\f[C]--launch-profile <NAME>\f[R]
.PP
The name of the launch profile (if any) to use when launching the application.
Launch profiles are defined in the \f[I]launchSettings.json\f[R] file and are typically called \f[C]Development\f[R], \f[C]Staging\f[R], and \f[C]Production\f[R].
For more information, see Working with multiple environments.
.PP
\f[C]--no-build\f[R]
.PP
Doesn\[cq]t build the project before running.
It also implicit sets the \f[C]--no-restore\f[R] flag.
.PP
\f[C]--no-dependencies\f[R]
.PP
When restoring a project with project-to-project (P2P) references, restores the root project and not the references.
.PP
\f[C]--no-launch-profile\f[R]
.PP
Doesn\[cq]t try to use \f[I]launchSettings.json\f[R] to configure the application.
.PP
\f[C]--no-restore\f[R]
.PP
Doesn\[cq]t execute an implicit restore when running the command.
.PP
\f[C]-p|--project <PATH>\f[R]
.PP
Specifies the path of the project file to run (folder name or full path).
If not specified, it defaults to the current directory.
.PP
\f[C]--runtime <RUNTIME_IDENTIFIER>\f[R]
.PP
Specifies the target runtime to restore packages for.
For a list of Runtime Identifiers (RIDs), see the RID catalog.
.PP
\f[C]-v|--verbosity <LEVEL>\f[R]
.PP
Sets the verbosity level of the command.
Allowed values are \f[C]q[uiet]\f[R], \f[C]m[inimal]\f[R], \f[C]n[ormal]\f[R], \f[C]d[etailed]\f[R], and \f[C]diag[nostic]\f[R].
.SS .NET Core 2.1
.PP
\f[C]--\f[R]
.PP
Delimits arguments to \f[C]dotnet run\f[R] from arguments for the application being run.
All arguments after this delimiter are passed to the application run.
.PP
\f[C]-c|--configuration {Debug|Release}\f[R]
.PP
Defines the build configuration.
The default value for most projects is \f[C]Debug\f[R].
.PP
\f[C]-f|--framework <FRAMEWORK>\f[R]
.PP
Builds and runs the app using the specified framework.
The framework must be specified in the project file.
.PP
\f[C]--force\f[R]
.PP
Forces all dependencies to be resolved even if the last restore was successful.
Specifying this flag is the same as deleting the \f[I]project.assets.json\f[R] file.
.PP
\f[C]-h|--help\f[R]
.PP
Prints out a short help for the command.
.PP
\f[C]--launch-profile <NAME>\f[R]
.PP
The name of the launch profile (if any) to use when launching the application.
Launch profiles are defined in the \f[I]launchSettings.json\f[R] file and are typically called \f[C]Development\f[R], \f[C]Staging\f[R], and \f[C]Production\f[R].
For more information, see Working with multiple environments.
.PP
\f[C]--no-build\f[R]
.PP
Doesn\[cq]t build the project before running.
It also implicit sets the \f[C]--no-restore\f[R] flag.
.PP
\f[C]--no-dependencies\f[R]
.PP
When restoring a project with project-to-project (P2P) references, restores the root project and not the references.
.PP
\f[C]--no-launch-profile\f[R]
.PP
Doesn\[cq]t try to use \f[I]launchSettings.json\f[R] to configure the application.
.PP
\f[C]--no-restore\f[R]
.PP
Doesn\[cq]t execute an implicit restore when running the command.
.PP
\f[C]-p|--project <PATH>\f[R]
.PP
Specifies the path of the project file to run (folder name or full path).
If not specified, it defaults to the current directory.
.PP
\f[C]--runtime <RUNTIME_IDENTIFIER>\f[R]
.PP
Specifies the target runtime to restore packages for.
For a list of Runtime Identifiers (RIDs), see the RID catalog.
.PP
\f[C]-v|--verbosity <LEVEL>\f[R]
.PP
Sets the verbosity level of the command.
Allowed values are \f[C]q[uiet]\f[R], \f[C]m[inimal]\f[R], \f[C]n[ormal]\f[R], \f[C]d[etailed]\f[R], and \f[C]diag[nostic]\f[R].
.SS .NET Core 2.0
.PP
\f[C]--\f[R]
.PP
Delimits arguments to \f[C]dotnet run\f[R] from arguments for the application being run.
All arguments after this delimiter are passed to the application run.
.PP
\f[C]-c|--configuration {Debug|Release}\f[R]
.PP
Defines the build configuration.
The default for most projects value is \f[C]Debug\f[R].
.PP
\f[C]-f|--framework <FRAMEWORK>\f[R]
.PP
Builds and runs the app using the specified framework.
The framework must be specified in the project file.
.PP
\f[C]--force\f[R]
.PP
Forces all dependencies to be resolved even if the last restore was successful.
Specifying this flag is the same as deleting the \f[I]project.assets.json\f[R] file.
.PP
\f[C]-h|--help\f[R]
.PP
Prints out a short help for the command.
.PP
\f[C]--launch-profile <NAME>\f[R]
.PP
The name of the launch profile (if any) to use when launching the application.
Launch profiles are defined in the \f[I]launchSettings.json\f[R] file and are typically called \f[C]Development\f[R], \f[C]Staging\f[R], and \f[C]Production\f[R].
For more information, see Working with multiple environments.
.PP
\f[C]--no-build\f[R]
.PP
Doesn\[cq]t build the project before running.
It also implicit sets the \f[C]--no-restore\f[R] flag.
.PP
\f[C]--no-dependencies\f[R]
.PP
When restoring a project with project-to-project (P2P) references, restores the root project and not the references.
.PP
\f[C]--no-launch-profile\f[R]
.PP
Doesn\[cq]t try to use \f[I]launchSettings.json\f[R] to configure the application.
.PP
\f[C]--no-restore\f[R]
.PP
Doesn\[cq]t execute an implicit restore when running the command.
.PP
\f[C]-p|--project <PATH>\f[R]
.PP
Specifies the path of the project file to run (folder name or full path).
If not specified, it defaults to the current directory.
.PP
\f[C]--runtime <RUNTIME_IDENTIFIER>\f[R]
.PP
Specifies the target runtime to restore packages for.
For a list of Runtime Identifiers (RIDs), see the RID catalog.
.SS .NET Core 1.x
.PP
\f[C]--\f[R]
.PP
Delimits arguments to \f[C]dotnet run\f[R] from arguments for the application being run.
All arguments after this delimiter are passed to the application run.
.PP
\f[C]-c|--configuration {Debug|Release}\f[R]
.PP
Defines the build configuration.
The default value for most projects is \f[C]Debug\f[R].
.PP
\f[C]-f|--framework <FRAMEWORK>\f[R]
.PP
Builds and runs the app using the specified framework.
The framework must be specified in the project file.
.PP
\f[C]-h|--help\f[R]
.PP
Prints out a short help for the command.
.PP
\f[C]-p|--project <PATH/PROJECT.csproj>\f[R]
.PP
Specifies the path and name of the project file.
(See the NOTE.) If not specified, it defaults to the current directory.
.RS
.PP
[!NOTE] Use the path and name of the project file with the \f[C]-p|--project\f[R] option.
A regression in the CLI prevents providing a folder path with .NET Core SDK 1.x.
For more information about this issue, see dotnet run -p, can not start a project (dotnet/cli #5992).
.RE
.PP
   *   *   *   *   *
.SH EXAMPLES
.PP
Run the project in the current directory:
.PP
\f[C]dotnet run\f[R]
.PP
Run the specified project:
.PP
\f[C]dotnet run --project ./projects/proj1/proj1.csproj\f[R]
.PP
Run the project in the current directory (the \f[C]--help\f[R] argument in this example is passed to the application, since the blank \f[C]--\f[R] option is used):
.PP
\f[C]dotnet run --configuration Release -- --help\f[R]
.PP
Restore dependencies and tools for the project in the current directory only showing minimal output and then run the project: (.NET Core SDK 2.0 and later versions):
.PP
\f[C]dotnet run --verbosity m\f[R]
