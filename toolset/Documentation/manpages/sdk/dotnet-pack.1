.\" Automatically generated by Pandoc 2.7.2
.\"
.TH "dotnet pack command" "1" "" "" ".NET Core"
.hy
.SH dotnet pack
.PP
\f[B]This topic applies to: \[OK]\f[R] .NET Core 1.x SDK and later versions
.SH NAME
.PP
\f[C]dotnet pack\f[R] - Packs the code into a NuGet package.
.SH SYNOPSIS
.IP
.nf
\f[C]
dotnet pack [<PROJECT>|<SOLUTION>] [-c|--configuration] [--force] [--include-source] [--include-symbols] [--interactive] 
    [--no-build] [--no-dependencies] [--no-restore] [--nologo] [-o|--output] [--runtime] [-s|--serviceable] 
    [-v|--verbosity] [--version-suffix]
dotnet pack [-h|--help]
\f[R]
.fi
.SH DESCRIPTION
.PP
The \f[C]dotnet pack\f[R] command builds the project and creates NuGet packages.
The result of this command is a NuGet package (that is, a \f[I].nupkg\f[R] file).
.PP
If you want to generate a package that contains the debug symbols, you have two options available:
.IP \[bu] 2
\f[C]--include-symbols\f[R] - it creates the symbols package.
.IP \[bu] 2
\f[C]--include-source\f[R] - it creates the symbols package with a \f[C]src\f[R] folder inside containing the source files.
.PP
NuGet dependencies of the packed project are added to the \f[I].nuspec\f[R] file, so they\[cq]re properly resolved when the package is installed.
Project-to-project references aren\[cq]t packaged inside the project.
Currently, you must have a package per project if you have project-to-project dependencies.
.PP
By default, \f[C]dotnet pack\f[R] builds the project first.
If you wish to avoid this behavior, pass the \f[C]--no-build\f[R] option.
This option is often useful in Continuous Integration (CI) build scenarios where you know the code was previously built.
.PP
You can provide MSBuild properties to the \f[C]dotnet pack\f[R] command for the packing process.
For more information, see NuGet metadata properties and the MSBuild Command-Line Reference.
The Examples section shows how to use the MSBuild -p switch for a couple of different scenarios.
.PP
Web projects aren\[cq]t packable by default.
To override the default behavior, add the following property to your \f[I].csproj\f[R] file:
.IP
.nf
\f[C]
<PropertyGroup>
   <IsPackable>true</IsPackable>
</PropertyGroup>
\f[R]
.fi
.PP
.SS Arguments
.PP
\f[C]PROJECT | SOLUTION\f[R]
.PP
The project or solution to pack.
It\[cq]s either a path to a csproj file, a solution file, or to a directory.
If not specified, the command searches the current directory for a project or solution file.
.SH OPTIONS
.IP \[bu] 2
\f[B]\f[CB]-c|--configuration {Debug|Release}\f[B]\f[R]
.RS 2
.PP
Defines the build configuration.
The default value is \f[C]Debug\f[R].
.RE
.IP \[bu] 2
\f[B]\f[CB]--force\f[B]\f[R]
.RS 2
.PP
Forces all dependencies to be resolved even if the last restore was successful.
Specifying this flag is the same as deleting the \f[I]project.assets.json\f[R] file.
Option available since .NET Core 2.0 SDK.
.RE
.IP \[bu] 2
\f[B]\f[CB]-h|--help\f[B]\f[R]
.RS 2
.PP
Prints out a short help for the command.
.RE
.IP \[bu] 2
\f[B]\f[CB]--include-source\f[B]\f[R]
.RS 2
.PP
Includes the debug symbols NuGet packages in addition to the regular NuGet packages in the output directory.
The sources files are included in the \f[C]src\f[R] folder within the symbols package.
.RE
.IP \[bu] 2
\f[B]\f[CB]--include-symbols\f[B]\f[R]
.RS 2
.PP
Includes the debug symbols NuGet packages in addition to the regular NuGet packages in the output directory.
.RE
.IP \[bu] 2
\f[B]\f[CB]--interactive\f[B]\f[R]
.RS 2
.PP
Allows the command to stop and wait for user input or action (for example, to complete authentication).
Available since .NET Core 3.0 SDK.
.RE
.IP \[bu] 2
\f[B]\f[CB]--no-build\f[B]\f[R]
.RS 2
.PP
Doesn\[cq]t build the project before packing.
It also implicitly sets the \f[C]--no-restore\f[R] flag.
.RE
.IP \[bu] 2
\f[B]\f[CB]--no-dependencies\f[B]\f[R]
.RS 2
.PP
Ignores project-to-project references and only restores the root project.
Option available since .NET Core 2.0 SDK.
.RE
.IP \[bu] 2
\f[B]\f[CB]--no-restore\f[B]\f[R]
.RS 2
.PP
Doesn\[cq]t execute an implicit restore when running the command.
Option available since .NET Core 2.0 SDK.
.RE
.IP \[bu] 2
\f[B]\f[CB]--nologo\f[B]\f[R]
.RS 2
.PP
Doesn\[cq]t display the startup banner or the copyright message.
Available since .NET Core 3.0 SDK.
.RE
.IP \[bu] 2
\f[B]\f[CB]-o|--output <OUTPUT_DIRECTORY>\f[B]\f[R]
.RS 2
.PP
Places the built packages in the directory specified.
.RE
.IP \[bu] 2
\f[B]\f[CB]--runtime <RUNTIME_IDENTIFIER>\f[B]\f[R]
.RS 2
.PP
Specifies the target runtime to restore packages for.
For a list of Runtime Identifiers (RIDs), see the RID catalog.
Option available since .NET Core 2.0 SDK.
.RE
.IP \[bu] 2
\f[B]\f[CB]-s|--serviceable\f[B]\f[R]
.RS 2
.PP
Sets the serviceable flag in the package.
For more information, see .NET Blog: .NET 4.5.1 Supports Microsoft Security Updates for .NET NuGet Libraries.
.RE
.IP \[bu] 2
\f[B]\f[CB]--version-suffix <VERSION_SUFFIX>\f[B]\f[R]
.RS 2
.PP
Defines the value for the \f[C]$(VersionSuffix)\f[R] MSBuild property in the project.
.RE
.IP \[bu] 2
\f[B]\f[CB]-v|--verbosity <LEVEL>\f[B]\f[R]
.RS 2
.PP
Sets the verbosity level of the command.
Allowed values are \f[C]q[uiet]\f[R], \f[C]m[inimal]\f[R], \f[C]n[ormal]\f[R], \f[C]d[etailed]\f[R], and \f[C]diag[nostic]\f[R].
.RE
.SH EXAMPLES
.IP \[bu] 2
Pack the project in the current directory:
.RS 2
.IP
.nf
\f[C]
dotnet pack
\f[R]
.fi
.RE
.IP \[bu] 2
Pack the \f[C]app1\f[R] project:
.RS 2
.IP
.nf
\f[C]
dotnet pack \[ti]/projects/app1/project.csproj
\f[R]
.fi
.RE
.IP \[bu] 2
Pack the project in the current directory and place the resulting packages into the \f[C]nupkgs\f[R] folder:
.RS 2
.IP
.nf
\f[C]
dotnet pack --output nupkgs
\f[R]
.fi
.RE
.IP \[bu] 2
Pack the project in the current directory into the \f[C]nupkgs\f[R] folder and skip the build step:
.RS 2
.IP
.nf
\f[C]
dotnet pack --no-build --output nupkgs
\f[R]
.fi
.RE
.IP \[bu] 2
With the project\[cq]s version suffix configured as \f[C]<VersionSuffix>$(VersionSuffix)</VersionSuffix>\f[R] in the \f[I].csproj\f[R] file, pack the current project and update the resulting package version with the given suffix:
.RS 2
.IP
.nf
\f[C]
dotnet pack --version-suffix \[dq]ci-1234\[dq]
\f[R]
.fi
.RE
.IP \[bu] 2
Set the package version to \f[C]2.1.0\f[R] with the \f[C]PackageVersion\f[R] MSBuild property:
.RS 2
.IP
.nf
\f[C]
dotnet pack -p:PackageVersion=2.1.0
\f[R]
.fi
.RE
.IP \[bu] 2
Pack the project for a specific target framework:
.RS 2
.IP
.nf
\f[C]
dotnet pack -p:TargetFrameworks=net45
\f[R]
.fi
.RE
.IP \[bu] 2
Pack the project and use a specific runtime (Windows 10) for the restore operation (.NET Core SDK 2.0 and later versions):
.RS 2
.IP
.nf
\f[C]
dotnet pack --runtime win10-x64
\f[R]
.fi
.RE
.IP \[bu] 2
Pack the project using a .nuspec file:
.RS 2
.IP
.nf
\f[C]
dotnet pack \[ti]/projects/app1/project.csproj -p:NuspecFile=\[ti]/projects/app1/project.nuspec -p:NuspecBasePath=\[ti]/projects/app1/nuget
\f[R]
.fi
.RE
