.\" Automatically generated by Pandoc 2.7.2
.\"
.TH "dotnet store command" "1" "" "" ".NET Core"
.hy
.SH dotnet store
.PP
.SH NAME
.PP
\f[C]dotnet store\f[R] - Stores the specified assemblies in the runtime package store.
.SH SYNOPSIS
.PP
\f[C]dotnet store -m|--manifest -f|--framework -r|--runtime  [--framework-version] [-h|--help] [--output] [--skip-optimization] [--skip-symbols] [-v|--verbosity] [--working-dir]\f[R]
.SH DESCRIPTION
.PP
\f[C]dotnet store\f[R] stores the specified assemblies in the runtime package store.
By default, assemblies are optimized for the target runtime and framework.
For more information, see the runtime package store topic.
.SS Required options
.PP
\f[C]-f|--framework <FRAMEWORK>\f[R]
.PP
Specifies the target framework.
.PP
\f[C]-m|--manifest <PATH_TO_MANIFEST_FILE>\f[R]
.PP
The \f[I]package store manifest file\f[R] is an XML file that contains the list of packages to store.
The format of the manifest file is compatible with the SDK-style project format.
So, a project file that references the desired packages can be used with the \f[C]-m|--manifest\f[R] option to store assemblies in the runtime package store.
To specify multiple manifest files, repeat the option and path for each file.
For example: \f[C]--manifest packages1.csproj --manifest packages2.csproj\f[R].
.PP
\f[C]-r|--runtime <RUNTIME_IDENTIFIER>\f[R]
.PP
The runtime identifier to target.
.SS Optional options
.PP
\f[C]--framework-version <FRAMEWORK_VERSION>\f[R]
.PP
Specifies the .NET Core SDK version.
This option enables you to select a specific framework version beyond the framework specified by the \f[C]-f|--framework\f[R] option.
.PP
\f[C]-h|--help\f[R]
.PP
Shows help information.
.PP
\f[C]-o|--output <OUTPUT_DIRECTORY>\f[R]
.PP
Specifies the path to the runtime package store.
If not specified, it defaults to the \f[I]store\f[R] subdirectory of the user profile .NET Core installation directory.
.PP
\f[C]--skip-optimization\f[R]
.PP
Skips the optimization phase.
.PP
\f[C]--skip-symbols\f[R]
.PP
Skips symbol generation.
Currently, you can only generate symbols on Windows and Linux.
.PP
\f[C]-v|--verbosity <LEVEL>\f[R]
.PP
Sets the verbosity level of the command.
Allowed values are \f[C]q[uiet]\f[R], \f[C]m[inimal]\f[R], \f[C]n[ormal]\f[R], \f[C]d[etailed]\f[R], and \f[C]diag[nostic]\f[R].
.PP
\f[C]-w|--working-dir <INTERMEDIATE_WORKING_DIRECTORY>\f[R]
.PP
The working directory used by the command.
If not specified, it uses the \f[I]obj\f[R] subdirectory of the current directory.
.SH EXAMPLES
.PP
Store the packages specified in the \f[I]packages.csproj\f[R] project file for .NET Core 2.0.0:
.PP
\f[C]dotnet store --manifest packages.csproj --framework-version 2.0.0\f[R]
.PP
Store the packages specified in the \f[I]packages.csproj\f[R] without optimization:
.PP
\f[C]dotnet store --manifest packages.csproj --skip-optimization\f[R]
.SS See also
.IP \[bu] 2
Runtime package store
.SH AUTHORS
bleroy.
