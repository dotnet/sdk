<Project>

  <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.targets', '$(MSBuildThisFileDirectory)../'))" />

  <PropertyGroup>
    <RedistLayoutPath>$(OutputPath)dotnet\</RedistLayoutPath>
    <SdkInternalLayoutPath>$(OutputPath)i\</SdkInternalLayoutPath>
    <DownloadsFolder>$(IntermediateOutputPath)downloads\</DownloadsFolder>
    <SdkOutputDirectory>$(RedistLayoutPath)sdk\$(Version)\</SdkOutputDirectory>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Any properties that depend on Version and are not in a Target must not be defined in Directory.Build.props as Version won't be available yet. -->
    <PgoTerm Condition="'$(PgoInstrument)' == 'true'">-pgo</PgoTerm>
    <ArtifactNameWithVersionSdk>dotnet-sdk-internal$(PgoTerm)-$(Version)-$(ProductMonikerRid)</ArtifactNameWithVersionSdk>
    <ArtifactNameWithVersionCombinedHostHostFxrFrameworkSdk>dotnet-sdk$(PgoTerm)-$(Version)-$(ProductMonikerRid)</ArtifactNameWithVersionCombinedHostHostFxrFrameworkSdk>
    <!-- Warning: changing the value "ProductBandCombinedHostHostFxrFrameworkSdkName" can only occur on a product-band boundary [CliProductBandVersion],
              Changing "ProductBandCombinedHostHostFxrFrameworkSdkName" mid-product-band will break the upgradability of the SDK bundle installer. -->
    <ProductBandCombinedHostHostFxrFrameworkSdkName>Dotnet SDK Bundle Installer $(CliProductBandVersion) $(ProductMonikerRid)</ProductBandCombinedHostHostFxrFrameworkSdkName>
  </PropertyGroup>

  <Import Project="$(RepoRoot)src\Tasks\sdk-tasks\sdk-tasks.InTree.targets" />
  <Import Project="targets\BundledTemplates.targets" />
  <Import Project="targets\BundledManifests.targets" />
  <Import Project="targets\BundledDotnetTools.targets" />
  <Import Project="targets\GenerateBundledVersions.targets" />
  <Import Project="targets\Crossgen.targets" />
  <Import Project="targets\GenerateLayout.targets" />
  <Import Project="targets\GenerateArchives.targets" Condition="'$(PackInstaller)' != 'false'"/>
  <Import Project="targets\GenerateMSIs.targets" />
  <Import Project="targets\GeneratePKG.targets" Condition="'$(PackInstaller)' != 'false'"/>
  <Import Project="targets\GenerateInstallers.targets" Condition="'$(PackInstaller)' != 'false'"/>
  <Import Project="targets\Badge.targets" />

</Project>
