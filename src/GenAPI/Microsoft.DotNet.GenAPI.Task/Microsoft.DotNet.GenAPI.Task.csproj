<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net6.0;net472</TargetFrameworks>
    <TargetFrameworks Condition="'$(DotNetBuildFromSource)' == 'true'">net8.0;net472</TargetFrameworks>
    <StrongNameKeyId>Open</StrongNameKeyId>
    <Nullable>enable</Nullable>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>

    <IsPackable>true</IsPackable>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <!-- This package doesn't contain any lib or ref assemblies because it's a tooling package.-->
    <NoWarn>$(NoWarn);NU5128</NoWarn>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);_AddBuildOutputToPackageCore;_AddBuildOutputToPackageDesktop</TargetsForTfmSpecificContentInPackage>
    <PackageDescription>MSBuild tasks and targets to emit Roslyn based source code from input assemblies.</PackageDescription>
  </PropertyGroup>

  <!-- SDK's task infrastructure -->
  <ItemGroup>
    <Compile Include="..\..\Tasks\Common\TaskBase.cs" LinkBase="Common" />
    <Compile Include="..\..\Tasks\Common\Logger.cs" LinkBase="Common" />
    <Compile Include="..\..\Tasks\Common\LogAdapter.cs" LinkBase="Common" />
    <Compile Include="..\..\Tasks\Common\BuildErrorException.cs" LinkBase="Common" />
    <Compile Include="..\..\Tasks\Common\Message.cs" LinkBase="Common" />
    <Compile Include="..\..\Tasks\Common\MessageLevel.cs" LinkBase="Common" />
  </ItemGroup>

  <!-- Include MSBuild logger -->
  <ItemGroup>
    <Compile Include="..\..\Microsoft.DotNet.ApiSymbolExtensions\Logging\MSBuildLog.cs" />
  </ItemGroup>

  <ItemGroup>
    <!-- ExcludeAssets="Runtime" is being set to avoid adding package references and dependencies of package and project references into the package. -->
    <PackageReference Include="Microsoft.Build.Framework" Version="$(MicrosoftBuildPackageVersion)" ExcludeAssets="Runtime" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="$(MicrosoftBuildUtilitiesCorePackageVersion)" ExcludeAssets="Runtime" />
    <ProjectReference Include="..\Microsoft.DotNet.GenAPI\Microsoft.DotNet.GenAPI.csproj" ExcludeAssets="Runtime" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="$(MicrosoftCodeAnalysisCSharpWorkspacesPackageVersion)" />
    <!-- We carry NuGet as part of the package in case the package is used with an older SDKs or with full framework MSBuild. -->
    <PackageReference Include="NuGet.Frameworks" Version="$(NuGetBuildTasksPackageVersion)" />
    <PackageReference Include="NuGet.Packaging" Version="$(NuGetBuildTasksPackageVersion)" />
    <PackageReference Include="NuGet.Protocol" Version="$(NuGetBuildTasksPackageVersion)" />
  </ItemGroup>

  <ItemGroup>
    <None Include="**\*.props;**\*.targets" Pack="true" PackagePath="%(RecursiveDir)%(Filename)%(Extension)" />
    <None Include="$(RepoRoot)LICENSE.txt" PackagePath="LICENSE.txt" Pack="true" />
  </ItemGroup>

  <ItemGroup>
    <!--
      Update all PackageReference and ProjectReference Items to have
      PrivateAssets="All" and default Publish to true.
      This removes the dependency nodes from the generated nuspec and
      forces the publish output to contain the dlls.
     -->
    <PackageReference Update="@(PackageReference)">
      <PrivateAssets>All</PrivateAssets>
      <Publish Condition="'%(PackageReference.Publish)' == ''">true</Publish>
      <ExcludeAssets Condition="'%(PackageReference.Publish)' == 'false'">runtime</ExcludeAssets>
    </PackageReference>
    <ProjectReference Update="@(ProjectReference)">
      <PrivateAssets>All</PrivateAssets>
      <Publish Condition="'%(ProjectReference.Publish)' == ''">true</Publish>
    </ProjectReference>

    <!--
      Update all Reference items to have Pack="false"
      This removes the frameworkDependency nodes from the generated nuspec
    -->
    <Reference Update="@(Reference)">
      <Pack>false</Pack>
    </Reference>
  </ItemGroup>

  <Target Name="_AddBuildOutputToPackageCore" DependsOnTargets="Publish" Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp'">
    <ItemGroup>
      <!-- Publish .NET Core assets and include them in the package under tools directory. -->
      <TfmSpecificPackageFile Include="$(PublishDir)**" PackagePath="tools/$(TargetFramework)/%(RecursiveDir)%(FileName)%(Extension)" />
    </ItemGroup>
  </Target>

  <Target Name="_AddBuildOutputToPackageDesktop" Condition="'$(TargetFrameworkIdentifier)' != '.NETCoreApp'">
    <ItemGroup>
      <!-- Include .NET Framework build outputs in the package under tools directory. -->
      <TfmSpecificPackageFile Include="$(OutputPath)**" PackagePath="tools/$(TargetFramework)/%(RecursiveDir)%(FileName)%(Extension)" />
    </ItemGroup>
  </Target>

</Project>
