<Project>

  <PropertyGroup>
    <MaxNetVersion>$(MicrosoftNETCoreAppRuntimePackageVersion.Split('.')[0])</MaxNetVersion>
    <!-- Add targeting packs for .NET 10 and higher. Targeting packs for previous versions don't have entirely accurate data,
         so we use the FrameworkPackages data which was generated by running conflict resolution to determine which packages
         would not be used. -->
    <TargetingPackPruneVersion>10</TargetingPackPruneVersion>
  </PropertyGroup>

  <!-- We don't download the targeting pack for the maximum .NET version here, as we may still be in preview.
       Rather, the GetPackagesToPrune task will load the package prune data for the current version from the
       targeting packs that ship with the SDK. -->
  <Target Name="GetTargetingPacksForPruneData"
          Condition="$(TargetingPackPruneVersion) &lt; $(MaxNetVersion)"
          Returns="@(TargetingPackForPruneData)">
    <ItemGroup>
      <TargetingPackForPruneData Include="Microsoft.NETCore.App"  />
      <TargetingPackForPruneData Include="Microsoft.AspNetCore.App" />
      <TargetingPackForPruneData Include="Microsoft.WindowsDesktop.App" />

      <!-- Add metadata for downloading and binplacing -->
      <TargetingPackForPruneData Version="$(TargetingPackPruneVersion).0.0" TargetFrameworkVersion="$(TargetingPackPruneVersion).0" PackageName="%(Identity).Ref" />
    </ItemGroup>

    <MSBuild Projects="$(MSBuildProjectFile)"
             Targets="GetTargetingPacksForPruneData"
             Properties="TargetingPackPruneVersion=$([MSBuild]::Add($(TargetingPackPruneVersion), 1))">
      <Output TaskParameter="TargetOutputs" ItemName="TargetingPackForPruneData" />
    </MSBuild>
  </Target>

  <!-- TODO: Remove conditions from UsingTask and target when a new SDK with the CollatePackageDownload task built-in is consumed. -->
  <UsingTask TaskName="Microsoft.NET.Build.Tasks.CollatePackageDownloads" AssemblyFile="$(MicrosoftNETBuildTasksAssembly)" Condition="'$(MaxNetVersion)' != '$(TargetingPackPruneVersion)'" />
  <Target Name="AddTargetingPacksForPruneDataAsPackageDownloads"
          BeforeTargets="CollectPackageDownloads"
          DependsOnTargets="GetTargetingPacksForPruneData"
          Condition="'$(MaxNetVersion)' != '$(TargetingPackPruneVersion)'">
    <CollatePackageDownloads Packages="@(TargetingPackForPruneData->Metadata('PackageName'))">
      <Output TaskParameter="PackageDownloads" ItemName="PackageDownload" />
    </CollatePackageDownloads>
  </Target>

  <Target Name="GeneratePackagePruneData" DependsOnTargets="GetTargetingPacksForPruneData">
    <ItemGroup>
      <PrunePackageCopyData Include="@(TargetingPackForPruneData)"
        Source="$(NuGetPackageRoot)$([MSBuild]::ValueOrDefault('%(PackageName)', '').ToLower())\%(Version)\data\PackageOverrides.txt"
        Destination="$(OutputPath)PrunePackageData\%(TargetFrameworkVersion)\%(Identity)\PackageOverrides.txt" />
    </ItemGroup>

    <Copy SourceFiles="%(PrunePackageCopyData.Source)"
      DestinationFiles="%(Destination)"
      SkipUnchangedFiles="true" />
  </Target>

</Project>
