<Project>

  <Target Name="OverlaySdkOnLKG" AfterTargets="AfterBuild" DependsOnTargets="GenerateInstallerLayout">
    <PropertyGroup>
      <_DotNetHiveRoot>$(DOTNET_INSTALL_DIR)</_DotNetHiveRoot>
      <_DotNetHiveRoot Condition="'$(_DotNetHiveRoot)' == ''">$(RepoRoot).dotnet/</_DotNetHiveRoot>
      <_DotNetHiveRoot Condition="!HasTrailingSlash('$(_DotNetHiveRoot)')">$(_DotNetHiveRoot)/</_DotNetHiveRoot>
    </PropertyGroup>

    <!-- Get stage 0 SDK version without having to duplicate the LKG SDK property between the global.json
    and a property. -->
    <Exec Command="$(DotnetTool) --version" ConsoleToMsbuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="Stage0SdkVersion"/>
    </Exec>

    <!-- Copy artifacts from the stage0 SDK folder.
         Ignore the sdk, templates and host files for which only live built artifacts should be used. -->
    <ItemGroup>
      <_OverlaySDKFile Include="$(_DotNetHiveRoot)\**\*"
                       Exclude="$(_DotNetHiveRoot)sdk\**\*;
                                $(_DotNetHiveRoot)templates\**\*;
                                $(_DotNetHiveRoot)host\**\*"/>
      <OverlaySDKFile Include="@(_OverlaySDKFile->'$(TestHostDotNetRoot)%(RecursiveDir)%(Filename)%(Extension)')" Source="%(Identity)" />
    </ItemGroup>

    <ItemGroup>
      <_InstallerOutputFile Include="$(RedistInstallerLayoutPath)**\*" />
      <InstallerOutputFile Include="@(_InstallerOutputFile->'$(TestHostDotNetRoot)%(RecursiveDir)%(Filename)%(Extension)')" Source="%(Identity)" />
      <!-- Use available live built artifacts instead of stage0 files. -->
      <InstallerOutputFile Include="@(OverlaySDKFile)" Exclude="@(InstallerOutputFile)" />
    </ItemGroup>

    <!-- Copy artifacts to the testhost folder. -->
    <Copy DestinationFiles="@(InstallerOutputFile)"
          SourceFiles="@(InstallerOutputFile->Metadata('Source'))"
          SkipUnchangedFiles="true"
          UseHardLinksIfPossible="true" />

    <OverrideAndCreateBundledNETCoreAppPackageVersion
      Stage0MicrosoftNETCoreAppRefPackageVersionPath="$(_DotNetHiveRoot)/sdk/$(Stage0SdkVersion)/Microsoft.NETCoreSdk.BundledVersions.props"
      MicrosoftNETCoreAppRefPackageVersion="$(MicrosoftNETCoreAppRefPackageVersion)"
      NewSDKVersion="$(Version)"
      TargetRid="$(TargetRid)"
      OutputPath="$(TestHostDotNetRoot)/sdk/$(Version)/Microsoft.NETCoreSdk.BundledVersions.props"/>
  </Target>

  <Target Name="PublishTestWorkloads"
          AfterTargets="OverlaySdkOnLKG">
    <PropertyGroup>
      <!-- Calculate the version band (ie the band should still be 5.0.100 if the VersionPrefix is 5.0.101 -->
      <_VersionPrefixMajor>$(VersionPrefix.Split('.')[0])</_VersionPrefixMajor>
      <_VersionPrefixMinor>$(VersionPrefix.Split('.')[1])</_VersionPrefixMinor>
      <_VersionPrefixPatch>$(VersionPrefix.Split('.')[2])</_VersionPrefixPatch>
      <_VersionPrefixPatchBand>$([System.Convert]::ToUInt16($([MSBuild]::Divide($(_VersionPrefixPatch), 100))))</_VersionPrefixPatchBand>
      <_VersionPrefixPatchBand>$([MSBuild]::Multiply($(_VersionPrefixPatchBand), 100))</_VersionPrefixPatchBand>
      <VersionBand>$(_VersionPrefixMajor).$(_VersionPrefixMinor).$(_VersionPrefixPatchBand)</VersionBand>
    </PropertyGroup>

    <ItemGroup>
      <WorkloadManifestContent Include="$(RepoRoot)test\TestAssets\TestWorkloads\manifests\**\*.*" />
      <WorkloadPackContent Include="$(RepoRoot)test\TestAssets\TestWorkloads\packs\**\*.*" />
    </ItemGroup>

    <Copy SourceFiles="@(WorkloadManifestContent)"
          DestinationFiles="@(WorkloadManifestContent->'$(TestHostDotNetRoot)sdk-manifests\$(VersionBand)\%(RecursiveDir)%(Filename)%(Extension)')" />

    <Copy SourceFiles="@(WorkloadPackContent)"
          DestinationFiles="@(WorkloadPackContent->'$(TestHostDotNetRoot)packs\%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

</Project>
