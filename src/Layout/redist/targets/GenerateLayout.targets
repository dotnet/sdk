<Project>
  <Target Name="PublishVersionFile"
          BeforeTargets="Build">

    <WriteLinesToFile File="$(OutputPath)/.toolsetversion"
                      Lines="$(GitCommitHash);$(Version);$(Rid)"
                      Overwrite="true" />

    <!-- The .version file in the final product will be the .NET Core SDK version.  But
         for the layout we produce here, use the toolset information, so that we don't
         just always use the stage 0 version. -->
    <WriteLinesToFile File="$(OutputPath)/.version"
                      Lines="$(GitCommitHash);$(Version);$(Rid)"
                      Overwrite="true" />

	<!-- Development env and CI loads DotnetFiles type from the following location
	      The resolution of the product version (https://github.com/dotnet/sdk/blob/main/src/Cli/Microsoft.DotNet.Cli.Utils/DotnetFiles.cs#L21)
		  then need the version file there as well. -->
    <Copy SourceFiles="$(OutputPath)/.version" DestinationFiles="$(BaseOutputPath)$(Configuration)/.version" SkipUnchangedFiles="true" />


  </Target>

  <Target Name="PublishRoslyn"
          BeforeTargets="Build">
    <PropertyGroup>
      <RoslynDirectory>$(OutputPath)/Roslyn</RoslynDirectory>
    </PropertyGroup>
    <ItemGroup>
      <RoslynBits Include="$(NuGetPackageRoot)/microsoft.net.compilers.toolset/$(MicrosoftNetCompilersToolsetPackageVersion)/tasks/netcore/**/*" />
    </ItemGroup>
    <Error Condition="'@(RoslynBits)' == ''" Text="Something moved around in Roslyn package, adjust code here accordingly. TFM change?" />
    <Copy SourceFiles="@(RoslynBits)" DestinationFiles="@(RoslynBits->'$(RoslynDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <ItemGroup>
      <RoslynFrameworkAssemblies Include="$(RoslynDirectory)/System.*.dll;$(RoslynDirectory)/runtimes/**/System.*.dll" Exclude="$(RoslynDirectory)/runtimes/**/System.IO.Pipes.AccessControl.dll"/>
    </ItemGroup>
    <Delete Files="@(RoslynFrameworkAssemblies)" />
  </Target>

  <Target Name="PublishNETAnalyzers"
          BeforeTargets="Build;PublishNetSdk">
     <PropertyGroup>
      <AnalyzerAssembliesDirectory>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk\analyzers</AnalyzerAssembliesDirectory>
      <AnalyzerTargetsDirectory>$(AnalyzerAssembliesDirectory)\build</AnalyzerTargetsDirectory>
      <AnalyzerConfigDirectory>$(AnalyzerTargetsDirectory)\config</AnalyzerConfigDirectory>
      <CodeStyleAssembliesCSharpDirectory>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk\codestyle\cs</CodeStyleAssembliesCSharpDirectory>
      <CodeStyleAssembliesVisualBasicDirectory>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk\codestyle\vb</CodeStyleAssembliesVisualBasicDirectory>
      <CodeStyleCSharpTargetsDirectory>$(CodeStyleAssembliesCSharpDirectory)\build</CodeStyleCSharpTargetsDirectory>
      <CodeStyleVisualBasicTargetsDirectory>$(CodeStyleAssembliesVisualBasicDirectory)\build</CodeStyleVisualBasicTargetsDirectory>
      <CodeStyleCSharpConfigDirectory>$(CodeStyleCSharpTargetsDirectory)\config</CodeStyleCSharpConfigDirectory>
      <CodeStyleVisualBasicConfigDirectory>$(CodeStyleVisualBasicTargetsDirectory)\config</CodeStyleVisualBasicConfigDirectory>
    </PropertyGroup>
    <ItemGroup>
      <AnalyzerAssemblies Include="$(PkgMicrosoft_CodeAnalysis_NetAnalyzers)/analyzers/dotnet/cs/**/*.dll" />
      <AnalyzerAssemblies Include="$(PkgMicrosoft_CodeAnalysis_NetAnalyzers)/analyzers/dotnet/vb/Microsoft.CodeAnalysis.VisualBasic.NetAnalyzers.dll" />
      <AnalyzerTargets Include="$(PkgMicrosoft_CodeAnalysis_NetAnalyzers)/buildTransitive/Microsoft.CodeAnalysis.NetAnalyzers.props" />
      <AnalyzerTargets Include="$(PkgMicrosoft_CodeAnalysis_NetAnalyzers)/buildTransitive/Microsoft.CodeAnalysis.NetAnalyzers.targets" />
      <AnalyzerConfig Include="$(PkgMicrosoft_CodeAnalysis_NetAnalyzers)/buildTransitive/config/**/*" />

      <ILLinkAnalyzersTargets Include="$(PkgMicrosoft_NET_ILLink_Tasks)/build/Microsoft.NET.ILLink.Analyzers.props" />
      <ILLinkAnalyzersAssemblies Include="$(PkgMicrosoft_NET_ILLink_Tasks)/analyzers/dotnet/cs/**/*.dll" />

      <CodeStyleCSharpAssemblies Include="$(PkgMicrosoft_CodeAnalysis_CSharp_CodeStyle)/analyzers/dotnet/cs/**/*.dll" />
      <CodeStyleVisualBasicAssemblies Include="$(PkgMicrosoft_CodeAnalysis_VisualBasic_CodeStyle)/analyzers/dotnet/vb/**/*.dll" />
      <!-- The props files from these packages explicitly say they should never be included in the SDK -->
      <CodeStyleCSharpTargets Include="$(PkgMicrosoft_CodeAnalysis_CSharp_CodeStyle)/build/Microsoft.CodeAnalysis.CSharp.CodeStyle.targets" />
      <CodeStyleVisualBasicTargets Include="$(PkgMicrosoft_CodeAnalysis_VisualBasic_CodeStyle)/build/Microsoft.CodeAnalysis.VisualBasic.CodeStyle.targets" />
      <!-- The files in the build/config folder are identical across packages -->
      <CodeStyleCSharpConfig Include="$(PkgMicrosoft_CodeAnalysis_CSharp_CodeStyle)/build/config/**/*" />
      <CodeStyleVisualBasicConfig Include="$(PkgMicrosoft_CodeAnalysis_VisualBasic_CodeStyle)/build/config/**/*" />
    </ItemGroup>
    <Error Condition="'@(AnalyzerAssemblies)' == ''" Text="Something moved around in Analyzer package, adjust code here accordingly. TFM change?" />
    <Error Condition="'@(AnalyzerTargets)' == ''" Text="Something moved around in Analyzer package, adjust code here accordingly. TFM change?" />
    <Error Condition="'@(AnalyzerConfig)' == ''" Text="Something moved around in Analyzer package, adjust code here accordingly. TFM change?" />
    <Error Condition="'@(CodeStyleCSharpAssemblies)' == ''" Text="Something moved around in the C# Code style package, could not find assembles. Adjust code here accordingly. TFM change?" />
    <Error Condition="'@(CodeStyleVisualBasicAssemblies)' == ''" Text="Something moved around in the VB Code style package, could not find assembles. Adjust code here accordingly. TFM change?" />
    <Error Condition="'@(CodeStyleCSharpTargets)' == ''" Text="Something moved around in Code style packeges, could not find targets/props. Adjust code here accordingly. TFM change?" />
    <Error Condition="'@(CodeStyleVisualBasicTargets)' == ''" Text="Something moved around in Code style packeges, could not find targets/props. Adjust code here accordingly. TFM change?" />
    <Error Condition="'@(CodeStyleCSharpConfig)' == ''" Text="Something moved around in Code style packeges, could not find globalconfig files. Adjust code here accordingly. TFM change?" />
    <Error Condition="'@(CodeStyleVisualBasicConfig)' == ''" Text="Something moved around in Code style packeges, could not find globalconfig files. Adjust code here accordingly. TFM change?" />
    <Error Condition="'@(ILLinkAnalyzersTargets)' == ''" Text="Something moved around in ILLink Analyzers package, adjust code accordingly." />
    <Error Condition="'@(ILLinkAnalyzersAssemblies)' == ''" Text="Something moved around in ILLink Analyzers package, adjust code accordingly." />

    <Copy SourceFiles="@(AnalyzerAssemblies)" DestinationFiles="@(AnalyzerAssemblies->'$(AnalyzerAssembliesDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(AnalyzerTargets)" DestinationFiles="@(AnalyzerTargets->'$(AnalyzerTargetsDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(AnalyzerConfig)" DestinationFiles="@(AnalyzerConfig->'$(AnalyzerConfigDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(CodeStyleCSharpAssemblies)" DestinationFiles="@(CodeStyleCSharpAssemblies->'$(CodeStyleAssembliesCSharpDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(CodeStyleVisualBasicAssemblies)" DestinationFiles="@(CodeStyleVisualBasicAssemblies->'$(CodeStyleAssembliesVisualBasicDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(CodeStyleCSharpTargets)" DestinationFiles="@(CodeStyleCSharpTargets->'$(CodeStyleCSharpTargetsDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(CodeStyleVisualBasicTargets)" DestinationFiles="@(CodeStyleVisualBasicTargets->'$(CodeStyleVisualBasicTargetsDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(CodeStyleCSharpConfig)" DestinationFiles="@(CodeStyleCSharpConfig->'$(CodeStyleCSharpConfigDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(CodeStyleVisualBasicConfig)" DestinationFiles="@(CodeStyleVisualBasicConfig->'$(CodeStyleVisualBasicConfigDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(ILLinkAnalyzersTargets)" DestinationFiles="@(ILLinkAnalyzersTargets->'$(AnalyzerTargetsDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(ILLinkAnalyzersAssemblies)" DestinationFiles="@(ILLinkAnalyzersAssemblies->'$(AnalyzerAssembliesDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <Target Name="PublishDotnetFormat"
          BeforeTargets="Build;PublishNetSdk">
    <PropertyGroup>
      <DotnetFormatDestinationDirectory>$(OutputPath)/DotnetTools/dotnet-format</DotnetFormatDestinationDirectory>
    </PropertyGroup>

    <ItemGroup>
      <DotnetFormatDllFiles Include="$(Pkgdotnet-format)/tools/net8.0/any/**/*.dll" />
      <DotnetFormatConfigFiles Include="$(Pkgdotnet-format)/tools/net8.0/any/**/*.json" />
      <DotnetFormatConfigFiles Include="$(Pkgdotnet-format)/tools/net8.0/any/**/*.config" />
    </ItemGroup>

    <Error Condition="'@(DotnetFormatDllFiles)' == ''" Text="Something moved around in dotnet-format package, adjust code here accordingly. TFM change?" />
    <Error Condition="'@(DotnetFormatConfigFiles)' == ''" Text="Something moved around in dotnet-format package, adjust code here accordingly. TFM change?" />
    <Copy SourceFiles="@(DotnetFormatDllFiles)" DestinationFiles="@(DotnetFormatDllFiles->'$(DotnetFormatDestinationDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(DotnetFormatConfigFiles)" DestinationFiles="@(DotnetFormatConfigFiles->'$(DotnetFormatDestinationDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <Target Name="PublishMSBuildExtensions"
          DependsOnTargets="GenerateMSBuildExtensions"
          BeforeTargets="Build">
    <Copy SourceFiles="@(MSBuildExtensionsContent)"
          DestinationFiles="@(MSBuildExtensionsContent->'$(OutputPath)\%(DeploymentSubpath)\%(RecursiveDir)%(Filename)%(Extension)')" />

  </Target>

  <Target Name="PublishNetSdks"
          BeforeTargets="Build">
    <ItemGroup>
      <WebSdkProjectFile Include="$(RepoRoot)src\WebSdk\**\*.csproj" />
    </ItemGroup>

    <MSBuild Projects="@(WebSdkProjectFile)" />

    <PropertyGroup>
      <NETSdkSourceRoot>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk</NETSdkSourceRoot>
      <NETSdkWebSourceRoot>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.Web</NETSdkWebSourceRoot>
      <NETSdkPublishSourceRoot>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.Publish</NETSdkPublishSourceRoot>
      <NETSdkWebProjectSystemSourceRoot>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.Web.ProjectSystem</NETSdkWebProjectSystemSourceRoot>
      <NETSdkWorkerSourceRoot>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.Worker</NETSdkWorkerSourceRoot>
      <NETSdkBlazorWasmSourceRoot>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.BlazorWebAssembly</NETSdkBlazorWasmSourceRoot>
      <NETSdkWasmSourceRoot>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.WebAssembly</NETSdkWasmSourceRoot>
      <NETSdkRazorSourceRoot>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.Razor</NETSdkRazorSourceRoot>
      <NETSdkStaticWebAssetsSourceRoot>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.StaticWebAssets</NETSdkStaticWebAssetsSourceRoot>
    </PropertyGroup>
    <ItemGroup>
      <NETSdksContent Include="$(NETSdkSourceRoot)\**\*.*"
                     DeploymentSubPath="Sdks\Microsoft.NET.Sdk"/>
      <NETSdksContent Include="$(NETSdkWebSourceRoot)\**\*.*"
                     DeploymentSubPath="Sdks\Microsoft.NET.Sdk.Web"/>
      <NETSdksContent Include="$(NETSdkPublishSourceRoot)\**\*.*"
                     DeploymentSubPath="Sdks\Microsoft.NET.Sdk.Publish"/>
      <NETSdksContent Include="$(NETSdkWebProjectSystemSourceRoot)\**\*.*"
                     DeploymentSubPath="Sdks\Microsoft.NET.Sdk.Web.ProjectSystem"/>
      <NETSdksContent Include="$(NETSdkWorkerSourceRoot)\**\*.*"
                     DeploymentSubPath="Sdks\Microsoft.NET.Sdk.Worker"/>
      <NETSdksContent Include="$(NETSdkBlazorWasmSourceRoot)\**\*.*"
                     DeploymentSubPath="Sdks\Microsoft.NET.Sdk.BlazorWebAssembly"/>
      <NETSdksContent Include="$(NETSdkWasmSourceRoot)\**\*.*"
                     DeploymentSubPath="Sdks\Microsoft.NET.Sdk.WebAssembly"/>
      <NETSdksContent Include="$(NETSdkRazorSourceRoot)\**\*.*"
                     DeploymentSubPath="Sdks\Microsoft.NET.Sdk.Razor"/>
      <NETSdksContent Include="$(NETSdkStaticWebAssetsSourceRoot)\**\*.*"
                     DeploymentSubPath="Sdks\Microsoft.NET.Sdk.StaticWebAssets"/>
    </ItemGroup>
    <Copy SourceFiles="@(NETSdksContent)"
      DestinationFiles="@(NETSdksContent->'$(OutputPath)\%(DeploymentSubpath)\%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <Target Name="PublishTestCli"
          BeforeTargets="Build">
    <PropertyGroup>
      <TestCliNuGetDirectoryTargetFramework Condition="'$(DotNetBuildFromSource)' != 'true'" >netcoreapp3.1</TestCliNuGetDirectoryTargetFramework>
      <TestCliNuGetDirectoryTargetFramework Condition="'$(DotNetBuildFromSource)' == 'true'" >net8.0</TestCliNuGetDirectoryTargetFramework>
      <TestCliNuGetDirectory>$(NuGetPackageRoot)/microsoft.testplatform.cli/$(MicrosoftTestPlatformCLIPackageVersion)/contentFiles/any/$(TestCliNuGetDirectoryTargetFramework)/</TestCliNuGetDirectory>
    </PropertyGroup>
    <ItemGroup>
      <!-- https://github.com/microsoft/vstest/issues/1886 -->
      <TestCliBitsToExclude Include="$(TestCliNuGetDirectory)NewtonSoft.Json.dll" />
      <TestCliBitsToExclude Include="$(TestCliNuGetDirectory)Microsoft.Extensions.DependencyModel.dll" />
      <TestCliBitsToExclude Include="$(TestCliNuGetDirectory)Microsoft.Extensions.FileSystemGlobbing.dll" />
      <TestCliBitsToExclude Include="$(TestCliNuGetDirectory)System.Memory.dll" />
      <TestCliBitsToExclude Include="$(TestCliNuGetDirectory)System.Runtime.CompilerServices.Unsafe.dll" />
      <TestCliBitsToExclude Include="$(TestCliNuGetDirectory)NuGet.Frameworks.dll" />
      <TestCliBitsToExclude Include="$(TestCliNuGetDirectory)System.Text.Json.dll" />
      <TestCliBits Include="$(TestCliNuGetDirectory)**/*"
                   Exclude="@(TestCliBitsToExclude)" />
    </ItemGroup>
    <Error Condition="'@(TestCliBits)' == ''" Text="Something moved around in Test CLI package, adjust code here accordingly. TFM change?" />
    <Copy SourceFiles="@(TestCliBits)" DestinationFiles="@(TestCliBits->'$(OutputPath)/%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <Target Name="PublishFSharp"
          BeforeTargets="Build">
    <MSBuild
      Targets="Publish"
      Projects="$(RepoRoot)/src/Layout/tool_fsharp/tool_fsc.csproj"
      Properties="Configuration=$(Configuration);PublishDir=$(OutputPath)/FSharp" />
  </Target>

  <Target Name="PublishContainersSdk"
            BeforeTargets="Build">
    <ItemGroup>
      <BuildFiles Include="$(RepoRoot)/src/Containers/packaging/build/Microsoft.NET.Build.Containers.props" />
      <BuildFiles Include="$(RepoRoot)/src/Containers/packaging/build/Microsoft.NET.Build.Containers.targets" />
    </ItemGroup>
    <Copy SourceFiles="@(BuildFiles)" DestinationFolder="$(OutputPath)/Containers/build" />

    <MSBuild
      Targets="Publish"
      Projects="$(RepoRoot)/src/Containers/Microsoft.NET.Build.Containers/Microsoft.NET.Build.Containers.csproj"
      Properties="Configuration=$(Configuration);PublishDir=$(OutputPath)/Containers/tasks/net472;TargetFramework=net472"
      Condition="'$(DotNetBuildFromSource)' != 'true'" />
    <MSBuild
      Targets="Publish"
      Projects="$(RepoRoot)/src/Containers/Microsoft.NET.Build.Containers/Microsoft.NET.Build.Containers.csproj"
      Properties="Configuration=$(Configuration);PublishDir=$(OutputPath)/Containers/tasks/$(SdkTargetFramework);TargetFramework=$(SdkTargetFramework)" />
    <MSBuild
      Targets="Publish"
      Projects="$(RepoRoot)/src/Containers/containerize/containerize.csproj"
      Properties="Configuration=$(Configuration);PublishDir=$(OutputPath)/Containers/containerize" />
  </Target>

  <Target Name="GenerateCliRuntimeConfigurationFiles"
          AfterTargets="Build">
    <RemoveAssetFromDepsPackages DepsFile="$(OutputPath)/$(TargetName).deps.json"
                                 SectionName="runtime"
                                 AssetPath="%(BundledToolProjects.Identity).dll" />

    <Copy SourceFiles="$(OutputPath)/$(TargetName).deps.json"
          DestinationFiles="$(OutputPath)/%(BundledTools.Identity).deps.json" />

    <Copy SourceFiles="$(OutputPath)/$(TargetName).runtimeconfig.json"
          DestinationFiles="$(OutputPath)/%(BundledTools.Identity).runtimeconfig.json" />

    <Delete Files="$(OutputPath)/$(TargetName).deps.json;
                   $(OutputPath)/$(TargetName).runtimeconfig.json;
                   $(OutputPath)/%(BundledToolProjects.Identity).dll;
                   $(OutputPath)/%(BundledToolProjects.Identity).pdb" />

    <ChangeEntryPointLibraryName
          DepsFile="$(OutputPath)/%(BundledTools.Identity).deps.json"
          NewName="%(BundledTools.Identity).deps.json" />
  </Target>

  <Target Name="RemoveResourcesFromDotnetDeps"
        AfterTargets="Build">
    <RemoveAssetFromDepsPackages DepsFile="$(OutputPath)/dotnet.deps.json"
               SectionName="resources"
               AssetPath="*" />
  </Target>

  <Target Name="MakeFscRunnableAndMoveToPublishDir"
          AfterTargets="Build"
          BeforeTargets="RemoveFilesAfterPublish">

    <PropertyGroup>
      <FSharpDirectory>$(OutputPath)/FSharp</FSharpDirectory>
    </PropertyGroup>

    <ItemGroup>
      <AssetsToRemoveFromDeps Include="tool_fsc.dll"
                              SectionName="runtime"/>
    </ItemGroup>

    <RemoveAssetFromDepsPackages DepsFile="$(FSharpDirectory)/tool_fsc.deps.json"
                                 SectionName="%(AssetsToRemoveFromDeps.SectionName)"
                                 AssetPath="%(AssetsToRemoveFromDeps.Identity)" />

    <!-- Deploy deps and runtime config for fsc.exe and fsi.exe.  Both apps have exactly the same dependencies so this is Ok -->
    <Copy SourceFiles="$(FSharpDirectory)/tool_fsc.runtimeconfig.json;
                       $(FSharpDirectory)/tool_fsc.deps.json;"
          DestinationFiles="$(FSharpDirectory)/fsc.runtimeconfig.json;
                            $(FSharpDirectory)/fsc.deps.json;"/>
    <Copy SourceFiles="$(FSharpDirectory)/tool_fsc.runtimeconfig.json;
                       $(FSharpDirectory)/tool_fsc.deps.json;"
          DestinationFiles="$(FSharpDirectory)/fsi.runtimeconfig.json;
                            $(FSharpDirectory)/fsi.deps.json;"/>
  </Target>

  <Target Name="RemoveFscFilesAfterPublish"
          AfterTargets="Build">
    <Delete Files="$(FSharpDirectory)/tool_fsc.dll" />
    <Delete Files="$(FSharpDirectory)/tool_fsc.pdb" />
    <Delete Files="$(FSharpDirectory)/tool_fsc.runtimeconfig.json" />
    <Delete Files="$(FSharpDirectory)/tool_fsc.deps.json" />
  </Target>

  <Target Name="PublishBlazorWasmTools"
          BeforeTargets="PublishNetSdks">
    <MSBuild
      Targets="Publish"
      Projects="$(RepoRoot)/src/BlazorWasmSdk/Tool/Microsoft.NET.Sdk.BlazorWebAssembly.Tool.csproj"
      Properties="Configuration=$(Configuration)" />
  </Target>

  <Target Name="MoveBlazorWasmTools" AfterTargets="PublishBlazorWasmTools">
    <ItemGroup>
      <_WebAssemblyToolsOutput Include="$(ArtifactsBinDir)Microsoft.NET.Sdk.BlazorWebAssembly.Tool\$(Configuration)\$(SdkTargetFramework)\publish\*.*" />
    </ItemGroup>

    <Error
      Text="WebAssembly SDK tools outputs were not found in $(ArtifactsBinDir)Microsoft.NET.Sdk.BlazorWebAssembly.Tool\$(Configuration)\$(SdkTargetFramework)\publish"
      Condition="'@(_WebAssemblyToolsOutput->Count())' == '0'" />

    <Copy
      SourceFiles="@(_WebAssemblyToolsOutput)"
      DestinationFolder="$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.BlazorWebAssembly\tools\$(SdkTargetFramework)\"
      SkipUnchangedFiles="true" />
  </Target>

  <Target Name="PublishStaticWebAssetsTools"
          BeforeTargets="PublishNetSdks">
    <MSBuild
      Targets="Publish"
      Projects="$(RepoRoot)/src/StaticWebAssetsSdk/Tool/Microsoft.NET.Sdk.StaticWebAssets.Tool.csproj"
      Properties="Configuration=$(Configuration)" />
  </Target>

  <Target Name="MoveStaticWebAssetsTools" AfterTargets="PublishStaticWebAssetsTools">
    <ItemGroup>
      <_StaticWebAssetsToolsOutput Include="$(ArtifactsBinDir)Microsoft.NET.Sdk.StaticWebAssets.Tool\$(Configuration)\$(SdkTargetFramework)\publish\*.*" />
    </ItemGroup>

    <Error
      Text="StaticWebAssets SDK tools outputs were not found in $(ArtifactsBinDir)Microsoft.NET.Sdk.StaticWebAssets.Tool\$(Configuration)\$(SdkTargetFramework)\publish"
      Condition="'@(_StaticWebAssetsToolsOutput->Count())' == '0'" />

    <Copy
      SourceFiles="@(_StaticWebAssetsToolsOutput)"
      DestinationFolder="$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.StaticWebAssets\tools\$(SdkTargetFramework)\"
      SkipUnchangedFiles="true" />
  </Target>

  <Target Name="PublishRazorSdkTools"
          BeforeTargets="PublishNetSdks">
    <MSBuild
      Targets="Publish"
      Projects="$(RepoRoot)/src/RazorSdk/Tool/Microsoft.NET.Sdk.Razor.Tool.csproj"
      Properties="Configuration=$(Configuration)" />
  </Target>

  <Target Name="MoveRazorSdkTools" AfterTargets="PublishRazorSdkTools">
    <ItemGroup>
      <_RazorToolOutput Include="$(ArtifactsBinDir)Microsoft.NET.Sdk.Razor.Tool\$(Configuration)\$(SdkTargetFramework)\publish\*.*" />
      <!-- To reduce the size of the SDK, we use the compiler dependencies that are located in the `Rosyln/bincore` location
      instead of shipping our own copies in the Razor compiler. These assemblies will be resolved by path in the
      rzc executable. -->
      <_RazorToolOutput Remove="$(ArtifactsBinDir)Microsoft.NET.Sdk.Razor.Tool\$(Configuration)\$(SdkTargetFramework)\publish\Microsoft.CodeAnalysis.dll" />
      <_RazorToolOutput Remove="$(ArtifactsBinDir)Microsoft.NET.Sdk.Razor.Tool\$(Configuration)\$(SdkTargetFramework)\publish\Microsoft.CodeAnalysis.CSharp.dll" />
      <_RazorSourceGeneratorsOutput Include="$(PkgMicrosoft_NET_Sdk_Razor_SourceGenerators_Transport)\source-generators\*" />
    </ItemGroup>

    <Copy
      SourceFiles="@(_RazorToolOutput)"
      DestinationFolder="$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.Razor\tools\"
      SkipUnchangedFiles="true" />
    <Copy
      SourceFiles="@(_RazorSourceGeneratorsOutput)"
      DestinationFolder="$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.Razor\source-generators\"
      SkipUnchangedFiles="true" />
  </Target>

  <Target Name="PublishTargetExtensions"
          AfterTargets="Build"
          BeforeTargets="GenerateCliRuntimeConfigurationFiles">
      <PropertyGroup>
        <MSBuildTargetsDirectory>$(OutputPath)runtimes/any/native</MSBuildTargetsDirectory>
      </PropertyGroup>

      <ItemGroup>
        <NuPkgContentForMSBuildExtensions Include="
          $(MSBuildTargetsDirectory)/**/*.targets;
          $(MSBuildTargetsDirectory)/**/*.props;
          $(MSBuildTargetsDirectory)/**/*.overridetasks;
          $(MSBuildTargetsDirectory)/**/*.tasks" />

        <NuPkgContentForMSBuildExtensionsRelativePaths Include="@(NuPkgContentForMSBuildExtensions->'runtimes/any/native/%(RecursiveDir)%(Filename)%(Extension)')" />
      </ItemGroup>

      <Copy SourceFiles="@(NuPkgContentForMSBuildExtensions)"
            DestinationFiles="@(NuPkgContentForMSBuildExtensions->'$(OutputPath)/%(RecursiveDir)%(Filename)%(Extension)')" />

      <RemoveAssetFromDepsPackages DepsFile="$(OutputPath)/$(TargetName).deps.json"
                                   SectionName="runtimeTargets"
                                   AssetPath="%(NuPkgContentForMSBuildExtensionsRelativePaths.Identity)" />
  </Target>

  <!-- The msdia140typelib_clr0200.dll file is not MIT licensed (and it only used on Windows). Remove it, so
       we can MIT license the published dotnet -->
  <Target Name="RemoveMSDiaTypeLib"
          AfterTargets="Build"
          Condition="'$(OSName)' != 'win'">
    <Delete Files="$(OutputPath)/TestHost/msdia140typelib_clr0200.dll" />
  </Target>

  <Target Name="PublishSdks"
          AfterTargets="Build">
    <ItemGroup>
      <SdksToBundle Include="targets\RestoreDependency.proj">
        <Properties>
          NuGetPackageRoot=$(NuGetPackageRoot);
          SdkLayoutDirectory=$(OutputPath)/Sdks/%(BundledSdk.Identity);
          DependencyPackageName=%(BundledSdk.Identity);
          DependencyPackageVersion=%(BundledSdk.Version);
          PreviousStageDirectory=$(PreviousStageDirectory)
        </Properties>
      </SdksToBundle>
    </ItemGroup>

    <MSBuild
      BuildInParallel="False"
      Projects="@(SdksToBundle)">
    </MSBuild>

    <!-- The WPF SDK .nupkg includes some files in the root that we don't want to bundle, so delete them -->
    <ItemGroup>
      <SDKFilesToDelete Include="$(OutputPath)/Sdks/Microsoft.NET.Sdk.Wpf/*" />
      <SDKFilesToDelete Include="$(OutputPath)/Sdks/**/*.nupkg.metadata" />
      <SDKFilesToDelete Include="$(OutputPath)/Sdks/**/*.signature.p7s" />
    </ItemGroup>
    <Delete Files="@(SDKFilesToDelete)" />
  </Target>

  <Target Name="ChmodPublishDir"
          AfterTargets="GenerateCliRuntimeConfigurationFiles"
          Condition=" '$(OSName)' != 'win' ">

    <Exec Command="find $(OutputPath) -type d -exec chmod 755 {} \;" />
    <Exec Command="find $(OutputPath) -type f -exec chmod 644 {} \;" />
  </Target>

  <Target Name="DeleteSymbolsFromPublishDir"
          AfterTargets="GenerateCliRuntimeConfigurationFiles">
    <ItemGroup>
      <PdbsToDelete Include="$(OutputPath)/**/*.pdb" />
      <PdbsToDelete Include="$(OutputPath)/**/*.ni.*.map" />
    </ItemGroup>

    <Delete Files="@(PdbsToDelete)" />
  </Target>

  <Target Name="RetargetTools"
          BeforeTargets="PublishStage2WithBackwardsCompatibleRuntimes"
          AfterTargets="Build">
    <PropertyGroup>
      <ReplacementPattern>"version": ".*"</ReplacementPattern>
      <ReplacementString>"version": "$(MicrosoftNETCoreAppRuntimePackageVersion)"</ReplacementString>
    </PropertyGroup>
    <ItemGroup>
      <!-- Exclude F# from retargeting: https://github.com/dotnet/toolset/issues/2866 -->
      <!-- Exclude testhost from retargeting: https://github.com/dotnet/sdk/issues/24769 -->
      <ToolRuntimeConfigPath Include="$(OutputPath)/**/*.runtimeconfig.json"
                             Exclude="$(OutputPath)/**/fsc.runtimeconfig.json;$(OutputPath)/**/fsi.runtimeconfig.json;$(OutputPath)/**/testhost-*.runtimeconfig.json"/>

      <MSBuild15Items Include="$(OutputPath)/15.0/**/*" />
    </ItemGroup>
    <ReplaceFileContents
      InputFiles="@(ToolRuntimeConfigPath)"
      DestinationFiles="@(ToolRuntimeConfigPath)"
      ReplacementPatterns="$(ReplacementPattern)"
      ReplacementStrings="$(ReplacementString)" />

    <Move
      SourceFiles="@(MSBuild15Items)"
      DestinationFiles="@(MSBuild15Items -> '$(OutputPath)/Current/%(RecursiveDir)%(Filename)%(Extension)')" />

    <RemoveDir Directories="$(OutputPath)/15.0" />
  </Target>

  <Target Name="GenerateLayout"
          DependsOnTargets="PublishVersionFile;
                            PublishRoslyn;
                            PublishMSBuildExtensions;
                            PublishFSharp;
                            PublishBlazorWasmTools;
                            PublishStaticWebAssetsTools;
                            GenerateCliRuntimeConfigurationFiles;
                            MakeFscRunnableAndMoveToPublishDir;
                            RemoveFscFilesAfterPublish;
                            PublishTargetExtensions;
                            RemoveMSDiaTypeLib;
                            PublishSdks;
                            ChmodPublishDir;
                            DeleteSymbolsFromPublishDir;
                            RetargetTools;
                            GetDotnetWatchRedistOutputDirectory"
          AfterTargets="Build">
    <PropertyGroup>
      <LayoutDirectory>$(BaseOutputPath)$(Configuration)\layouts\</LayoutDirectory>
      <SdkLayoutOutputDirectory>$(LayoutDirectory)$(ArtifactNameSdk)</SdkLayoutOutputDirectory>
      <SdkLanguagePackOutputDirectory>$(LayoutDirectory)$(ArtifactNameSdkLanguagePack)</SdkLanguagePackOutputDirectory>
    </PropertyGroup>

    <ItemGroup>
      <ToolsetLayoutInput Include="$(OutputPath)/**/*" />
      <ToolsetLanguagePackInput Include="$(OutputPath)/**/*.resources.dll" />

      <!--
        Include redist outputs published by dotnet-watch.csproj build.
      -->
      <ToolsetLayoutInput Include="$(DotnetWatchRedistOutputDirectory)/**/*" LayoutSubdirectory="DotnetTools\dotnet-watch\"/>
      <ToolsetLanguagePackInput Include="$(DotnetWatchRedistOutputDirectory)/**/*.resources.dll" LayoutSubdirectory="DotnetTools\dotnet-watch\"/>
    </ItemGroup>

    <!-- Set up Items Defining Layouts for easy change -->
    <ItemGroup>
      <LayoutDefinition Include="Sdk">
        <InputFiles>@(ToolsetLayoutInput)</InputFiles>
        <OutputFiles>@(ToolsetLayoutInput -> '$(SdkLayoutOutputDirectory)\%(LayoutSubdirectory)%(RecursiveDir)%(Filename)%(Extension)')</OutputFiles>
      </LayoutDefinition>

      <LayoutDefinition Include="SdkLanguagePack">
        <InputFiles>@(ToolsetLanguagePackInput)</InputFiles>
        <OutputFiles>@(ToolsetLanguagePackInput -> '$(SdkLanguagePackOutputDirectory)\%(LayoutSubdirectory)%(RecursiveDir)%(Filename)%(Extension)')</OutputFiles>
      </LayoutDefinition>
    </ItemGroup>

    <Copy SourceFiles="%(LayoutDefinition.InputFiles)"
          DestinationFiles="%(LayoutDefinition.OutputFiles)"
          SkipUnchangedFiles="true" />
  </Target>
</Project>
