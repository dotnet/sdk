<Project>

  <ItemGroup>
    <PackageDownload Include="Microsoft.NETCore.Platforms" Version="[$(MicrosoftNETCorePlatformsPackageVersion)]" />
  </ItemGroup>

  <Target Name="PublishPortableRuntimeIdentifierGraph">
    <Copy SourceFiles="$(NuGetPackageRoot)/microsoft.netcore.platforms/$(MicrosoftNETCorePlatformsPackageVersion)/runtime.json"
          DestinationFiles="$(OutputPath)RuntimeIdentifierGraph.json"
          SkipUnchangedFiles="true" />

    <Copy SourceFiles="$(NuGetPackageRoot)/microsoft.netcore.platforms/$(MicrosoftNETCorePlatformsPackageVersion)/PortableRuntimeIdentifierGraph.json"
          DestinationFolder="$(OutputPath)"
          SkipUnchangedFiles="true" />

    <GenerateSdkRuntimeIdentifierChain
          RuntimeIdentifier="$(PortableProductMonikerRid)"
          RuntimeIdentifierGraphPath="$(OutputPath)PortableRuntimeIdentifierGraph.json"
          RuntimeIdentifierChainOutputPath="$(OutputPath)NETCoreSdkRuntimeIdentifierChain.txt" />
  </Target>

  <Target Name="PublishVersionFile">
    <WriteLinesToFile File="$(OutputPath).toolsetversion"
                      Lines="$(SourceRevisionId);$(Version);$(TargetRid)"
                      Overwrite="true" />

    <WriteLinesToFile File="$(OutputPath).version"
                      Lines="$(SourceRevisionId);$(Version);$(TargetRid);$(FullNugetVersion);$(SdkFeatureBand)"
                      Overwrite="true" />

    <!-- Development env and CI loads DotnetFiles type from the following location
         The resolution of the product version (https://github.com/dotnet/sdk/blob/main/src/Cli/Microsoft.DotNet.Cli.Utils/DotnetFiles.cs#L21)
         then need the version file there as well. -->
    <Copy SourceFiles="$(OutputPath).version"
          DestinationFiles="$(BaseOutputPath)$(Configuration)/.version"
          SkipUnchangedFiles="true" />
  </Target>

  <Target Name="PublishRoslyn">
    <PropertyGroup>
      <RoslynDirectory>$(OutputPath)/Roslyn</RoslynDirectory>
    </PropertyGroup>

    <ItemGroup>
      <RoslynBits Include="$(NuGetPackageRoot)/microsoft.net.compilers.toolset/$(MicrosoftNetCompilersToolsetVersion)/tasks/netcore/**/*" />
    </ItemGroup>

    <Error Condition="'@(RoslynBits)' == ''" Text="Something moved around in Roslyn package, adjust code here accordingly. TFM change?" />
    <Copy SourceFiles="@(RoslynBits)" DestinationFiles="@(RoslynBits->'$(RoslynDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />

    <ItemGroup>
      <RoslynFrameworkAssemblies Include="$(RoslynDirectory)/System.*.dll;$(RoslynDirectory)/runtimes/**/System.*.dll" Exclude="$(RoslynDirectory)/runtimes/**/System.IO.Pipes.AccessControl.dll"/>
    </ItemGroup>

    <Delete Files="@(RoslynFrameworkAssemblies)" />
  </Target>

  <Target Name="PublishNETAnalyzers">
    <PropertyGroup>
      <AnalyzerAssembliesDirectory>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk\analyzers</AnalyzerAssembliesDirectory>
      <AnalyzerTargetsDirectory>$(AnalyzerAssembliesDirectory)\build</AnalyzerTargetsDirectory>
      <AnalyzerConfigDirectory>$(AnalyzerTargetsDirectory)\config</AnalyzerConfigDirectory>
      <CodeStyleAssembliesCSharpDirectory>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk\codestyle\cs</CodeStyleAssembliesCSharpDirectory>
      <CodeStyleAssembliesVisualBasicDirectory>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk\codestyle\vb</CodeStyleAssembliesVisualBasicDirectory>
      <CodeStyleCSharpTargetsDirectory>$(CodeStyleAssembliesCSharpDirectory)\build</CodeStyleCSharpTargetsDirectory>
      <CodeStyleVisualBasicTargetsDirectory>$(CodeStyleAssembliesVisualBasicDirectory)\build</CodeStyleVisualBasicTargetsDirectory>
      <CodeStyleCSharpConfigDirectory>$(CodeStyleCSharpTargetsDirectory)\config</CodeStyleCSharpConfigDirectory>
      <CodeStyleVisualBasicConfigDirectory>$(CodeStyleVisualBasicTargetsDirectory)\config</CodeStyleVisualBasicConfigDirectory>
    </PropertyGroup>

    <ItemGroup>
      <AnalyzerAssemblies Include="$(PkgMicrosoft_CodeAnalysis_NetAnalyzers)/analyzers/dotnet/cs/**/*.dll" />
      <AnalyzerAssemblies Include="$(PkgMicrosoft_CodeAnalysis_NetAnalyzers)/analyzers/dotnet/vb/Microsoft.CodeAnalysis.VisualBasic.NetAnalyzers.dll" />
      <AnalyzerTargets Include="$(PkgMicrosoft_CodeAnalysis_NetAnalyzers)/buildTransitive/Microsoft.CodeAnalysis.NetAnalyzers.props" />
      <AnalyzerTargets Include="$(PkgMicrosoft_CodeAnalysis_NetAnalyzers)/buildTransitive/Microsoft.CodeAnalysis.NetAnalyzers.targets" />
      <AnalyzerConfig Include="$(PkgMicrosoft_CodeAnalysis_NetAnalyzers)/buildTransitive/config/**/*" />

      <CodeStyleCSharpAssemblies Include="$(PkgMicrosoft_CodeAnalysis_CSharp_CodeStyle)/analyzers/dotnet/cs/**/*.dll" />
      <CodeStyleVisualBasicAssemblies Include="$(PkgMicrosoft_CodeAnalysis_VisualBasic_CodeStyle)/analyzers/dotnet/vb/**/*.dll" />
      <!-- The props files from these packages explicitly say they should never be included in the SDK -->
      <CodeStyleCSharpTargets Include="$(PkgMicrosoft_CodeAnalysis_CSharp_CodeStyle)/build/Microsoft.CodeAnalysis.CSharp.CodeStyle.targets" />
      <CodeStyleVisualBasicTargets Include="$(PkgMicrosoft_CodeAnalysis_VisualBasic_CodeStyle)/build/Microsoft.CodeAnalysis.VisualBasic.CodeStyle.targets" />
      <!-- The files in the build/config folder are identical across packages -->
      <CodeStyleCSharpConfig Include="$(PkgMicrosoft_CodeAnalysis_CSharp_CodeStyle)/build/config/**/*" />
      <CodeStyleVisualBasicConfig Include="$(PkgMicrosoft_CodeAnalysis_VisualBasic_CodeStyle)/build/config/**/*" />
    </ItemGroup>

    <Error Condition="'@(AnalyzerAssemblies)' == ''" Text="Something moved around in Analyzer package, adjust code here accordingly. TFM change?" />
    <Error Condition="'@(AnalyzerTargets)' == ''" Text="Something moved around in Analyzer package, adjust code here accordingly. TFM change?" />
    <Error Condition="'@(AnalyzerConfig)' == ''" Text="Something moved around in Analyzer package, adjust code here accordingly. TFM change?" />
    <Error Condition="'@(CodeStyleCSharpAssemblies)' == ''" Text="Something moved around in the C# Code style package, could not find assembles. Adjust code here accordingly. TFM change?" />
    <Error Condition="'@(CodeStyleVisualBasicAssemblies)' == ''" Text="Something moved around in the VB Code style package, could not find assembles. Adjust code here accordingly. TFM change?" />
    <Error Condition="'@(CodeStyleCSharpTargets)' == ''" Text="Something moved around in Code style packeges, could not find targets/props. Adjust code here accordingly. TFM change?" />
    <Error Condition="'@(CodeStyleVisualBasicTargets)' == ''" Text="Something moved around in Code style packeges, could not find targets/props. Adjust code here accordingly. TFM change?" />
    <Error Condition="'@(CodeStyleCSharpConfig)' == ''" Text="Something moved around in Code style packeges, could not find globalconfig files. Adjust code here accordingly. TFM change?" />
    <Error Condition="'@(CodeStyleVisualBasicConfig)' == ''" Text="Something moved around in Code style packeges, could not find globalconfig files. Adjust code here accordingly. TFM change?" />

    <Copy SourceFiles="@(AnalyzerAssemblies)" DestinationFiles="@(AnalyzerAssemblies->'$(AnalyzerAssembliesDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(AnalyzerTargets)" DestinationFiles="@(AnalyzerTargets->'$(AnalyzerTargetsDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(AnalyzerConfig)" DestinationFiles="@(AnalyzerConfig->'$(AnalyzerConfigDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(CodeStyleCSharpAssemblies)" DestinationFiles="@(CodeStyleCSharpAssemblies->'$(CodeStyleAssembliesCSharpDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(CodeStyleVisualBasicAssemblies)" DestinationFiles="@(CodeStyleVisualBasicAssemblies->'$(CodeStyleAssembliesVisualBasicDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(CodeStyleCSharpTargets)" DestinationFiles="@(CodeStyleCSharpTargets->'$(CodeStyleCSharpTargetsDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(CodeStyleVisualBasicTargets)" DestinationFiles="@(CodeStyleVisualBasicTargets->'$(CodeStyleVisualBasicTargetsDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(CodeStyleCSharpConfig)" DestinationFiles="@(CodeStyleCSharpConfig->'$(CodeStyleCSharpConfigDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(CodeStyleVisualBasicConfig)" DestinationFiles="@(CodeStyleVisualBasicConfig->'$(CodeStyleVisualBasicConfigDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(ILLinkAnalyzersTargets)" DestinationFiles="@(ILLinkAnalyzersTargets->'$(AnalyzerTargetsDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(ILLinkAnalyzersAssemblies)" DestinationFiles="@(ILLinkAnalyzersAssemblies->'$(AnalyzerAssembliesDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <Target Name="PublishDotnetFormat">
    <PropertyGroup>
      <DotnetFormatDestinationDirectory>$(OutputPath)/DotnetTools/dotnet-format</DotnetFormatDestinationDirectory>
    </PropertyGroup>

    <ItemGroup>
      <DotnetFormatDllFiles Include="$(ArtifactsBinDir)/dotnet-format/$(Configuration)/$(NetCurrent)/**/*.dll" />
      <DotnetFormatDllFiles Include="$(ArtifactsBinDir)/dotnet-format/$(Configuration)/$(NetCurrent)/**/*.exe" />
      <DotnetFormatConfigFiles Include="$(ArtifactsBinDir)/dotnet-format/$(Configuration)/$(NetCurrent)/**/*.json" />
      <DotnetFormatConfigFiles Include="$(ArtifactsBinDir)/dotnet-format/$(Configuration)/$(NetCurrent)/**/*.config" />
    </ItemGroup>

    <Copy SourceFiles="@(DotnetFormatDllFiles)" DestinationFiles="@(DotnetFormatDllFiles->'$(DotnetFormatDestinationDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(DotnetFormatConfigFiles)" DestinationFiles="@(DotnetFormatConfigFiles->'$(DotnetFormatDestinationDirectory)/%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <Target Name="PublishMSBuildExtensions">
    <PropertyGroup>
      <MSBuildExtensionsPackageName>Microsoft.NET.Build.Extensions</MSBuildExtensionsPackageName>
      <MSBuildExtensionsVersionSubfolder>Current</MSBuildExtensionsVersionSubfolder>
      <MSBuildExtensionsSourceRoot>$(ArtifactsBinDir)$(Configuration)\Sdks\$(MSBuildExtensionsPackageName)</MSBuildExtensionsSourceRoot>
    </PropertyGroup>

    <ItemGroup>
      <!-- Include MSBuild imports that are checked into repo -->
      <MSBuildExtensionsContent Include="$(MSBuildProjectDirectory)/MSBuildImports/**/*" />
      <MSBuildExtensionsContent Include="$(MSBuildExtensionsSourceRoot)\msbuildExtensions\**\*.*" />

      <!-- Don't include .NET Framework MS.NET.Build.Extensions tasks in CLI layout -->
      <MSBuildExtensionsContent Remove="$(MSBuildExtensionsSourceRoot)\msbuildExtensions\Microsoft\Microsoft.NET.Build.Extensions\tools\net472\**" />

      <MSBuildExtensionsContent Include="$(MSBuildExtensionsSourceRoot)\msbuildExtensions-ver\**\*.*"
                                DeploymentSubpath="$(MSBuildExtensionsVersionSubfolder)/" />
    </ItemGroup>

    <Copy SourceFiles="@(MSBuildExtensionsContent)"
          DestinationFiles="@(MSBuildExtensionsContent->'$(OutputPath)\%(DeploymentSubpath)\%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <Target Name="PublishNetSdks" DependsOnTargets="PublishNETAnalyzers;PublishDotnetFormat;PublishBlazorWasmTools;PublishStaticWebAssetsTools;PublishRazorSdkTools">
    <ItemGroup>
      <WebSdkProjectFile Include="$(RepoRoot)src\WebSdk\**\*.csproj" />
    </ItemGroup>

    <MSBuild Projects="@(WebSdkProjectFile)" />

    <PropertyGroup>
      <NETSdkSourceRoot>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk</NETSdkSourceRoot>
      <NETSdkWebSourceRoot>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.Web</NETSdkWebSourceRoot>
      <NETSdkPublishSourceRoot>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.Publish</NETSdkPublishSourceRoot>
      <NETSdkWebProjectSystemSourceRoot>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.Web.ProjectSystem</NETSdkWebProjectSystemSourceRoot>
      <NETSdkWorkerSourceRoot>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.Worker</NETSdkWorkerSourceRoot>
      <NETSdkBlazorWasmSourceRoot>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.BlazorWebAssembly</NETSdkBlazorWasmSourceRoot>
      <NETSdkWasmSourceRoot>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.WebAssembly</NETSdkWasmSourceRoot>
      <NETSdkRazorSourceRoot>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.Razor</NETSdkRazorSourceRoot>
      <NETSdkStaticWebAssetsSourceRoot>$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.StaticWebAssets</NETSdkStaticWebAssetsSourceRoot>
    </PropertyGroup>

    <ItemGroup>
      <NETSdksContent Include="$(NETSdkSourceRoot)\**\*.*"
                     DeploymentSubPath="Sdks\Microsoft.NET.Sdk"/>
      <NETSdksContent Include="$(NETSdkWebSourceRoot)\**\*.*"
                     DeploymentSubPath="Sdks\Microsoft.NET.Sdk.Web"/>
      <NETSdksContent Include="$(NETSdkPublishSourceRoot)\**\*.*"
                     DeploymentSubPath="Sdks\Microsoft.NET.Sdk.Publish"/>
      <NETSdksContent Include="$(NETSdkWebProjectSystemSourceRoot)\**\*.*"
                     DeploymentSubPath="Sdks\Microsoft.NET.Sdk.Web.ProjectSystem"/>
      <NETSdksContent Include="$(NETSdkWorkerSourceRoot)\**\*.*"
                     DeploymentSubPath="Sdks\Microsoft.NET.Sdk.Worker"/>
      <NETSdksContent Include="$(NETSdkBlazorWasmSourceRoot)\**\*.*"
                     DeploymentSubPath="Sdks\Microsoft.NET.Sdk.BlazorWebAssembly"/>
      <NETSdksContent Include="$(NETSdkWasmSourceRoot)\**\*.*"
                     DeploymentSubPath="Sdks\Microsoft.NET.Sdk.WebAssembly"/>
      <NETSdksContent Include="$(NETSdkRazorSourceRoot)\**\*.*"
                     DeploymentSubPath="Sdks\Microsoft.NET.Sdk.Razor"/>
      <NETSdksContent Include="$(NETSdkStaticWebAssetsSourceRoot)\**\*.*"
                     DeploymentSubPath="Sdks\Microsoft.NET.Sdk.StaticWebAssets"/>
    </ItemGroup>

    <Copy SourceFiles="@(NETSdksContent)"
          DestinationFiles="@(NETSdksContent->'$(OutputPath)\%(DeploymentSubpath)\%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <Target Name="PublishTestCli">
    <PropertyGroup>
      <TestCliNuGetDirectoryTargetFramework Condition="'$(DotNetBuildSourceOnly)' != 'true'" >net9.0</TestCliNuGetDirectoryTargetFramework>
      <TestCliNuGetDirectoryTargetFramework Condition="'$(DotNetBuildSourceOnly)' == 'true' and '$(DotNetBuildOrchestrator)' == 'true'" >$(NetCurrent)</TestCliNuGetDirectoryTargetFramework>
      <TestCliNuGetDirectoryTargetFramework Condition="'$(DotNetBuildSourceOnly)' == 'true' and '$(DotNetBuildOrchestrator)' != 'true'" >net9.0</TestCliNuGetDirectoryTargetFramework>
      <TestCliNuGetDirectory>$(NuGetPackageRoot)/microsoft.testplatform.cli/$(MicrosoftTestPlatformCLIPackageVersion)/contentFiles/any/$(TestCliNuGetDirectoryTargetFramework)/</TestCliNuGetDirectory>
    </PropertyGroup>

    <ItemGroup>
      <!-- https://github.com/microsoft/vstest/issues/1886 -->
      <TestCliBitsToExclude Include="$(TestCliNuGetDirectory)NewtonSoft.Json.dll" />
      <TestCliBitsToExclude Include="$(TestCliNuGetDirectory)Microsoft.Extensions.DependencyModel.dll" />
      <TestCliBitsToExclude Include="$(TestCliNuGetDirectory)Microsoft.Extensions.FileSystemGlobbing.dll" />
      <TestCliBitsToExclude Include="$(TestCliNuGetDirectory)System.Memory.dll" />
      <TestCliBitsToExclude Include="$(TestCliNuGetDirectory)System.Runtime.CompilerServices.Unsafe.dll" />
      <TestCliBitsToExclude Include="$(TestCliNuGetDirectory)NuGet.Frameworks.dll" />
      <TestCliBitsToExclude Include="$(TestCliNuGetDirectory)System.Text.Json.dll" />
      <TestCliBits Include="$(TestCliNuGetDirectory)**/*"
                   Exclude="@(TestCliBitsToExclude)" />
    </ItemGroup>

    <Error Condition="'@(TestCliBits)' == ''" Text="Something moved around in Test CLI package, adjust code here accordingly. TFM change?" />
    <Copy SourceFiles="@(TestCliBits)" DestinationFiles="@(TestCliBits->'$(OutputPath)/%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <Target Name="PublishFSharp">
    <MSBuild
      Targets="Publish"
      Projects="$(MSBuildProjectDirectory)\tools\tool_fsc.csproj"
      Properties="Configuration=$(Configuration);PublishDir=$(OutputPath)/FSharp" />
  </Target>

  <Target Name="PublishContainersSdk">
    <ItemGroup>
      <BuildFiles Include="$(RepoRoot)/src/Containers/packaging/build/Microsoft.NET.Build.Containers.props" />
      <BuildFiles Include="$(RepoRoot)/src/Containers/packaging/build/Microsoft.NET.Build.Containers.targets" />
    </ItemGroup>

    <Copy SourceFiles="@(BuildFiles)" DestinationFolder="$(OutputPath)/Containers/build" />

    <MSBuild
      Targets="Publish"
      Projects="$(RepoRoot)/src/Containers/Microsoft.NET.Build.Containers/Microsoft.NET.Build.Containers.csproj"
      Properties="Configuration=$(Configuration);PublishDir=$(OutputPath)/Containers/tasks/net472;TargetFramework=net472"
      Condition="'$(OSName)' == 'win'" />
    <MSBuild
      Targets="Publish"
      Projects="$(RepoRoot)/src/Containers/Microsoft.NET.Build.Containers/Microsoft.NET.Build.Containers.csproj"
      Properties="Configuration=$(Configuration);PublishDir=$(OutputPath)/Containers/tasks/$(SdkTargetFramework);TargetFramework=$(SdkTargetFramework)" />
    <MSBuild
      Targets="Publish"
      Projects="$(RepoRoot)/src/Containers/containerize/containerize.csproj"
      Properties="Configuration=$(Configuration);PublishDir=$(OutputPath)/Containers/containerize"
      Condition="'$(OSName)' == 'win'" />
  </Target>

  <Target Name="GenerateCliRuntimeConfigurationFiles" DependsOnTargets="PublishTargetExtensions">
    <ItemGroup>
      <BundledTools Include="MSBuild;
                            dotnet;
                            NuGet.CommandLine.XPlat" />

      <BundledToolProjects Include="tool_msbuild;
                                    tool_nuget;
                                    tool_cli;
                                    redist;" />
    </ItemGroup>

    <RemoveAssetFromDepsPackages DepsFile="$(OutputPath)/$(TargetName).deps.json"
                                 SectionName="runtime"
                                 AssetPath="%(BundledToolProjects.Identity).dll" />

    <Copy SourceFiles="$(OutputPath)/$(TargetName).deps.json"
          DestinationFiles="$(OutputPath)/%(BundledTools.Identity).deps.json" />

    <Copy SourceFiles="$(OutputPath)/$(TargetName).runtimeconfig.json"
          DestinationFiles="$(OutputPath)/%(BundledTools.Identity).runtimeconfig.json" />

    <Delete Files="$(OutputPath)/$(TargetName).deps.json;
                   $(OutputPath)/$(TargetName).runtimeconfig.json" />

    <Delete Files="$(OutputPath)/%(BundledToolProjects.Identity).dll;
                   $(OutputPath)/%(BundledToolProjects.Identity).pdb" />

    <ChangeEntryPointLibraryName
          DepsFile="$(OutputPath)/%(BundledTools.Identity).deps.json"
          NewName="%(BundledTools.Identity).deps.json" />
  </Target>

  <Target Name="RemoveResourcesFromDotnetDeps">
    <RemoveAssetFromDepsPackages DepsFile="$(OutputPath)/dotnet.deps.json"
               SectionName="resources"
               AssetPath="*" />
  </Target>

  <Target Name="MakeFscRunnableAndMoveToPublishDir" BeforeTargets="RemoveFilesAfterPublish">
    <PropertyGroup>
      <FSharpDirectory>$(OutputPath)/FSharp</FSharpDirectory>
    </PropertyGroup>

    <ItemGroup>
      <AssetsToRemoveFromDeps Include="tool_fsc.dll"
                              SectionName="runtime"/>
    </ItemGroup>

    <RemoveAssetFromDepsPackages DepsFile="$(FSharpDirectory)/tool_fsc.deps.json"
                                 SectionName="%(AssetsToRemoveFromDeps.SectionName)"
                                 AssetPath="%(AssetsToRemoveFromDeps.Identity)" />

    <!-- Deploy deps and runtime config for fsc.exe and fsi.exe.  Both apps have exactly the same dependencies so this is Ok -->
    <Copy SourceFiles="$(FSharpDirectory)/tool_fsc.runtimeconfig.json;
                       $(FSharpDirectory)/tool_fsc.deps.json;"
          DestinationFiles="$(FSharpDirectory)/fsc.runtimeconfig.json;
                            $(FSharpDirectory)/fsc.deps.json;"/>
    <Copy SourceFiles="$(FSharpDirectory)/tool_fsc.runtimeconfig.json;
                       $(FSharpDirectory)/tool_fsc.deps.json;"
          DestinationFiles="$(FSharpDirectory)/fsi.runtimeconfig.json;
                            $(FSharpDirectory)/fsi.deps.json;"/>
  </Target>

  <Target Name="RemoveFscFilesAfterPublish">
    <Delete Files="$(FSharpDirectory)/tool_fsc.dll" />
    <Delete Files="$(FSharpDirectory)/tool_fsc.pdb" />
    <Delete Files="$(FSharpDirectory)/tool_fsc.runtimeconfig.json" />
    <Delete Files="$(FSharpDirectory)/tool_fsc.deps.json" />
  </Target>

  <Target Name="PublishBlazorWasmTools">
    <MSBuild
      Targets="Publish"
      Projects="$(RepoRoot)/src/BlazorWasmSdk/Tool/Microsoft.NET.Sdk.BlazorWebAssembly.Tool.csproj"
      Properties="Configuration=$(Configuration)" />

    <ItemGroup>
      <_WebAssemblyToolsOutput Include="$(ArtifactsBinDir)Microsoft.NET.Sdk.BlazorWebAssembly.Tool\$(Configuration)\$(SdkTargetFramework)\publish\*.*" />
    </ItemGroup>

    <Error
      Text="WebAssembly SDK tools outputs were not found in $(ArtifactsBinDir)Microsoft.NET.Sdk.BlazorWebAssembly.Tool\$(Configuration)\$(SdkTargetFramework)\publish"
      Condition="'@(_WebAssemblyToolsOutput->Count())' == '0'" />

    <Copy
      SourceFiles="@(_WebAssemblyToolsOutput)"
      DestinationFolder="$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.BlazorWebAssembly\tools\$(SdkTargetFramework)\"
      SkipUnchangedFiles="true" />
  </Target>

  <Target Name="PublishStaticWebAssetsTools">
    <MSBuild
      Targets="Publish"
      Projects="$(RepoRoot)/src/StaticWebAssetsSdk/Tool/Microsoft.NET.Sdk.StaticWebAssets.Tool.csproj"
      Properties="Configuration=$(Configuration)" />

    <ItemGroup>
      <_StaticWebAssetsToolsOutput Include="$(ArtifactsBinDir)Microsoft.NET.Sdk.StaticWebAssets.Tool\$(Configuration)\$(SdkTargetFramework)\publish\*.*" />
    </ItemGroup>

    <Error
      Text="StaticWebAssets SDK tools outputs were not found in $(ArtifactsBinDir)Microsoft.NET.Sdk.StaticWebAssets.Tool\$(Configuration)\$(SdkTargetFramework)\publish"
      Condition="'@(_StaticWebAssetsToolsOutput->Count())' == '0'" />

    <Copy
      SourceFiles="@(_StaticWebAssetsToolsOutput)"
      DestinationFolder="$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.StaticWebAssets\tools\$(SdkTargetFramework)\"
      SkipUnchangedFiles="true" />
  </Target>

  <Target Name="PublishRazorSdkTools">
    <MSBuild
      Targets="Publish"
      Projects="$(RepoRoot)/src/RazorSdk/Tool/Microsoft.NET.Sdk.Razor.Tool.csproj"
      Properties="Configuration=$(Configuration)" />

    <ItemGroup>
      <_RazorToolOutput Include="$(ArtifactsBinDir)Microsoft.NET.Sdk.Razor.Tool\$(Configuration)\$(SdkTargetFramework)\publish\*.*" />
      <!-- To reduce the size of the SDK, we use the compiler dependencies that are located in the `Rosyln/bincore` location
      instead of shipping our own copies in the Razor compiler. These assemblies will be resolved by path in the
      rzc executable. -->
      <_RazorToolOutput Remove="$(ArtifactsBinDir)Microsoft.NET.Sdk.Razor.Tool\$(Configuration)\$(SdkTargetFramework)\publish\Microsoft.CodeAnalysis.dll" />
      <_RazorToolOutput Remove="$(ArtifactsBinDir)Microsoft.NET.Sdk.Razor.Tool\$(Configuration)\$(SdkTargetFramework)\publish\Microsoft.CodeAnalysis.CSharp.dll" />
      <_RazorSourceGeneratorsOutput Include="$(PkgMicrosoft_NET_Sdk_Razor_SourceGenerators_Transport)\source-generators\*" />
    </ItemGroup>

    <Copy SourceFiles="@(_RazorToolOutput)"
      DestinationFolder="$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.Razor\tools\"
      SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(_RazorSourceGeneratorsOutput)"
      DestinationFolder="$(ArtifactsBinDir)$(Configuration)\Sdks\Microsoft.NET.Sdk.Razor\source-generators\"
      SkipUnchangedFiles="true" />
  </Target>

  <Target Name="PublishTargetExtensions">
      <PropertyGroup>
        <MSBuildTargetsDirectory>$(OutputPath)runtimes/any/native</MSBuildTargetsDirectory>
      </PropertyGroup>

      <ItemGroup>
        <NuPkgContentForMSBuildExtensions Include="
          $(MSBuildTargetsDirectory)/**/*.targets;
          $(MSBuildTargetsDirectory)/**/*.props;
          $(MSBuildTargetsDirectory)/**/*.overridetasks;
          $(MSBuildTargetsDirectory)/**/*.tasks" />

        <NuPkgContentForMSBuildExtensionsRelativePaths Include="@(NuPkgContentForMSBuildExtensions->'runtimes/any/native/%(RecursiveDir)%(Filename)%(Extension)')" />
      </ItemGroup>

      <Copy SourceFiles="@(NuPkgContentForMSBuildExtensions)"
            DestinationFiles="@(NuPkgContentForMSBuildExtensions->'$(OutputPath)/%(RecursiveDir)%(Filename)%(Extension)')" />

      <RemoveAssetFromDepsPackages DepsFile="$(OutputPath)/$(TargetName).deps.json"
                                   SectionName="runtimeTargets"
                                   AssetPath="%(NuPkgContentForMSBuildExtensionsRelativePaths.Identity)" />
  </Target>

  <Target Name="PublishDotnetWatchToRedist">
    <ItemGroup>
      <_DotnetWatchBuildOutput Include="$(ArtifactsBinDir)dotnet-watch\$(Configuration)\$(SdkTargetFramework)\**"/>

      <!--
        To reduce the size of the SDK, we use the compiler dependencies that are located in the `Roslyn/bincore` location
        instead of shipping our own copies in the dotnet-watch tool. These assemblies will be resolved by path in the
        dotnet-watch executable.

        We make an exception for the Microsoft.CodeAnalysis binaries deployed with the MSBuildWorkspace BuildHosts, since those don't
        have any logic to pick up Roslyn from another location. Those can be addressed a different way which tracked in
        https://github.com/dotnet/roslyn/issues/70945.
      -->
      <_DotnetWatchInputFile Include="@(_DotnetWatchBuildOutput)"
                             Condition="('%(Filename)' != 'Microsoft.CodeAnalysis' and
                                         '%(Filename)' != 'Microsoft.CodeAnalysis.resources' and
                                         '%(Filename)' != 'Microsoft.CodeAnalysis.CSharp' and
                                         '%(Filename)' != 'Microsoft.CodeAnalysis.CSharp.resources') or
                                        $([MSBuild]::ValueOrDefault('%(FullPath)', '').Contains('BuildHost'))" />
    </ItemGroup>

    <Copy SourceFiles="@(_DotnetWatchInputFile)"
          DestinationFiles="@(_DotnetWatchInputFile->'$(OutputPath)\DotnetTools\dotnet-watch\$(Version)\tools\$(SdkTargetFramework)\any\%(RecursiveDir)%(Filename)%(Extension)')"
          SkipUnchangedFiles="true">
      <Output TaskParameter="CopiedFiles" ItemName="FileWrites" />
    </Copy>
  </Target>

  <Target Name="CopyKnownWorkloadManifestFile">
    <ItemGroup>
      <WorkloadManifestFilesContent Include="$([MSBuild]::ValueOrDefault('%(BundledManifests.Identity)', '').ToLowerInvariant())" />
    </ItemGroup>

    <Error Text="No workload manifest content found." Condition="'@(WorkloadManifestFilesContent->Count())' == '0'" />

    <ItemGroup>
      <WorkloadManifestFilesContent Include="samsung.net.sdk.tizen" />
    </ItemGroup>

    <WriteLinesToFile File="$(OutputPath)KnownWorkloadManifests.txt"
                      Lines="@(WorkloadManifestFilesContent)"
                      Overwrite="true" />
  </Target>

  <Target Name="LayoutAppHostTemplate">
    <PropertyGroup>
      <NETCoreAppHostPackageName>Microsoft.NETCore.App.Host.$(SharedFrameworkRid)</NETCoreAppHostPackageName>
      <AppHostRestorePath>$(NuGetPackageRoot)$(NETCoreAppHostPackageName.ToLowerInvariant())\$(MicrosoftNETCoreAppHostPackageVersion)\</AppHostRestorePath>
      <AppHostTemplatePath>$(OutputPath)AppHostTemplate</AppHostTemplatePath>
      <AppHostExecutableName>AppHost$(ExeExtension)</AppHostExecutableName>
    </PropertyGroup>

    <ItemGroup>
      <AllFileOfRestoredAppHostPackage Include="$(AppHostRestorePath)\**\*.*" />
      <NativeRestoredAppHostNETCore Include="@(AllFileOfRestoredAppHostPackage)"
          Condition="'%(FileName)%(Extension)' == '$(AppHostExecutableName)'" />
    </ItemGroup>

    <Error Condition="@(NativeRestoredAppHostNETCore->Distinct()->Count()) != 1"
           Text="Failed to determine the $(NETCoreAppHostPackageName) executable in @(AllFileOfRestoredAppHostPackage)" />

    <Copy SourceFiles="@(NativeRestoredAppHostNETCore)" DestinationFolder="$(AppHostTemplatePath)" />

    <Message Text="Copy from @(NativeRestoredAppHostNETCore) to $(AppHostTemplatePath)." Importance="High" />
  </Target>

  <Target Name="ChmodPublishDir"
          DependsOnTargets="GenerateCliRuntimeConfigurationFiles"
          Condition="'$(OSName)' != 'win'">

    <Exec Command="find $(OutputPath) -type d -exec chmod 755 {} \;" />
    <Exec Command="find $(OutputPath) -type f -exec chmod 644 {} \;" />
  </Target>

  <Target Name="DeleteSymbolsFromPublishDir" DependsOnTargets="GenerateCliRuntimeConfigurationFiles">
    <ItemGroup>
      <PdbsToDelete Include="$(OutputPath)/**/*.pdb" />
      <PdbsToDelete Include="$(OutputPath)/**/*.ni.*.map" />
    </ItemGroup>

    <Delete Files="@(PdbsToDelete)" />
  </Target>

  <Target Name="RetargetTools">
    <ItemGroup>
      <!-- Exclude testhost from retargeting: https://github.com/dotnet/sdk/issues/24769 -->
      <ToolRuntimeConfigPath Include="$(OutputPath)**\*.runtimeconfig.json" Exclude="$(OutputPath)**\testhost-*.runtimeconfig.json" />
    </ItemGroup>

    <!-- Update runtimeconfig files for tools in the SDK to pin the shared frameworks to the version redistributed. -->
    <UpdateRuntimeConfig
      RuntimeConfigPaths="@(ToolRuntimeConfigPath)"
      MicrosoftNetCoreAppVersion="$(MicrosoftNETCoreAppRuntimePackageVersion)"
      MicrosoftAspNetCoreAppVersion="$(MicrosoftAspNetCoreAppRuntimePackageVersion)" />

    <ItemGroup>
      <MSBuild15Items Include="$(OutputPath)/15.0/**/*" />
    </ItemGroup>

    <Move
      SourceFiles="@(MSBuild15Items)"
      DestinationFiles="@(MSBuild15Items -> '$(OutputPath)/Current/%(RecursiveDir)%(Filename)%(Extension)')" />

    <RemoveDir Directories="$(OutputPath)/15.0" />
  </Target>

  <!-- Anything that goes into the sdk/$(Version) directory. -->
  <Target Name="GenerateSdkLayout"
          DependsOnTargets="PublishPortableRuntimeIdentifierGraph;
                            PublishVersionFile;
                            PublishRoslyn;
                            PublishMSBuildExtensions;
                            PublishNetSdks;
                            PublishTestCli;
                            PublishFSharp;
                            GeneratePackagePruneData;
                            PublishContainersSdk;
                            GenerateCliRuntimeConfigurationFiles;
                            MakeFscRunnableAndMoveToPublishDir;
                            RemoveFscFilesAfterPublish;
                            PublishTargetExtensions;
                            PublishSdks;
                            PublishDotnetWatchToRedist;
                            GenerateBundledVersions;
                            CopyKnownWorkloadManifestFile;
                            LayoutAppHostTemplate;
                            LayoutBundledTools;
                            DeleteSymbolsFromPublishDir;
                            RetargetTools;
                            RemoveResourcesFromDotnetDeps;
                            ChmodPublishDir"
          AfterTargets="Build" />

</Project>
