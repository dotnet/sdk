<Project>
  <Target Name="GetDotnetWatchRedistOutputDirectory">
    <PropertyGroup>
      <DotnetWatchRedistOutputDirectory>$(ArtifactsDir)bin\redist\$(Configuration)\dotnet\sdk\$(Version)\DotnetTools\dotnet-watch\</DotnetWatchRedistOutputDirectory>
      <DotnetWatchRedistOutputSubdirectory>$(Version)\tools\$(SdkTargetFramework)\any\</DotnetWatchRedistOutputSubdirectory>
    </PropertyGroup>
  </Target>

  <Target Name="_PublishDotnetWatchToRedist_Inputs">
    <ItemGroup>
      <_DotnetWatchBuildOutput Include="$(ArtifactsDir)bin\dotnet-watch\$(Configuration)\$(SdkTargetFramework)\**"/>

      <!--
        To reduce the size of the SDK, we use the compiler dependencies that are located in the `Roslyn/bincore` location
        instead of shipping our own copies in the dotnet-watch tool. These assemblies will be resolved by path in the
        dotnet-watch executable.

        We make an exception for the Microsoft.CodeAnalysis binaries deployed with the MSBuildWorkspace BuildHosts, since those don't
        have any logic to pick up Roslyn from another location. Those can be addressed a different way which tracked in
        https://github.com/dotnet/roslyn/issues/70945.
      -->
      <_DotnetWatchInputFile Include="@(_DotnetWatchBuildOutput)"
                             Condition="('%(Filename)' != 'Microsoft.CodeAnalysis' and
                                         '%(Filename)' != 'Microsoft.CodeAnalysis.resources' and
                                         '%(Filename)' != 'Microsoft.CodeAnalysis.CSharp' and
                                         '%(Filename)' != 'Microsoft.CodeAnalysis.CSharp.resources') or
                                        $([MSBuild]::ValueOrDefault('%(FullPath)', '').Contains('BuildHost'))" />
    </ItemGroup>
  </Target>

  <Target Name="PublishDotnetWatchToRedist"
          DependsOnTargets="GetDotnetWatchRedistOutputDirectory;_PublishDotnetWatchToRedist_Inputs">

    <Copy SourceFiles="@(_DotnetWatchInputFile)" DestinationFiles="@(_DotnetWatchInputFile->'$(DotnetWatchRedistOutputDirectory)$(DotnetWatchRedistOutputSubdirectory)%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />

    <ItemGroup>
      <FileWrites Include="@(_DotnetWatchInputFile->'$(DotnetWatchRedistOutputDirectory)$(DotnetWatchRedistOutputSubdirectory)%(RecursiveDir)%(Filename)%(Extension)')" />
    </ItemGroup>
  </Target>
</Project>
