<Project>

  <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../'))" />

  <PropertyGroup>
    <IsDebianBaseDistro Condition="$(HostRid.StartsWith('ubuntu')) or $(HostRid.StartsWith('debian'))">true</IsDebianBaseDistro>
    <IsRPMBasedDistro Condition="$(HostRid.StartsWith('rhel'))">true</IsRPMBasedDistro>
    <IsRPMBasedDistro Condition="$(HostRid.StartsWith('centos'))">true</IsRPMBasedDistro>
  </PropertyGroup>

  <PropertyGroup>
    <ArchiveExtension>.tar.gz</ArchiveExtension>
    <ArchiveExtension Condition="'$(BuildOS)' == 'windows'">.zip</ArchiveExtension>

    <InstallerExtension Condition="'$(BuildOS)' == 'windows'">.msi</InstallerExtension>
    <InstallerExtension Condition="'$(BuildOS)' == 'osx'">.pkg</InstallerExtension>
    <InstallerExtension Condition="'$(IsDebianBaseDistro)' == 'true'">.deb</InstallerExtension>
    <InstallerExtension Condition="'$(IsRPMBasedDistro)' == 'true'">.rpm</InstallerExtension>

    <BundleExtension Condition="'$(BuildOS)' == 'windows'">.exe</BundleExtension>
    <BundleExtension Condition="'$(BuildOS)' == 'osx'">$(InstallerExtension)</BundleExtension>
    <BundleExtension Condition="'$(IsDebianBaseDistro)' == 'true'">$(InstallerExtension)</BundleExtension>
    <BundleExtension Condition="'$(IsRPMBasedDistro)' == 'true'">$(InstallerExtension)</BundleExtension>

    <ExeExtension Condition="'$(BuildOS)' == 'windows'">.exe</ExeExtension>
  </PropertyGroup>

  <PropertyGroup>
    <SkipBuildingInstallers Condition="'$(DotNetBuildSourceOnly)' == 'true'">true</SkipBuildingInstallers>
    <SkipBuildingInstallers Condition="'$(PgoInstrument)' == 'true'">true</SkipBuildingInstallers>
    <SkipBuildingInstallers Condition="'$(TargetOS)' == 'freebsd' or '$(TargetOS)' == 'illumos' or '$(TargetOS)' == 'linux-musl'">true</SkipBuildingInstallers>

    <GenerateSdkBundleOnly Condition="'$(DotNetBuildPass)' == '3' and '$(OS)' == 'Windows_NT'">true</GenerateSdkBundleOnly>
    <BundleRuntimePacks Condition="'$(BundleRuntimePacks)' == '' and '$(DotNetBuildSourceOnly)' == 'true'">true</BundleRuntimePacks>
    <BundleNativeAotCompiler Condition="'$(BundleNativeAotCompiler)' == '' and '$(DotNetBuildSourceOnly)' == 'true' and '$(DotNetBuildUseMonoRuntime)' != 'true'">true</BundleNativeAotCompiler>
    <HighEntropyVA>true</HighEntropyVA>
  </PropertyGroup>

  <PropertyGroup>
    <NetRuntimeRid Condition="'$(NetRuntimeRid)' == ''">$(HostRid)</NetRuntimeRid>
    <NetRuntimeRid Condition="('$(TargetOS)' == 'windows' or '$(TargetOS)' == 'osx' or '$(TargetOS)' == 'freebsd' or '$(TargetOS)' == 'illumos' or '$(TargetOS)' == 'solaris') and '$(DotNetBuildSourceOnly)' != 'true'">$(TargetOS)-$(TargetArchitecture)</NetRuntimeRid>
    <NetRuntimeRid Condition="'$(DotNetBuild)' != 'true' and $(NetRuntimeRid.StartsWith('mariner.2.0'))">$(HostRid.Replace('mariner.2.0', 'cm.2'))</NetRuntimeRid>

    <SharedFrameworkRid>$(NetRuntimeRid)</SharedFrameworkRid>
    <SharedFrameworkRid Condition="'$(TargetOS)' == 'linux' or '$(TargetOS)' == 'linux-musl'">$(TargetRid)</SharedFrameworkRid>
  </PropertyGroup>

  <PropertyGroup>
    <SdkPkgSourcesRootDirectory>$(MSBuildThisFileDirectory)pkg\</SdkPkgSourcesRootDirectory>
  </PropertyGroup>

</Project>
