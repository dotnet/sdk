<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. -->

<Project>
 
  <UsingTask TaskName="ValidatePackage" AssemblyFile="$(DotNetPackageValidationAssembly)" />
  <UsingTask TaskName="GetLastStablePackage" AssemblyFile="$(DotNetPackageValidationAssembly)" />

  <PropertyGroup>
    <PreviousPackageVersionFilePath>$(IntermediateOutputPath)\PreviousPackageVersion.txt</PreviousPackageVersionFilePath>
    <PreviousPackageName>$([MSBuild]::ValueOrDefault('$(PreviousPackageName)', '$(AssemblyName)'))</PreviousPackageName>
  </PropertyGroup>

  <Target Name="RunPackageValidation" AfterTargets="Pack">
    
    <PropertyGroup Condition="'$(ValidateWithPreviousVersion)' == 'true' and '$(PreviousPackagePath)' == ''">
      <PreviousPackageVersion>$([System.IO.File]::ReadAllText('$(PreviousPackageVersionFilePath)').Trim())</PreviousPackageVersion>
      <PreviousPackagePath>$(NuGetPackageRoot)$(PreviousPackageName)\$(PreviousPackageVersion)\$(PreviousPackageName).$(PreviousPackageVersion).nupkg</PreviousPackagePath>
    </PropertyGroup>

    <PropertyGroup>
      <PackagePath Condition="'$(PackagePath)' == ''">$(PackageOutputAbsolutePath)$(PackageId).$(PackageVersion).nupkg</PackagePath>
    </PropertyGroup>

    <ValidatePackage PackagePath="$(PackagePath)"
                     PreviousPackagePath="$(PreviousPackagePath)"
                     RuntimeGraph="$(RuntimeGraph)"
                     NoWarn="$(NoWarn)"
                     RunApiCompat="$([MSBuild]::ValueOrDefault('$(RunApiCompat)', 'true'))"
                     ValidateWithPreviousVersion="$(ValidateWithPreviousVersion)"/>
  </Target>

  <Target Name="AddPackageDownload" BeforeTargets="CollectPackageDownloads" Condition="'$(ValidateWithPreviousVersion)' == 'true' and '$(PreviousPackagePath)' == ''">
    <GetLastStablePackage Condition="'$(PreviousPackageVersion)' == ''"
                          PackageId="$(PreviousPackageName)"
                          PackageVersion="$(Version)"
                          NugetFeeds="$(_OutputSources)">
      <Output TaskParameter="LastStableVersion" PropertyName="PreviousPackageVersion" />
    </GetLastStablePackage>

    <ItemGroup Condition="'$(PreviousPackageVersion)' != ''">
      <PackageDownload Include="$(PreviousPackageName)" Version="[$(PreviousPackageVersion)]" />
    </ItemGroup>

    <WriteLinesToFile File="$(PreviousPackageVersionFilePath)"
                      Lines="$(PreviousPackageVersion)"
                      Overwrite="true"
                      Encoding="Unicode" />
  </Target>
</Project>
