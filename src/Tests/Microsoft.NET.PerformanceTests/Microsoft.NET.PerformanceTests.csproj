<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the MIT license. See License.txt in the project root for full license information. -->
<Project>

  <PropertyGroup>
    <EnableDefaultItems>false</EnableDefaultItems>
    <OutDirName>Tests\$(MSBuildProjectName)</OutDirName>
  </PropertyGroup>

  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>$(SdkTargetFramework)</TargetFramework>
    <NoWarn>$(NoWarn);xUnit1004</NoWarn>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>testSdkPerf</PackageId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Diagnostics.Tracing.TraceEvent" Version="1.0.3-alpha-experimental" />
    <PackageReference Include="FluentAssertions" Version="$(FluentAssertionsVersion)" />
    <PackageReference Include="xunit.performance.api" Version="1.0.0-beta-build0015" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Microsoft.NET.TestFramework\Microsoft.NET.TestFramework.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="**\*.cs" Exclude="$(GlobalExclude)" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="**\*.resx" Exclude="$(GlobalExclude)" />
  </ItemGroup>

  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />

  <Target Name="PopulatePerformanceTestsFromGitHub" BeforeTargets="CoreCompile"
          Condition="'$(DesignTimeBuild)' != 'true'">
    <PropertyGroup>
      <PerformanceTestsRepoURL>https://github.com/dotnet/BuildPerformanceTestAssets</PerformanceTestsRepoURL>
      <PerformanceTestsCommit>36477bd5bff522888698daad265840c2c36a4ae3</PerformanceTestsCommit>
      <PerformanceTestsLocalDirectory>$(RepoRoot).perftestsource</PerformanceTestsLocalDirectory>
    </PropertyGroup>

    <Exec Condition="!Exists($(PerformanceTestsLocalDirectory))"
          WorkingDirectory="$(RepoRoot)" Command="git clone --quiet $(PerformanceTestsRepoURL) $(PerformanceTestsLocalDirectory)" />
    <Exec WorkingDirectory="$(PerformanceTestsLocalDirectory)" Command="git fetch --quiet" />
    <Exec WorkingDirectory="$(PerformanceTestsLocalDirectory)" Command="git checkout --quiet $(PerformanceTestsCommit)" />
  </Target>

</Project>
