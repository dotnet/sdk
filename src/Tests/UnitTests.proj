<Project Sdk="Microsoft.DotNet.Helix.Sdk">

  <PropertyGroup>
    <HelixType>test/product/</HelixType>
    <Creator Condition="'$(BUILD_BUILDNUMBER)' != '' and '$(HelixAccessToken)' == ''">sdk-dev</Creator>

    <IncludeDotNetCli>false</IncludeDotNetCli>

    <EnableAzurePipelinesReporter Condition="'$(BUILD_BUILDNUMBER)' != ''">true</EnableAzurePipelinesReporter>

    <EnableXUnitReporter>true</EnableXUnitReporter>
    <XUnitWorkItemTimeout>2:00:00</XUnitWorkItemTimeout>
  </PropertyGroup>

  <ItemGroup>
    <SDKCustomXUnitProject Include="**\*.Tests.csproj"/>
  </ItemGroup>

  <ItemGroup Condition=" '$(_CustomHelixTargetQueue)' != '' ">
    <HelixTargetQueue Include="$(_CustomHelixTargetQueue)"/>
  </ItemGroup>

  <Import Project="xunit-runner\XUnitRunner.targets" />

  <!-- need to be a target in order to have IsPosixShell available  -->
  <Target Name="CopyHelixFiles" AfterTargets="Publish">

    <ItemGroup>
      <BuiltSdks Include="$(RepoRoot)\artifacts\bin\$(Configuration)\Sdks\**\*.*"/>

      <!-- All the following files are just to get full framework msbuild while avoid to duplicated arcade logic by copying
      arcade and run it -->
      <Engfolder Include="$(RepoRoot)\eng\**\*.*"/>
      <DotToolsFolder Include="$(RepoRoot)\.tools\**\*.*"/>
      <GlobalJson Include="$(RepoRoot)\global.json"/>
      <!-- Get full framework msbuild end -->

      <!-- include .dotnet folder. So there is no extra first run experience run during the test -->
      <DotnetCliHome Include="$(ArtifactsTmpDir).dotnet\**\*.*"/>

      <Testpackages Include="$(ArtifactsTmpDir)testpackages\**\*.*"/>

      <!-- Files in testExecutionDirectory to prevent environment interference -->
      <TestExecutionDirectoryFiles Include="$(ArtifactsTmpDir)NuGet.config"/>
      <TestExecutionDirectoryFiles Include="$(ArtifactsTmpDir)Directory.Build.props"/>
      <TestExecutionDirectoryFiles Include="$(ArtifactsTmpDir)Directory.Build.targets"/>

      <FilesInHelixRoot Include="$(RepoRoot)\artifacts\tmp\$(Configuration)\NuGet.config"/>
      <FilesInHelixRoot Condition="$([MSBuild]::IsOSPlatform(`Windows`))" Include="$(RepoRoot)\build\RunTestsOnHelix.cmd"/>
      <FilesInHelixRoot Condition=" '$([MSBuild]::IsOSPlatform(`Windows`))' == 'false' " Include="$(RepoRoot)\build\RunTestsOnHelix.sh"/>
    </ItemGroup>

    <PropertyGroup>
      <HelixPayloadOnHost>$(RepoRoot)\artifacts\tmp\Helixpayload</HelixPayloadOnHost>
    </PropertyGroup>

    <Copy SourceFiles="@(Engfolder)" DestinationFiles="@(Engfolder->'$(HelixPayloadOnHost)\eng\%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(GlobalJson)" DestinationFiles="@(GlobalJson->'$(HelixPayloadOnHost)\%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(DotToolsFolder)" DestinationFiles="@(DotToolsFolder->'$(HelixPayloadOnHost)\%(RecursiveDir)%(Filename)%(Extension)')" />

    <Copy SourceFiles="@(FilesInHelixRoot)" DestinationFiles="@(FilesInHelixRoot->'$(HelixPayloadOnHost)\%(RecursiveDir)%(Filename)%(Extension)')" />

    <Copy SourceFiles="@(TestExecutionDirectoryFiles)" DestinationFiles="@(TestExecutionDirectoryFiles->'$(HelixPayloadOnHost)\TestExecutionDirectoryFiles\%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(DotnetCliHome)" DestinationFiles="@(DotnetCliHome->'$(HelixPayloadOnHost)\TestExecutionDirectoryFiles\.dotnet\%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(Testpackages)" DestinationFiles="@(Testpackages->'$(HelixPayloadOnHost)\TestExecutionDirectoryFiles\Testpackages\%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>


  <Target Name="AppendHelixPreCommand" BeforeTargets="CoreTest" DependsOnTargets="CopyHelixFiles">
    <PropertyGroup>
      <HelixPreCommands Condition="!$(IsPosixShell)">call %HELIX_CORRELATION_PAYLOAD%\t\RunTestsOnHelix.cmd $(TestFullMSBuild);$(HelixPreCommands)</HelixPreCommands>
      <HelixPreCommands Condition="$(IsPosixShell)">. $HELIX_CORRELATION_PAYLOAD/t/RunTestsOnHelix.sh;$(HelixPreCommands)</HelixPreCommands>
      <TestDotnetRoot>$(RepoRoot)\artifacts\bin\redist\$(Configuration)\dotnet</TestDotnetRoot>
      <TestDotnetVersion>$(Version)</TestDotnetVersion>
      <MSBuildSdkResolverDir>$(RepoRoot)\artifacts\bin\Microsoft.DotNet.MSBuildSdkResolver</MSBuildSdkResolverDir>
      <HelixStage0Targz>$(RepoRoot)\artifacts\tmp\HelixStage0.tar.gz</HelixStage0Targz>
      <MicrosoftNETBuildExtensions>$(RepoRoot)\artifacts\bin\$(Configuration)\Sdks\Microsoft.NET.Build.Extensions</MicrosoftNETBuildExtensions>
    </PropertyGroup>

    <TarGzFileCreateFromDirectory
        Condition=" '$([MSBuild]::IsOSPlatform(`Windows`))' == 'false' "
        SourceDirectory="$(TestDotnetRoot)"
        DestinationArchive="$(HelixStage0Targz)"
        OverwriteDestination="true"/>

    <ItemGroup>
      <HelixCorrelationPayload Include="$(HelixPayloadOnHost)">
        <PayloadDirectory>$(HelixPayloadOnHost)</PayloadDirectory>
        <Destination>t</Destination>
      </HelixCorrelationPayload>

      <HelixCorrelationPayload Condition=" '$([MSBuild]::IsOSPlatform(`Windows`))' == 'false' " Include="$(HelixStage0Targz)">
        <Destination>d</Destination>
      </HelixCorrelationPayload>

      <HelixCorrelationPayload Condition="$([MSBuild]::IsOSPlatform(`Windows`))" Include="$(TestDotnetRoot)">
        <PayloadDirectory>$(TestDotnetRoot)</PayloadDirectory>
        <Destination>d</Destination>
      </HelixCorrelationPayload>

      <HelixCorrelationPayload Include="$(MicrosoftNETBuildExtensions)">
        <PayloadDirectory>$(MicrosoftNETBuildExtensions)</PayloadDirectory>
        <Destination>ex</Destination>
      </HelixCorrelationPayload>

      <HelixCorrelationPayload Include="$(MSBuildSdkResolverDir)">
        <PayloadDirectory>$(MSBuildSdkResolverDir)</PayloadDirectory>
        <Destination>r</Destination>
      </HelixCorrelationPayload>

    </ItemGroup>
  </Target>

  <Target Name="CreateLocalHelixTestLayout" DependsOnTargets="AppendHelixPreCommand">
    <CreateLocalHelixTestLayout
        HelixCorrelationPayload="@(HelixCorrelationPayload)"
        TestOutputDirectory="$(RepoRoot)\artifacts\bin\localHelixTestLayout" />
  </Target>
</Project>
