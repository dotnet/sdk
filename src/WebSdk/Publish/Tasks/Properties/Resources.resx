<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MSDEPLOY_EXE_Start" xml:space="preserve">
    <value>Running msdeploy.exe.</value>
  </data>
  <data name="MSDEPLOY_EXE_Succeeded" xml:space="preserve">
    <value>Successfully execute msdeploy.exe.</value>
  </data>
  <data name="MSDEPLOY_EXE_Failed" xml:space="preserve">
    <value>Failed to execute msdeploy.exe.</value>
  </data>
  <data name="MSDEPLOY_EXE_PreviewOnly" xml:space="preserve">
    <value>Generate msdeploy.exe command line for preview only.</value>
  </data>
  <data name="BUILDTASK_CopyFilesToFolders_CopyFailed" xml:space="preserve">
    <value>Copying file {0} to {1} failed. {2}</value>
  </data>
  <data name="BUILDTASK_CopyFilesToFolders_DeleteFailed" xml:space="preserve">
    <value>Deleting file {0} failed. {1}</value>
  </data>
  <data name="BUILDTASK_CopyFilesToFolders_Copying" xml:space="preserve">
    <value>Copying {0} to {1}.</value>
  </data>
  <data name="BUILDTASK_CopyFilesToFolders_Deleting" xml:space="preserve">
    <value>Deleting {0}.</value>
  </data>
  <data name="BUILDTASK_RemoveEmptyDirectories_Deleting" xml:space="preserve">
    <value>Deleting empty directory {0}.</value>
  </data>
  <data name="BUILDTASK_CopyFilesToFolders_UpToDate" xml:space="preserve">
    <value>Skip copying {0} to {1}, File {1} is up to date</value>
  </data>
  <data name="BUILDTASK_CopyFilesToFolders_RetryDelayOutOfRange" xml:space="preserve">
    <value>RetryDelay should be greater than zero.</value>
  </data>
  <data name="BUILDTASK_CreateFolder_Failed" xml:space="preserve">
    <value>Create Folder {0} failed. {1}</value>
  </data>
  <data name="BUILDTASK_ManifestFile_IISSettingNotInFirst" xml:space="preserve">
    <value>Validation failure.IIS Setting should be the first element in the Manifest file.({0})</value>
  </data>
  <data name="BUILDTASK_IISSetting_RequireWebAdminDLL" xml:space="preserve">
    <value>To include IIS setting, it is required to have assembly Microsoft.Web.Administration installed on the machine.</value>
  </data>
  <data name="BUILDTASK_MapURIToIisWebServer_AdminRequired" xml:space="preserve">
    <value>Retrieving local IIS properties from the URI requires Administrator permission.  Please elevate to Administrator before executing the program.</value>
  </data>
  <data name="BUILDTASK_SqlScriptPreprocessFile" xml:space="preserve">
    <value>Scanning sql command variable(s) from sql script ({0}).</value>
  </data>
  <data name="BUILDTASK_SqlScriptPreprocessFileDone" xml:space="preserve">
    <value>Found {0} sql command variable(s){1}.</value>
  </data>
  <data name="BUILDTASK_SqlScriptPreprocessFoundMsDeployUnsupportedCommands" xml:space="preserve">
    <value>Found {0} unsupported sql command(s) in {1}. The unsupported sql command(s) are: {2}.
Please note ':EXIT' without argument is treated as ':QUIT' command.</value>
  </data>
  <data name="BUILDTASK_SqlScriptPreprocessInvalidSqlScript" xml:space="preserve">
    <value>Failed to parse the sql script file {0}. Please make sure the SQL script syntax is correct.
Detail:
{1}.</value>
  </data>
  <data name="BUILDTASK_SqlScriptPreprocessFileFailed" xml:space="preserve">
    <value>Failed to parse sql command variable sql script ({0}).</value>
  </data>
  <data name="BUILDTASK_IsCleanMSDeployPackageNeeded_PackageByDifferentVersion" xml:space="preserve">
    <value>Existing package/archiveDir is created by different version of Msdeploy. It is not compatible for incremental build. Mark as Clean needed({0}).</value>
  </data>
  <data name="BUILDTASK_FailedToLoadThisVersionMsDeployTryingTheNext" xml:space="preserve">
    <value>Failed to load this version Microsoft.Web.Deployment ({0}) reason: {1}.
 Trying the next one specified in $(_MSDeployVersionsToTry)..</value>
  </data>
  <data name="VSMSDEPLOY_Start" xml:space="preserve">
    <value>Starting Web deployment task from source: {0} to Destination: {1}.</value>
  </data>
  <data name="VSMSDEPLOY_Succeeded" xml:space="preserve">
    <value>Successfully executed Web deployment task.</value>
  </data>
  <data name="VSMSDEPLOY_Canceled" xml:space="preserve">
    <value>User cancel Web deployment operation.</value>
  </data>
  <data name="VSMSDEPLOY_FailedWithException" xml:space="preserve">
    <value>Web deployment task failed. ({0})</value>
  </data>
  <data name="VSMSDEPLOY_FailedWithExceptionWithDetail" xml:space="preserve">
    <value>Web deployment task failed. ({0})
{1}</value>
  </data>
  <data name="VSMSDEPLOY_MSDEPLOYLOADFAIL" xml:space="preserve">
    <value>Package/Publish depends on Microsoft Web Deploy technology. Microsoft Web Deploy is not correctly installed on this machine. Please install from following link: {0}{1}. ({2})</value>
  </data>
  <data name="VSMSDEPLOY_MSDEPLOYVERSIONLOAD" xml:space="preserve">
    <value>Package/Publish task {0} load assembly {1}</value>
  </data>
  <data name="VSMSDEPLOY_MSDEPLOYASSEMBLYLOAD_FAIL" xml:space="preserve">
    <value>Package/Publish task {0} failed to load Web Deploy assemblies. Microsoft Web Deploy is not correctly installed on this machine. Microsoft Web Deploy v3 or higher is recommended.</value>
  </data>
  <data name="VSMSDEPLOY_MSDEPLOYMinVersion" xml:space="preserve">
    <value>Package/Publish depends on Microsoft Web Deployment technology. Microsoft Web Deployment is installed but doesn't meet the minimum version requirement. Please reinstall from following link: {0}{1}. (Current Version:{2}, Minimum Version needed:{3})</value>
  </data>
  <data name="VSMSDEPLOY_MSDEPLOY32bit" xml:space="preserve">
    <value>For x86(32 bit): http://go.microsoft.com/fwlink/?LinkId=109365.</value>
  </data>
  <data name="VSMSDEPLOY_MSDEPLOY64bit" xml:space="preserve">
    <value>For x64(64 bit): http://go.microsoft.com/fwlink/?LinkId=109366.</value>
  </data>
  <data name="VSMSDEPLOY_InvalidOperation" xml:space="preserve">
    <value>Source ({0}) and destination ({1}) are not compatible for given operation.</value>
  </data>
  <data name="VSMSDEPLOY_SucceedPackage" xml:space="preserve">
    <value>Package "{0}" is successfully created as single file at the following location:
{1}</value>
  </data>
  <data name="VSMSDEPLOY_SucceedArchiveDir" xml:space="preserve">
    <value>Package is successfully created as archive directory at the following location:
{0}</value>
  </data>
  <data name="VSMSDEPLOY_SucceedDeploy" xml:space="preserve">
    <value>Publish Succeeded.</value>
  </data>
  <data name="VSMSDEPLOY_FailedPackage" xml:space="preserve">
    <value>Package failed.</value>
  </data>
  <data name="VSMSDEPLOY_FailedDeploy" xml:space="preserve">
    <value>Publish failed to deploy.</value>
  </data>
  <data name="VSMSDEPLOY_WebPackageHelpLinkMessage" xml:space="preserve">
    <value>To get the instructions on how to deploy the web package please visit the following link:</value>
  </data>
  <data name="VSMSDEPLOY_WebPackageHelpLink" xml:space="preserve">
    <value>http://go.microsoft.com/fwlink/?LinkId=124618</value>
  </data>
  <data name="VSMSDEPLOY_InvalidProviderName" xml:space="preserve">
    <value>Provider({0})is not a recognized provider.</value>
  </data>
  <data name="VSMSDEPLOY_InvalidProviderOption" xml:space="preserve">
    <value>Unknown ProviderOption:{0}. Known ProviderOptions are:{1}.</value>
  </data>
  <data name="VSMSDEPLOY_AddParameterIntoObject" xml:space="preserve">
    <value>Adding Parameter ({0}) with value ({1}) into to object ({2}).</value>
  </data>
  <data name="VSMSDEPLOY_UnknownParameter" xml:space="preserve">
    <value>Unknown Parameter {0}. Source Known Parameters are: {1}.</value>
  </data>
  <data name="VSMSDEPLOY_DuplicateItemMetadata" xml:space="preserve">
    <value>The following two items have duplicate item metadata %({0}). The two items data are {1} and {2}.</value>
  </data>
  <data name="VSMSDEPLOY_ObjectIdentity" xml:space="preserve">
    <value>{0}({1})</value>
  </data>
  <data name="VSMSDEPLOY_SkipDirectiveSetEnable" xml:space="preserve">
    <value>Skip Directive {0} enable state is changed to {1}.</value>
  </data>
  <data name="VSMSDEPLOY_UnknownSkipDirective" xml:space="preserve">
    <value>Skip Directive {0} can not be identified.</value>
  </data>
  <data name="VSMSDEPLOY_EncryptionExceptionMessage" xml:space="preserve">
    <value>An IIS secure setting was detected while packaging/publishing. An encryption password is required to proceed.
In Visual Studio, the password can be entered in the project's Package/Publish property page.
In team build or command line, password can be provided by setting MsBuild $(DeployEncryptKey) property.
Error details:</value>
  </data>
  <data name="VSMSDEPLOY_WebException401Message" xml:space="preserve">
    <value>Make sure the site name, user name, and password are correct. If the issue is not resolved, please contact your local or server administrator.
Error details:</value>
  </data>
  <data name="VSMSDEPLOY_WebException404Message" xml:space="preserve">
    <value>The requested resource does not exist, or the requested URL is incorrect.
Error details:</value>
  </data>
  <data name="VSMSDEPLOY_WebException502Message" xml:space="preserve">
    <value>Make sure firewall and network settings on your computer and on the server are configured to allow connections between them. If the issue is not resolved, please contact your local or server administrator.
Error details:</value>
  </data>
  <data name="VSMSDEPLOY_WebException550Message" xml:space="preserve">
    <value>Make sure the site that you are deploying to is a valid site on the destination server. If the issue is not resolved, please contact your server administrator.
Error details:</value>
  </data>
  <data name="VSMSDEPLOY_WebException551Message" xml:space="preserve">
    <value>Make sure the appliction that you are deploying to is a valide application on the destination server. If the issue is not resolved, please contact your server administrator.
Error details:</value>
  </data>
  <data name="VSMSDEPLOY_WebExceptionConnectFailureMessage" xml:space="preserve">
    <value>This error indicates that you cannot connect to the server. Make sure the service URL is correct, firewall and network settings on this computer and on the server computer are configured properly, and the appropriate services have been started on the server.
Error details:</value>
  </data>
  <data name="VSMSDEPLOY_MsDeployExceptionFwlink1SiteMessage" xml:space="preserve">
    <value>Make sure you have appropriate permissions on the server to publish IIS settings. Alternatively, exclude settings that require administrative permissions on the server. (Web Deploy Provider is "{0}").
Error details:</value>
  </data>
  <data name="VSMSDEPLOY_MsDeployExceptionFwlink1SQLMessage" xml:space="preserve">
    <value>Make sure the database connection string for the server is correct and that you have appropriate permission to access the database. (Web Deploy Provider is "{0}").
Error details:</value>
  </data>
  <data name="VSMSDEPLOY_MsDeployExceptionFwlink1Message" xml:space="preserve">
    <value>Failed to invoke or execute {0} provider on the web server.  The Web Deployment Tool's {0} provider is either not enabled or failed to executed specific commands on the server.  Please contact your server administrator for assistance. (Web Deploy Provider is "{0}").
Error details:</value>
  </data>
  <data name="VSMSDEPLOY_MsDeployExceptionFwlink2Message" xml:space="preserve">
    <value>Make sure you have appropriate permissions on the server to publish IIS settings. Alternatively, exclude settings that require administrative permission on the server.
Error details:</value>
  </data>
  <data name="VSMSDEPLOY_MsDeployExceptionFwlink3Message" xml:space="preserve">
    <value>This can occur if the publish process cannot connect to the database on the server. Make sure the database connection string is correct.
Error details:</value>
  </data>
  <data name="VSMSDEPLOY_MsDeployExceptionFwlink4Message" xml:space="preserve">
    <value>Failed to publish the database. This can happen if the remote database cannot run the script. Try modifying the database scripts, or disabling database publishing in the Package/Publish Web properties page. If the script failed due to database tables already exist, try dropping existing database objects before creating new ones. For more information on doing these options from Visual Studio, see http://go.microsoft.com/fwlink/?LinkId=179181.
Error details:</value>
  </data>
  <data name="VSMSDEPLOY_SQLCEMigrationNeedLatestMSDeploy" xml:space="preserve">
    <value>Generate schema/data sql scripts from SQLCE require Web Deploy 2.0 and up to function properly.  Please install the latest Web Deploy from {0}.</value>
  </data>
  <data name="BUILDTASK_MapProjectURLToIisWeb_InvalidProjectURL" xml:space="preserve">
    <value>The project URL is not well formed.({0})</value>
  </data>
  <data name="BUILDTASK_MapProjectURLToIisWeb_UnsupportedProjectURL" xml:space="preserve">
    <value>The project URL url host name type is not supported.({0})</value>
  </data>
  <data name="BUILDTASK_ColectFilesInFolder_RootIsNotValid" xml:space="preserve">
    <value>The root folder for cllecting files is not a valid directory.({0})</value>
  </data>
  <data name="MSDEPLOY_InvalidSourceCount" xml:space="preserve">
    <value>Invalidate source items count: {0}</value>
  </data>
  <data name="MSDEPLOY_InvalidDestinationCount" xml:space="preserve">
    <value>Invalidate destination item count: {0}</value>
  </data>
  <data name="MSDEPLOY_InvalidVerbForTheInput" xml:space="preserve">
    <value>Invalid verb({0}) for supplied source ({1}) and destination ({2}).</value>
  </data>
  <data name="BUILDTASK_TransformXml_DestinationWriteFailed" xml:space="preserve">
    <value>Could not write Destination file: {0}</value>
  </data>
  <data name="BUILDTASK_TransformXml_SourceLoadFailed" xml:space="preserve">
    <value>Could not open Source file: {0}</value>
  </data>
  <data name="BUILDTASK_TransformXml_TransformationApply" xml:space="preserve">
    <value>Applying Transform File: {0}</value>
  </data>
  <data name="BUILDTASK_TransformXml_TransformationFailed" xml:space="preserve">
    <value>Transformation failed</value>
  </data>
  <data name="BUILDTASK_TransformXml_TransformationNoChange" xml:space="preserve">
    <value>No transformation occurred, not saving output file</value>
  </data>
  <data name="BUILDTASK_TransformXml_TransformationStart" xml:space="preserve">
    <value>Transforming Source File: {0}</value>
  </data>
  <data name="BUILDTASK_TransformXml_TransformationSucceeded" xml:space="preserve">
    <value>Transformation succeeded</value>
  </data>
  <data name="BUILDTASK_TransformXml_TransformLoadFailed" xml:space="preserve">
    <value>Could not open Transform file: {0}</value>
  </data>
  <data name="BUILDTASK_TransformXml_TransformOutput" xml:space="preserve">
    <value>Output File: {0}</value>
  </data>
  <data name="WEBDEPLOY_MERGE_Start" xml:space="preserve">
    <value>Running aspnet_merge.exe.</value>
  </data>
  <data name="WEBDEPLOY_MERGE_Succeeded" xml:space="preserve">
    <value>Successfully merged '{0}'.</value>
  </data>
  <data name="WEBDEPLOY_MERGE_Failed" xml:space="preserve">
    <value>Failed to merge '{0}'.</value>
  </data>
  <data name="WEBDEPLOY_MERGE_ApplicationPath" xml:space="preserve">
    <value>Missing ApplicationPath parameter (the physical path of the precompiled application).</value>
  </data>
  <data name="WEBDEPLOY_MERGE_SingleAssemblyName" xml:space="preserve">
    <value>SingleAssemblyName parameter cannot be combined with the Prefix or ContentAssemblyName parameter. If specified, the entire application will be merged to a single assembly with the given name.</value>
  </data>
  <data name="WEBDEPLOY_MERGE_ContentAssemblyName" xml:space="preserve">
    <value>ContentAssembly parameter cannot be combined with the Prefix or NameSingleAssemblyName parameter. If specified, the entire application will be merged to a single assembly with the given name.</value>
  </data>
  <data name="CREATEPROVIDERLIST_NotExpectingAdditionalParameter" xml:space="preserve">
    <value>Publish Database Setting encountered an unexpected error. The provider '{0}' doesn't expect any addition arguments '{1}'.</value>
  </data>
  <data name="CREATEPROVIDERLIST_ImportValidationSourceNotFound" xml:space="preserve">
    <value>Publish Database Setting Source Verification Error: The source connection string for '{0}' no longer exists in the source '{1}'. Because of this publishing has been blocked. If this was intended you can disable this check by specifying the value of "True" for the MSBuild property "IgnoreDatabaseSettingOutOfSync." If this was not intended, open the Publish dialog in Visual Studio with this profile to correct the discrepancy. For more information visit http://go.microsoft.com/fwlink/?LinkId=241526 </value>
  </data>
  <data name="CREATEPROVIDERLIST_InvalidMSBuildFormat" xml:space="preserve">
    <value>Publish Database Setting Source Verification Error: The publish profile specified '{1}' for '{0}' is not valid and could not be loaded. Review the file for any errors and try again.</value>
  </data>
  <data name="CREATEPROVIDERLIST_ImportPublishDatabaseSettingNotFound" xml:space="preserve">
    <value>Publish Database Setting Source Verification Error: The publish profile specified '{1} ({2})' for '{0}' does not have a corresponding connection string in '{3}'. Because of this publishing has been blocked. If this was intended you can disable this check by specifying the value of "True" for the MSBuild property "IgnoreDatabaseSettingOutOfSync." If this was not intended, open the Publish dialog in Visual Studio with this profile to correct the discrepancy. For more information visit http://go.microsoft.com/fwlink/?LinkId=241526 </value>
  </data>
  <data name="CREATEPROVIDERLIST_InvalidPublishDatabaseSetting" xml:space="preserve">
    <value>Publish Database Setting Source Verification Error:The publish profile specified '{1} ({2})' for '{0}' does not have valid $(PublishDatabaseSettings) value. Because of this publishing has been blocked. If this was intended you can disable this check by specifying the value of "True" for the MSBuild property "IgnoreDatabaseSettingOutOfSync." If this was not intended, open the Publish dialog in Visual Studio with this profile to correct the discrepancy. For more information visit http://go.microsoft.com/fwlink/?LinkId=241526 </value>
  </data>
  <data name="CREATEPROVIDERLIST_OutofSyncWithSourcePublishDatabaseSetting" xml:space="preserve">
    <value>Publish Database Setting Source Verification Error: The connection '{0}' in the publish profile has changed from what is currently declared for '{1} ({2})'. Because of this publishing has been blocked. If this was intended you can disable this check by specifying the value of "True" for the MSBuild property "IgnoreDatabaseSettingOutOfSync." If this was not intended, open the Publish dialog in Visual Studio with this profile to correct the discrepancy. For more information visit http://go.microsoft.com/fwlink/?LinkId=241526 </value>
  </data>
  <data name="CREATEPROVIDERLIST_FailToCopyFile" xml:space="preserve">
    <value>Failded to copy file from '{0}' to '{1}' for SQLExpress Data Publish</value>
  </data>
  <data name="CREATEPROVIDERLIST_SqlExpressPublishRequireLocalDB" xml:space="preserve">
    <value>SQL Server Express LocalDB is required in order to publish one or more of your databases. To learn more and install it, follow this link http://go.microsoft.com/fwlink/?LinkId=245956 </value>
  </data>
  <data name="PublishArgumentError_InvalidRemoteServiceUrl" xml:space="preserve">
    <value>Invalid Web Deploy service URL</value>
  </data>
  <data name="PublishArgumentError_InvalidSiteAppName" xml:space="preserve">
    <value>Invalid site/application name</value>
  </data>
  <data name="CREATEPROVIDERLIST_NotSupportBothProvidersXMLAndProvidersFile" xml:space="preserve">
    <value>CreateProviderList does not support ProvidersXml and ProvidersFile parameters at the same time</value>
  </data>
  <data name="CREATEPROVIDERLIST_MustProviderProvidersXMLorProvidersFile" xml:space="preserve">
    <value>CreateProviderList expected either ProvidersXml or ProvidersFile parameter</value>
  </data>
  <data name="PublishLocalizedString_InvalidArgument" xml:space="preserve">
    <value>GetPublishingLocalizedString Task encounter invalid argument ID;</value>
  </data>
  <data name="PublishLocalizedString_IISAppParameterDescription" xml:space="preserve">
    <value>IIS Web Site/Application name</value>
  </data>
  <data name="PublishLocalizedString_IISAppPhysicalPathDescription" xml:space="preserve">
    <value>Physical path for this Web Application.</value>
  </data>
  <data name="PublishLocalizedString_DatabaseConnectionStringParameterDescription" xml:space="preserve">
    <value>Connection string for setting up this application database.</value>
  </data>
  <data name="PublishLocalizedString_WebConfigConnectionStringParameterDescription" xml:space="preserve">
    <value>Connection String used in web.config by the application to access the database.</value>
  </data>
  <data name="PublishLocalizedString_EFCodeFirstConnectionStringParameterDescription" xml:space="preserve">
    <value>Connection String used by Entity Framework Code First Model to deploy the database.</value>
  </data>
  <data name="PublishLocalizedString_SqlCommandVariableParameterDescription" xml:space="preserve">
    <value>Sql Command Variable for setting up this application database.</value>
  </data>
  <data name="PublishLocalizedString_DefaultExcludeIntermediateOutputFolderMessage" xml:space="preserve">
    <value>Exclude all files under obj folder.</value>
  </data>
  <data name="PublishLocalizedString_DefaultExcludeFileExtentionOutMessage" xml:space="preserve">
    <value>Exclude *.out files under root folder.</value>
  </data>
  <data name="PublishLocalizedString_DefaultExcludeSourceControlItems" xml:space="preserve">
    <value>Set all .scc .vspscc file as _IgnorableFilesInProjectFolder.  Set _CollectFiles_IncludeIgnorableFile to True to include in the packaging.</value>
  </data>
  <data name="PublishLocalizedString_GatherAllFilesInProjectFolderExceptExclusion" xml:space="preserve">
    <value>Gather all files from project folder except in the exclusion list.</value>
  </data>
  <data name="PublishLocalizedString_GatherSpecificItemsFromProject" xml:space="preserve">
    <value>Gather all files from Project items @({0}). Adding:</value>
  </data>
  <data name="PublishLocalizedString_GatherSpecificItemsFromProjectNoDetail" xml:space="preserve">
    <value>Gather all files from Project items @({0}).</value>
  </data>
  <data name="PublishLocalizedString_GatherSpecificOutputsFromProject" xml:space="preserve">
    <value>Gather all files from Project output ({0}). Adding:</value>
  </data>
  <data name="PublishLocalizedString_ExcludeAllFilesUnderFolder" xml:space="preserve">
    <value>Exclude All files under {0}</value>
  </data>
  <data name="PublishLocalizedString_ExcludeAllDebugSymbols" xml:space="preserve">
    <value>Exclude All Debug Symbols</value>
  </data>
  <data name="PublishLocalizedString_MsBuildPropertySettingValue" xml:space="preserve">
    <value>$({0}) is {1}</value>
  </data>
  <data name="PublishLocalizedString_MSBuildTargetFailed" xml:space="preserve">
    <value>Target {0} failed.</value>
  </data>
  <data name="PublishLocalizedString_CheckingForValidMsBuildPropertyValue" xml:space="preserve">
    <value>$({0}) is {1}. Validating...</value>
  </data>
  <data name="PublishLocalizedString_FoundApplicationConfigForTransformation" xml:space="preserve">
    <value>Found The following for Config tranformation:
{0}</value>
  </data>
  <data name="PublishLocalizedString_TransformConfigUsingTransformFileToTransformOutputFile" xml:space="preserve">
    <value>Transformed {0} using {1} into {2}.</value>
  </data>
  <data name="PublishLocalizedString_AutoConnectionStringTransformConfigToTransformOutputFile" xml:space="preserve">
    <value>Auto ConnectionString Transformed {0} into {1}.</value>
  </data>
  <data name="PublishLocalizedString_InsertAdditionalConnectionStringTransformConfigToTransformOutputFile" xml:space="preserve">
    <value>Insert additional ConnectionString Transformed {0} into {1}.</value>
  </data>
  <data name="PublishLocalizedString_InsertEFCodeFirstDeployContextTransformConfigToTransformOutputFile" xml:space="preserve">
    <value>Insert additional EFCodeFirst Database Deployment Transformed {0} into {1}.</value>
  </data>
  <data name="PublishLocalizedString_WebPublishPipelineCollectFilesPhase" xml:space="preserve">
    <value>Publish Pipeline Collect Files Phase</value>
  </data>
  <data name="PublishLocalizedString_WebPublishPipelineTransformPhase" xml:space="preserve">
    <value>Publish Pipeline Transform Phase</value>
  </data>
  <data name="PublishLocalizedString_WebPublishPipelineDeployPhase" xml:space="preserve">
    <value>Publish Pipeline Deploy Phase</value>
  </data>
  <data name="PublishLocalizedString_WebPublishPipelinePhase" xml:space="preserve">
    <value>Publish Pipeline {0} Phase</value>
  </data>
  <data name="PublishLocalizedString_WebPublishPipelineCopyWebApplication" xml:space="preserve">
    <value>Copying Web Application Project Files for {0} to {1}.</value>
  </data>
  <data name="PublishLocalizedString_WebPublishPipelineDeployPhaseStage1" xml:space="preserve">
    <value>Publish Pipeline Deploy phase Stage {0}</value>
  </data>
  <data name="PublishLocalizedString_WebPublishPipelineMSDeploySettings" xml:space="preserve">
    <value>Invoking Web Deploy to generate the package with the following settings:</value>
  </data>
  <data name="PublishLocalizedString_WebPublishPipelineMaterializeAllFilesToTempDir" xml:space="preserve">
    <value>Copying all files to temporary location below for package/publish:
{0}.</value>
  </data>
  <data name="PublishLocalizedString_GenerateMsdeploySourceManifestFile" xml:space="preserve">
    <value>Generate source manifest file for Web Deploy package/publish ...</value>
  </data>
  <data name="PublishLocalizedString_PackagingIntoLocation" xml:space="preserve">
    <value>Packaging into {0}.</value>
  </data>
  <data name="PublishLocalizedString_GenerateSampleMsdeployBatchScript" xml:space="preserve">
    <value>Generating a sample batch commandline script for deploying this package...</value>
  </data>
  <data name="PublishLocalizedString_FinishGenerateSampleMsDeployBatchScript" xml:space="preserve">
    <value>Sample script for deploying this package is generated at the following location:
{0}
For this sample script, you can change the deploy parameters by changing the following file: 
{1}</value>
  </data>
  <data name="PublishLocalizedString_TestDeployPackageOnCurrentMachine" xml:space="preserve">
    <value>Test deploy this Web Deploy package onto current machine.</value>
  </data>
  <data name="PublishLocalizedString_ValidatingMsDeployPublishSettings" xml:space="preserve">
    <value>Validating Web Deploy package/publish related properties...</value>
  </data>
  <data name="PublishLocalizedString_ValidateErrorMsDeployPublishSetting" xml:space="preserve">
    <value>Web Deploy publish/package validating error: Missing or Invalid property value for $({0})</value>
  </data>
  <data name="PublishLocalizedString_WarningOnSettingRemoteSitePhysicalPathWhenIISSettingIsNotInclude" xml:space="preserve">
    <value>Setting value to $(RemoteSitePhysicalPath) might not work if IIS setting is not included</value>
  </data>
  <data name="PublishLocalizedString_WarningOnSettingBothIncludeIisSettingsOnPublishAndDeployAsIisApp" xml:space="preserve">
    <value>Setting both property values of DeployAsIisApp and IncludeIisSettingsOnPublish to true is not recommended, as IncludeIisSettingsOnPublish is a superset of DeployAsIisApp</value>
  </data>
  <data name="PublishLocalizedString_StartMsDeployPublishToRemote" xml:space="preserve">
    <value>Start Web Deploy Publish the Application/package to {0} ...</value>
  </data>
  <data name="PublishLocalizedString_ErrorPackageAsFilePointToAnExistingFolder" xml:space="preserve">
    <value>'{0}' exists as a folder. You can't package as a single file to be the same path as an existing folder. Please delete the folder before packaging. Alternative,you can call msbuild with /t:CleanWebsitesPackage target to remove it.</value>
  </data>
  <data name="PublishLocalizedString_ErrorPackageAsFolderPointToAnExistingFile" xml:space="preserve">
    <value>'{0}' exists as a file. You can't package as an archive directory to be the same path as an existing file. Please delete the file before packaging. Alternative,you can call msbuild with /t:CleanWebsitesPackage target to remove it.</value>
  </data>
  <data name="PublishLocalizedString_ErrorCannotDeployFromIIS7AboveToLowerIIS" xml:space="preserve">
    <value>Deploy with IIS Setting from a IIS 7 or above to a lower verstion of IIS server is not supported. To fix the problem, please set the %24(IncludeIisSettings) to false. Your current setting are $(IncludeIisSettings) is {0}, $(DestinationIisVersion) is {1} and $(LocalIisVersion) is  {2}.</value>
  </data>
  <data name="PublishLocalizedString_ErrorUseWPP_CopyWebApplicationAndPipelineDependsOnBuildBothTrue" xml:space="preserve">
    <value>These two Properties are not compatable: $(UseWPP_CopyWebApplication) and  $(PipelineDependsOnBuild) both are True.
Please correct the problem by either set $(Disable_CopyWebApplication) to true or set $(PipelineDependsOnBuild) to false to break the circular build dependency.
Detail: $(UseWPP_CopyWebApplication) make the publsih pipeline (WPP) to be Part of the build and $(PipelineDependsOnBuild) make the WPP depend on build thus cause the build circular build dependency.</value>
  </data>
  <data name="PublishLocalizedString_ErrorUseIisIsTrueButIisUrlIsEmpty" xml:space="preserve">
    <value>IisUrl property is required when UseIis property is True</value>
  </data>
  <data name="PublishLocalizedString_ErrorInvalidPropertyWhenSettingPropertyIsTrue" xml:space="preserve">
    <value>Invalid $({0}): When $({1}) is set True. It is required to have a valid $({0}) to be use for creating parameters correctly.</value>
  </data>
  <data name="PublishLocalizedString_ErrorInvalidMSBuildItemCollectionCount" xml:space="preserve">
    <value>@({0}) have {1} item(s) in the collection. It should only have {2} item(s).</value>
  </data>
  <data name="PublishLocalizedString_WebPublishValidatePublishProfileSettings" xml:space="preserve">
    <value>Validating PublishProfile({0}) settings.</value>
  </data>
  <data name="PublishLocalizedString_WebPublishInvalidatePublishProfileSettings" xml:space="preserve">
    <value>The value for PublishProfile is set to '{0}', expected to find the file at '{1}' but it could not be found.</value>
  </data>
  <data name="PublishLocalizedString_WebPublishMethodIsNotSupportedInCmdLine" xml:space="preserve">
    <value>This specific WebPublishMethod({0}) is not yet supported on msbuild command line.  Please use Visual Studio to publish.</value>
  </data>
  <data name="PublishLocalizedString_WebPublishProfileInvalidPropertyValue" xml:space="preserve">
    <value>PublishProfile({0}) is set. But the $({1}) does not have a valid value.  Current Value is "{2}".</value>
  </data>
  <data name="PublishLocalizedString_SampleScriptHelpPrerequisites" xml:space="preserve">
    <value>
===========================
Prerequisites :
--------------------------
To deploy this Web package, Web Deploy (msdeploy.exe) must be installed on the computer that runs the .cmd file. For information about how to install Web Deploy, see the following URL:
{0}
This batch file requires that the package file "{1}" and optionally provided the parameters file "{2}" in the same folder or destination folder by environment variable.
</value>
  </data>
  <data name="PublishLocalizedString_SampleScriptHelpSection1" xml:space="preserve">
    <value>
===========================
Usage:
--------------------------
{0} [/T|/Y] [/M:ComputerName] [/U:UserName] [/P:Password] [/G:UseTempAgent] [Additional msdeploy.exe flags ...]

</value>
  </data>
  <data name="PublishLocalizedString_SampleScriptHelpRequired" xml:space="preserve">
    <value>
===========================
Required Flags:
--------------------------</value>
  </data>
  <data name="PublishLocalizedString_SampleScriptHelpRequiredExplainedFlagT" xml:space="preserve">
    <value>
/T:
	Calls msdeploy.exe with the "-whatif" flag, which simulates deployment. This does not deploy the package. Instead, it creates a report of what will happen when you actually deploy the package.</value>
  </data>
  <data name="PublishLocalizedString_SampleScriptHelpRequiredExplainedFlagY" xml:space="preserve">
    <value>
/Y:
	Calls msdeploy.exe without the "-whatif" flag, which deploys the package to the current machine or a destination server. Use /Y after you have verified the output that was generated by using the /T flag.

Note: Do not use /T and /Y in the same command.
</value>
  </data>
  <data name="PublishLocalizedString_SampleScriptHelpOptional" xml:space="preserve">
    <value>
===========================
Optional Flags:
--------------------------
 By Default, this script deploy on the current machine where this script is called with current user credential without agent service. Only pass the following value for advance scenario.
</value>
  </data>
  <data name="PublishLocalizedString_SampleScriptHelpOptionalExplainedFlagM" xml:space="preserve">
    <value>
/M:&lt;Destination server name or Service URL&gt;
	If this flag is not specified, the package is installed on the computer where the command is run. The Service URL can be in the following format:
		https://&lt;DestinationServer&gt;:8172/MSDeploy.axd 
	This format requires that IIS 7 be installed on the destination server and that IIS 7 Web Management Service(WMSvc) and Web Deployment Handler be set up.
	The service URL can also be in the following format:
		http://&lt;DestinationServer&gt;/MSDeployAgentService 
	This format requires administrative rights on the destination server, and it requires that Web Deploy Remote Service (MsDepSvc) be installed on the destination server. IIS 7 does not have to be installed on the destination server.
</value>
  </data>
  <data name="PublishLocalizedString_SampleScriptHelpOptionalExplainedFlagUP" xml:space="preserve">
    <value>
/U:&lt;UserName&gt;
/P:&lt;Password&gt;</value>
  </data>
  <data name="PublishLocalizedString_SampleScriptHelpOptionalExplainedFlagG" xml:space="preserve">
    <value>
/G:&lt;True | False&gt;
	Specifies that the package is deployed by creating a temporary listener on the destination server. This requires no special installation on the destination server, but it requires you to be an administrator on that server. The default value of this flag is False. 
</value>
  </data>
  <data name="PublishLocalizedString_SampleScriptHelpOptionalExplainedFlagA" xml:space="preserve">
    <value>
/A:&lt;Basic | NTLM&gt;
	Specifies the type of authentication to be used. The possible values are NTLM and Basic. If the wmsvc provider setting is specified, the default authentication type is Basic; otherwise, the default authentication type is NTLM. 
</value>
  </data>
  <data name="PublishLocalizedString_SampleScriptHelpOptionalExplainedFlagL" xml:space="preserve">
    <value>
/L 
	Specifies that the package is deployed to local IISExpress user instance.
</value>
  </data>
  <data name="PublishLocalizedString_SampleScriptHelpOptionalExplainedAdditionalFlags" xml:space="preserve">
    <value>
[Additional msdeploy.exe flags]
	The msdeploy.exe command supports additional flags. You can include any of these additional flags in the "$(ProjectName).Deploy.cmd" file, and the flags are passed through to msdeploy.exe during execution.
	Alternatively, you can specify additional flags by setting the "_MsDeployAdditionalFlags" environment variable. These settings are used by this batch file.
	Note: Any flag value that includes an equal sign (=) must be enclosed in double quotation marks, as shown in the following example, which will skip deploying the databases that are included in the package:
		"-skip:objectName=dbFullSql" 
</value>
  </data>
  <data name="PublishLocalizedString_SampleScriptHelpEnviroment" xml:space="preserve">
    <value>
===========================
Environment-Specific Settings:
--------------------------
</value>
  </data>
  <data name="PublishLocalizedString_SampleScriptHelpEnviromentExplained" xml:space="preserve">
    <value>
	To customize application-specific settings for each deployment environment (for example, the IIS application name, the physical path, and any connection strings), edit the settings in the following file: 
		 "{0}"</value>
  </data>
  <data name="PublishLocalizedString_SampleScriptHelpMoreInfo" xml:space="preserve">
    <value>
===========================
For more information on this deploy script visit:	{0}
</value>
  </data>
  <data name="WEBDEPLOY_AssemblyInfo_Attribute" xml:space="preserve">
    <value>Setting {0}</value>
  </data>
  <data name="WEBDEPLOY_AssemblyInfo_Failed" xml:space="preserve">
    <value>Failed to Generate AssemblyInfo file.</value>
  </data>
  <data name="WEBDEPLOY_AssemblyInfo_Start" xml:space="preserve">
    <value>Generating AssemblyInfo.</value>
  </data>
  <data name="WEBDEPLOY_AssemblyInfo_Succeeded" xml:space="preserve">
    <value>Successfully generated AssemblyInfo file.</value>
  </data>
  <data name="VSMSDEPLOY_LoadVSCertUIFailed" xml:space="preserve">
    <value>Failed to load publish certificate dialog due to error of {0}</value>
  </data>
  <data name="DeploymentError_MissingDbDacFx" xml:space="preserve">
    <value>The remote host does not have the dbDacFx Web Deploy provider installed, which is required for database publishing. To learn more about this visit this link.

FWLink: http://go.microsoft.com/fwlink/?LinkId=246068</value>
  </data>
  <data name="BUILDTASK_DetectAntaresCLR45Error" xml:space="preserve">
    <value>Your hosting provider does not yet support ASP.NET 4.6, which your application is configured to use. To learn more about this please visit: http://go.microsoft.com/fwlink/?LinkID=615797&amp;clcid=0x409</value>
  </data>
  <data name="Publich_InvalidPublishToolsVersion_Error" xml:space="preserve">
    <value>The publish profile used for publishing was created in a newer version of the Visual Studio Web Publish features. In order to publish using this profile you will need to update your web publish components. To learn more about this, please visit http://go.microsoft.com/fwlink/?LinkId=256245</value>
  </data>
  <data name="KUDUDEPLOY_ConnectionInfoMissing" xml:space="preserve">
    <value>Azure connection information cannot be empty.</value>
  </data>
  <data name="KUDUDEPLOY_CopyingToTempLocation" xml:space="preserve">
    <value>Copying all files to temporary location for publish: '{0}'.</value>
  </data>
  <data name="KUDUDEPLOY_CopyingToTempLocationCompleted" xml:space="preserve">
    <value>Copying all files to temporary location completed.</value>
  </data>
  <data name="KUDUDEPLOY_PublishAzure" xml:space="preserve">
    <value>Publishing to Azure.</value>
  </data>
  <data name="KUDUDEPLOY_PublishZipFailedReason" xml:space="preserve">
    <value>Publishing to site '{0}' failed. Reason: '{1}'.</value>
  </data>
  <data name="KUDUDEPLOY_PublishSucceeded" xml:space="preserve">
    <value>Publish Succeeded.</value>
  </data>
  <data name="KUDUDEPLOY_PublishFailed" xml:space="preserve">
    <value>Publish Failed.</value>
  </data>
  <data name="KUDUDEPLOY_AddingFile" xml:space="preserve">
    <value>Adding file ({0}).</value>
  </data>
  <data name="KUDUDEPLOY_AddingFileFailed" xml:space="preserve">
    <value>Adding file ({0}) failed. Reason: {1}.</value>
  </data>
  <data name="KUDUDEPLOY_DeployOutputPathEmpty" xml:space="preserve">
    <value>DeployOutputPath property cannot be empty.</value>
  </data>
  <data name="KUDUDEPLOY_AzurePublishErrorReason" xml:space="preserve">
    <value>Unable to publish to Azure. Error Details : '{0}'.</value>
  </data>
  <data name="KUDUDEPLOY_OperationTimeout" xml:space="preserve">
    <value>Publish operation timed out.</value>
  </data>
  <data name="POWERSHELL_PublishProfileParsingError" xml:space="preserve">
    <value>Unable to parse the pubxml file {0}.</value>
  </data>
  <data name="ValidateParameter_ArgumentNullError" xml:space="preserve">
    <value>Property '{0}' must be non-empty.</value>
  </data>
  <data name="MsDeployBatchFile" xml:space="preserve">
    <value>@rem ---------------------------------------------------------------------------------
@rem This is provided as sample to deploy the package using msdeploy.exe
@rem For information about IIS Web Deploy technology,
@rem please visit https://go.microsoft.com/?linkid=9278654
@rem Note: This batch file assumes the package and setparameters.xml are in the same folder with this file
@rem ---------------------------------------------------------------------------------
@if %_echo%!==! echo off
setlocal
@rem ---------------------------------------------------------------------------------
@rem Please Make sure you have Web Deploy install in your machine. 
@rem Alternatively, you can explicit set the MsDeployPath to the location it is on your machine
@rem set MSDeployPath="C:\Program Files (x86)\IIS\Microsoft Web Deploy V3\"
@rem ---------------------------------------------------------------------------------
                      
@rem ---------------------------------------------------------------------------------
@rem if user does not set MsDeployPath environment variable, we will try to retrieve it from registry.
@rem ---------------------------------------------------------------------------------
if "%MSDeployPath%" == "" (
for /F "usebackq tokens=1,2,*" %%h  in (`reg query "HKLM\SOFTWARE\Microsoft\IIS Extensions\MSDeploy" /s  ^| findstr -i "InstallPath"`) do (
if /I "%%h" == "InstallPath" ( 
if /I "%%i" == "REG_SZ" ( 
if not "%%j" == "" ( 
if "%%~dpj" == "%%j" ( 
set MSDeployPath=%%j
))))))

@rem ------------------------------------------

@rem ------------------------------------------

                      
if not exist "%MSDeployPath%msdeploy.exe" (
echo. msdeploy.exe is not found on this machine. Please install Web Deploy before execute the script. 
echo. Please visit https://go.microsoft.com/?linkid=9278654
goto :usage
)

set RootPath=%~dp0
if /I "%_DeploySetParametersFile%" == "" (
set _DeploySetParametersFile=%RootPath%$$ProjectName$$.SetParameters.xml
)

@rem ------------------------------------------

@rem ------------------------------------------

                      
set _ArgTestDeploy=
set _ArgDestinationType=auto
set _ArgComputerNameWithQuote=""
set _ArgUserNameWithQuote=""
set _ArgPasswordWithQuote=""
set _ArgEncryptPasswordWithQuote=""
set _ArgIncludeAclsWithQuote="False"
set _ArgAuthTypeWithQuote=""
set _ArgtempAgentWithQuote=""
set _ArgLocalIIS=
set _ArgLocalIISVersion=
set _HaveArgMSDeployAdditonalFlags=
                      
                      
@rem ---------------------------------------------------------------------------------
@rem Simple Parse the arguments
@rem ---------------------------------------------------------------------------------
:NextArgument
set _ArgCurrent=%~1
set _ArgFlagFirst=%_ArgCurrent:~0,1%
set _ArgFlag=%_ArgCurrent:~0,3%
set _ArgValue=%_ArgCurrent:~3%

if /I "%_ArgFlag%" == "" goto :GetStarted
if /I "%_ArgFlag%" == "~0,3" goto :GetStarted
if /I "%_ArgFlag%" == "/T" set _ArgTestDeploy=true&amp;goto :ArgumentOK
if /I "%_ArgFlag%" == "/Y" set _ArgTestDeploy=false&amp;goto :ArgumentOK
if /I "%_ArgFlag%" == "/L" set _ArgLocalIIS=true&amp;goto :ArgumentOK

if /I "%_ArgFlag%" == "/M:" set _ArgComputerNameWithQuote="%_ArgValue%"&amp;goto :ArgumentOK
if /I "%_ArgFlag%" == "/U:" set _ArgUserNameWithQuote="%_ArgValue%"&amp;goto :ArgumentOK
if /I "%_ArgFlag%" == "/P:" set _ArgPasswordWithQuote="%_ArgValue%"&amp;goto :ArgumentOK
if /I "%_ArgFlag%" == "/E:" set _ArgEncryptPasswordWithQuote="%_ArgValue%"&amp;goto :ArgumentOK
if /I "%_ArgFlag%" == "/I:" set _ArgIncludeAclsWithQuote="%_ArgValue%"&amp;goto :ArgumentOK
if /I "%_ArgFlag%" == "/A:" set _ArgAuthTypeWithQuote="%_ArgValue%"&amp;goto :ArgumentOK
if /I "%_ArgFlag%" == "/G:" set _ArgtempAgentWithQuote="%_ArgValue%"&amp;goto :ArgumentOK

@rem Any addition flags, pass through to the msdeploy
if "%_HaveArgMSDeployAdditonalFlags%" == "" (
goto :Assign_ArgMsDeployAdditionalFlags
)
set _ArgMsDeployAdditionalFlags=%_ArgMsDeployAdditionalFlags:&amp;=^&amp;% %_ArgCurrent:&amp;=^&amp;%
set _HaveArgMSDeployAdditonalFlags=1
goto :ArgumentOK


:Assign_ArgMsDeployAdditionalFlags
set _ArgMsDeployAdditionalFlags=%_ArgCurrent:&amp;=^&amp;%
set _HaveArgMSDeployAdditonalFlags=1
goto :ArgumentOK

:ArgumentOK
shift
goto :NextArgument

:GetStarted
@rem ------------------------------------------

@rem ------------------------------------------
if /I "%_ArgTestDeploy%" == "" goto :usage
if /I "%_ArgDestinationType%" == ""  goto :usage

set _Destination=%_ArgDestinationType%
if not %_ArgComputerNameWithQuote% == "" set _Destination=%_Destination%,computerName=%_ArgComputerNameWithQuote%
if not %_ArgUserNameWithQuote% == "" set _Destination=%_Destination%,userName=%_ArgUserNameWithQuote%
if not %_ArgPasswordWithQuote% == "" set _Destination=%_Destination%,password=%_ArgPasswordWithQuote%
if not %_ArgAuthTypeWithQuote% == "" set _Destination=%_Destination%,authtype=%_ArgAuthTypeWithQuote%
if not %_ArgEncryptPasswordWithQuote% == "" set _Destination=%_Destination%,encryptPassword=%_ArgEncryptPasswordWithQuote%
if not %_ArgIncludeAclsWithQuote% == "" set _Destination=%_Destination%,includeAcls=%_ArgIncludeAclsWithQuote%
if not %_ArgtempAgentWithQuote% == "" set _Destination=%_Destination%,tempAgent=%_ArgtempAgentWithQuote%

@rem ------------------------------------------

@rem ------------------------------------------

                      
@rem ---------------------------------------------------------------------------------
@rem add -whatif when -T is specified                      
@rem ---------------------------------------------------------------------------------
if /I "%_ArgTestDeploy%" NEQ "false" (
set _MsDeployAdditionalFlags=-whatif %_MsDeployAdditionalFlags%
)

@rem ------------------------------------------

@rem ------------------------------------------

@rem ---------------------------------------------------------------------------------
@rem add flags for IISExpress when -L is specified                      
@rem ---------------------------------------------------------------------------------

if /I "%_ArgLocalIIS%" == "true" (
call :SetIISExpressArguments
)
if /I "%_ArgLocalIIS%" == "true" (
if not exist "%IISExpressPath%%IISExpressManifest%" (
echo. IISExpress is not found on this machine. Please install through Web Platform Installer before execute the script. 
echo. or remove /L flag
echo. Please visit https://go.microsoft.com/?linkid=9278654
goto :usage
)
if not exist "%IISExpressUserProfileDirectory%" (
echo. %IISExpressUserProfileDirectory% is not exists
echo. IISExpress is found on the machine. But the user have run IISExpress at least once.
echo. Please visit https://go.microsoft.com/?linkid=9278654 for detail
goto :usage
)
                      
set _MsDeployAdditionalFlags=%_MsDeployAdditionalFlags% -appHostConfigDir:%IISExpressUserProfileDirectory% -WebServerDir:"%IISExpressPath%" -webServerManifest:"%IISExpressManifest%"
)

@rem ---------------------------------------------------------------------------------
@rem check the existence of the package file
@rem ---------------------------------------------------------------------------------
if not exist "%RootPath%$$ProjectName$$.zip" (
echo "%RootPath%$$ProjectName$$.zip" does not exist. 
echo This batch file relies on this deploy source file^(s^) in the same folder.
goto :usage
)

@rem ---------------------------------------------

@rem ---------------------------------------------

@rem ---------------------------------------------------------------------------------
@rem Execute msdeploy.exe command line
@rem ---------------------------------------------------------------------------------
call :CheckParameterFile
echo. Start executing msdeploy.exe
echo -------------------------------------------------------
if  not exist "%_DeploySetParametersFile%" (
set _MSDeployCommandline="%MSDeployPath%msdeploy.exe" -source:package='%RootPath%$$ProjectName$$.zip' -dest:%_Destination% -verb:sync -disableLink:AppPoolExtension -disableLink:ContentExtension -disableLink:CertificateExtension
) else (
set _MSDeployCommandline="%MSDeployPath%msdeploy.exe" -source:package='%RootPath%$$ProjectName$$.zip' -dest:%_Destination% -verb:sync -disableLink:AppPoolExtension -disableLink:ContentExtension -disableLink:CertificateExtension -setParamFile:"%_DeploySetParametersFile%"
)

if "%_HaveArgMSDeployAdditonalFlags%" == "" (
goto :MSDeployWithOutArgMsDeployAdditionalFlag
) 
goto :MSDeployWithArgMsDeployAdditionalFlag
goto :eof

@rem ---------------------------------------------------------------------------------
@rem MSDeployWithArgMsDeployAdditionalFlag
@rem ---------------------------------------------------------------------------------
:MSDeployWithArgMsDeployAdditionalFlag
echo. %_MSDeployCommandline% %_MsDeployAdditionalFlags% %_ArgMsDeployAdditionalFlags:&amp;=^&amp;%
%_MSDeployCommandline% %_MsDeployAdditionalFlags% %_ArgMsDeployAdditionalFlags:&amp;=^&amp;%
IF %ERRORLEVEL% NEQ 0 (
  exit 1
)
goto :eof

@rem ---------------------------------------------------------------------------------
@rem MSDeployWithOutArgMsDeployAdditionalFlag
@rem ---------------------------------------------------------------------------------
:MSDeployWithOutArgMsDeployAdditionalFlag
echo. %_MSDeployCommandline% %_MsDeployAdditionalFlags%
%_MSDeployCommandline% %_MsDeployAdditionalFlags%
IF %ERRORLEVEL% NEQ 0 (
  exit 1
)
goto :eof

@rem ---------------------------------------------------------------------------------
@rem Find and set IISExpress argument.
@rem ---------------------------------------------------------------------------------
:SetIISExpressArguments
                      
if "%IISExpressPath%" == "" (
for /F "usebackq tokens=1,2,*" %%h  in (`reg query "HKLM\SOFTWARE\Microsoft\IISExpress" /s  ^| findstr -i "InstallPath"`) do (
if /I "%%h" == "InstallPath" ( 
if /I "%%i" == "REG_SZ" ( 
if not "%%j" == "" ( 
if "%%~dpj" == "%%j" ( 
set IISExpressPath=%%j
))))))

if "%IISExpressPath%" == "" (
for /F "usebackq tokens=1,2,*" %%h  in (`reg query "HKLM\SOFTWARE\Wow6432Node\Microsoft\IISExpress" /s  ^| findstr -i "InstallPath"`) do (
if /I "%%h" == "InstallPath" ( 
if /I "%%i" == "REG_SZ" ( 
if not "%%j" == "" ( 
if "%%~dpj" == "%%j" ( 
set IISExpressPath=%%j
))))))

if "%PersonalDocumentFolder%" == "" (
for /F "usebackq tokens=2*" %%i  in (`reg query "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders" /v Personal`) do (
set PersonalDocumentFolder=%%j
))

if "%IISExpressManifest%" == "" (
for /F "usebackq tokens=1,2,*" %%h  in (`reg query "HKLM\SOFTWARE\Microsoft\IISExpress" /s  ^| findstr -i "Manifest"`) do (
if /I "%%h" == "Manifest" ( 
if /I "%%i" == "REG_SZ" ( 
if not "%%j" == "" ( 
set IISExpressManifest=%%j
)))))

if "%IISExpressManifest%" == "" (
for /F "usebackq tokens=1,2,*" %%h  in (`reg query "HKLM\SOFTWARE\Wow6432Node\Microsoft\IISExpress" /s  ^| findstr -i "Manifest"`) do (
if /I "%%h" == "Manifest" ( 
if /I "%%i" == "REG_SZ" ( 
if not "%%j" == "" ( 
set IISExpressManifest=%%j
)))))
                      
set IISExpressUserProfileDirectory="%PersonalDocumentFolder%\IISExpress\config"

@rem ---------------------------------------------

@rem ---------------------------------------------

goto :eof                      
                      
@rem ---------------------------------------------------------------------------------
@rem CheckParameterFile -- check if the package's setparamters.xml exists or not
@rem ---------------------------------------------------------------------------------
:CheckParameterFile
if exist "%_DeploySetParametersFile%" (
echo SetParameters from:
echo "%_DeploySetParametersFile%"
echo You can change IIS Application Name, Physical path, connectionString
echo or other deploy parameters in the above file.
) else (
echo SetParamterFiles does not exist in package location.
echo Use package embedded defaultValue to deploy.
)
echo -------------------------------------------------------
goto :eof

@rem ---------------------------------------------------------------------------------
@rem Usage
@rem ---------------------------------------------------------------------------------
:usage
echo =========================================================
if not exist "%RootPath%$$ProjectName$$.deploy-readme.txt" (
echo Usage:%~nx0 [/T^|/Y] [/M:ComputerName] [/U:userName] [/P:password] [/G:tempAgent] [additional msdeploy flags ...]
echo Required flags:
echo /T  Calls msdeploy.exe with the "-whatif" flag, which simulates deployment. 
echo /Y  Calls msdeploy.exe without the "-whatif" flag, which deploys the package to the current machine or destination server 
echo Optional flags:  
echo. By Default, this script deploy to the current machine where this script is invoked which will use current user credential without tempAgent. 
echo.   Only pass these arguments when in advance scenario.
echo /M:  Msdeploy destination name of remote computer or proxy-URL. Default is local.
echo /U:  Msdeploy destination user name. 
echo /P:  Msdeploy destination password.
echo /G:  Msdeploy destination tempAgent. True or False. Default is false.
echo /A:  specifies the type of authentication to be used. The possible values are NTLM and Basic. If the wmsvc provider setting is specified, the default authentication type is Basic
otherwise, the default authentication type is NTLM.
echo /L:  Deploy to Local IISExpress User Instance.  

echo.[additional msdeploy flags]: note: " is required for passing = through command line.
echo  "-skip:objectName=setAcl" "-skip:objectName=dbFullSql"
echo.Alternative environment variable _MsDeployAdditionalFlags is also honored.
echo.
echo. Please make sure MSDeploy is installed in the box https://go.microsoft.com/?linkid=9278654
echo.
echo In addition, you can change IIS Application Name, Physical path, 
echo connectionString and other deploy parameters in the following file:
echo "%_DeploySetParametersFile%"
echo.
echo For more information about this batch file, visit https://go.microsoft.com/fwlink/?LinkID=183544 
) else (
start notepad "%RootPath%$$ProjectName$$.deploy-readme.txt"
)
echo =========================================================
goto :eof</value>
    <comment>{Locked}</comment>
  </data>
  <data name="MsDeployReadMe" xml:space="preserve">
    <value>===========================
Prerequisites :
--------------------------
To deploy this Web package, Web Deploy (msdeploy.exe) must be installed on the computer that runs the .cmd file. For information about how to install Web Deploy, see the following URL:
https://go.microsoft.com/?linkid=9278654
This batch file requires that the package file "$$ProjectName$$.zip" and optionally provided the parameters file "$$ProjectName$$.SetParameters.xml" in the same folder or destination folder by environment variable.

===========================
Usage:
--------------------------
$$ProjectName$$.deploy.cmd [/T|/Y] [/M:ComputerName] [/U:UserName] [/P:Password] [/G:&lt;True | False&gt;] [/A:&lt;Basic | NTLM&gt;] [Additional msdeploy.exe flags ...]


===========================
Required Flags:
--------------------------
/T:
	Calls msdeploy.exe with the "-whatif" flag, which simulates deployment. This does not deploy the package. Instead, it creates a report of what will happen when you actually deploy the package.
/Y:
	Calls msdeploy.exe without the "-whatif" flag, which deploys the package to the current machine or a destination server. Use /Y after you have verified the output that was generated by using the /T flag.

Note: Do not use /T and /Y in the same command.

===========================
Optional Flags:
--------------------------
 By Default, this script deploy on the current machine where this script is called with current user credential without agent service. Only pass the following value for advance scenario.

/M:&lt;Destination server name or Service URL&gt;
	If this flag is not specified, the package is installed on the computer where the command is run. The Service URL can be in the following format:
		https://&lt;DestinationServer&gt;:8172/MSDeploy.axd 
	This format requires that IIS 7 be installed on the destination server and that IIS 7 Web Management Service(WMSvc) and Web Deployment Handler be set up.
	The service URL can also be in the following format:
		http://&lt;DestinationServer&gt;/MSDeployAgentService 
	This format requires administrative rights on the destination server, and it requires that Web Deploy Remote Service (MsDepSvc) be installed on the destination server. IIS 7 does not have to be installed on the destination server.

/U:&lt;UserName&gt;
/P:&lt;Password&gt;
/G:&lt;True | False&gt;
	Specifies that the package is deployed by creating a temporary listener on the destination server. This requires no special installation on the destination server, but it requires you to be an administrator on that server. The default value of this flag is False. 

/A:&lt;Basic | NTLM&gt;
	Specifies the type of authentication to be used. The possible values are NTLM and Basic. If the wmsvc provider setting is specified, the default authentication type is Basic; otherwise, the default authentication type is NTLM. 

/L 
	Specifies that the package is deployed to local IISExpress user instance.

[Additional msdeploy.exe flags]
	The msdeploy.exe command supports additional flags. You can include any of these additional flags in the "$$ProjectName$$.Deploy.cmd" file, and the flags are passed through to msdeploy.exe during execution.
	Alternatively, you can specify additional flags by setting the "_MsDeployAdditionalFlags" environment variable. These settings are used by this batch file.
	Note: Any flag value that includes an equal sign (=) must be enclosed in double quotation marks, as shown in the following example, which will skip deploying the databases that are included in the package:
		"-skip:objectName=dbFullSql" 

===========================
Environment-Specific Settings:
--------------------------

	To customize application-specific settings for each deployment environment (for example, the IIS application name, the physical path, and any connection strings), edit the settings in the following file: 
		 "$$ProjectName$$.SetParameters.xml"
===========================
For more information on this deploy script visit:	https://go.microsoft.com/fwlink/?LinkID=183544</value>
    <comment>{Locked}</comment>
  </data>
  <data name="WebConfigTransform_HostingModel_Error" xml:space="preserve">
    <value>The acceptable value for AspNetCoreHostingModel property is either "InProcess" or "OutOfProcess".</value>
  </data>
  <data name="WebConfigTransform_InvalidHostingOption" xml:space="preserve">
    <value>In process hosting is not supported for AspNetCoreModule. Change the AspNetCoreModule to at least AspNetCoreModuleV2.</value>
  </data>
  <data name="ZIPDEPLOY_InvalidSiteNamePublishUrl" xml:space="preserve">
    <value>Neither SiteName nor PublishUrl was given a value.</value>
  </data>
  <data name="ZIPDEPLOY_PublishingZip" xml:space="preserve">
    <value>Publishing {0} to {1}...</value>
    <comment>{0} - Path of zip to publish, {1} - URL to deploy zip</comment>
  </data>
  <data name="ZIPDEPLOY_FailedDeployWithLogs" xml:space="preserve">
    <value>The attempt to publish the ZIP file through '{0}' failed with HTTP status code '{1}'. See the logs at '{2}'.</value>
    <comment>{0} - URL to deploy zip, {1} - HTTP response code, {2} - Logs URL</comment>
  </data>
  <data name="ZIPDEPLOY_FailedToRetrieveCred" xml:space="preserve">
    <value>Failed to retrieve credentials.</value>
  </data>
  <data name="EFSCRIPT_Generating" xml:space="preserve">
    <value>Generating Entity Framework SQL Scripts...</value>
  </data>
  <data name="EFSCRIPT_GenerationCompleted" xml:space="preserve">
    <value>Generating Entity Framework SQL Scripts completed successfully</value>
  </data>
  <data name="EFSCRIPT_GenerationFailed" xml:space="preserve">
    <value>Entity Framework SQL Script generation failed</value>
  </data>
  <data name="ZIPDEPLOY_Check_DeploymentStatus" xml:space="preserve">
    <value>Checking the deployment status...</value>
  </data>
  <data name="ZIPDEPLOY_DeploymentStatus" xml:space="preserve">
    <value>Deployment status is {0}.</value>
    <comment>{0} - Success or failed</comment>
  </data>
  <data name="ZIPDEPLOY_DeploymentStatusPolling" xml:space="preserve">
    <value>Polling for deployment status...</value>
  </data>
  <data name="ZIPDEPLOY_Failed" xml:space="preserve">
    <value>Zip Deployment failed. </value>
  </data>
  <data name="ZIPDEPLOY_Succeeded" xml:space="preserve">
    <value>Zip Deployment succeeded.</value>
  </data>
  <data name="ZIPDEPLOY_Uploaded" xml:space="preserve">
    <value>Uploaded the Zip file to the target.</value>
  </data>
  <data name="ZIPDEPLOY_FailedDeploy" xml:space="preserve">
    <value>The attempt to publish the ZIP file through '{0}' failed with HTTP status code '{1}'.</value>
    <comment>{0} - URL to deploy zip, {1} - HTTP response code</comment>
  </data>
</root>
