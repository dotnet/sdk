<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="de" original="../LocalizableStrings.resx">
    <body>
      <trans-unit id="AppFullName">
        <source>.NET Test Driver</source>
        <target state="translated">.NET-Testtreiber</target>
        <note />
      </trans-unit>
      <trans-unit id="AppDescription">
        <source>Test Driver for the .NET Platform</source>
        <target state="translated">Testtreiber für die .NET-Plattform</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameCrashCollectAlwaysDescription">
        <source>Enables collecting crash dump on expected as well as unexpected testhost exit.</source>
        <target state="translated">Aktiviert die Erfassung von Absturzabbildern bei einer erwarteten und einer unerwarteten Beendigung des Testhosts.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameCrashDescription">
        <source>Runs the tests in blame mode and collects a crash dump when the test host exits unexpectedly. This option depends on the version of .NET used, the type of error, and the operating system.
  
For exceptions in managed code, a dump will be automatically collected on .NET 5.0 and later versions. It will generate a dump for testhost or any child process that also ran on .NET 5.0 and crashed. Crashes in native code will not generate a dump. This option works on Windows, macOS, and Linux.

Crash dumps in native code, or when targetting .NET Framework, or .NET Core 3.1 and earlier versions, can only be collected on Windows, by using Procdump. A directory that contains procdump.exe and procdump64.exe must be in the PATH or PROCDUMP_PATH environment variable.

The tools can be downloaded here: https://docs.microsoft.com/sysinternals/downloads/procdump
  
To collect a crash dump from a native application running on .NET 5.0 or later, the usage of Procdump can be forced by setting the VSTEST_DUMP_FORCEPROCDUMP environment variable to 1.

Implies --blame.</source>
        <target state="needs-review-translation">Führt den Test im Modus "Verantwortung zuweisen" aus und aktiviert die Erfassung von Absturzabbildern bei einer unerwarteten Beendigung des Testhosts. 
Diese Option wird derzeit nur unter Windows unterstützt und erfordert, dass "procdump.exe" und "procdump64.exe" in PATH verfügbar sind.
Alternativ dazu kann die Umgebungsvariable PROCDUMP_PATH festgelegt werden und auf ein Verzeichnis verweisen, das "procdump.exe" und "procdump64.exe" enthält. 
Die Tools können hier heruntergeladen werden: https://docs.microsoft.com/sysinternals/downloads/procdump 
Impliziert "--blame".</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameCrashDumpTypeDescription">
        <source>The type of crash dump to be collected. Supported values are full (default) and mini. Implies --blame-crash.</source>
        <target state="needs-review-translation">Der Typ des zu erfassenden Absturzspeicherabbilds. Impliziert "--blame-crash".</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameHangDescription">
        <source>Run the tests in blame mode and enables collecting hang dump when test exceeds the given timeout. Implies --blame-hang.</source>
        <target state="translated">Hiermit werden Tests im Modus "Verantwortung zuweisen" ausgeführt, und es wird die Erfassung eines Blockadeabbilds aktiviert, wenn der Test länger als angegeben dauert. Impliziert "--blame-hang".</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameHangDumpTypeDescription">
        <source>The type of crash dump to be collected. The supported values are full (default), mini, and none. When 'none' is used then test host is terminated on timeout, but no dump is collected. Implies --blame-hang.</source>
        <target state="needs-review-translation">Der Typ des zu erfassenden Absturzabbilds. Bei Festlegung auf "None" wird der Testhost bei einem Timeout beendet, aber es wird kein Speicherabbild erfasst. Impliziert "--blame-hang".</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameHangTimeoutDescription">
        <source>Per-test timeout, after which hang dump is triggered and the testhost process is terminated. Default is 1h.
The timeout value is specified in the following format: 1.5h / 90m / 5400s / 5400000ms. When no unit is used (e.g. 5400000), the value is assumed to be in milliseconds.
When used together with data driven tests, the timeout behavior depends on the test adapter used. For xUnit, NUnit and MSTest 2.2.4+ the timeout is renewed after every test case,
For MSTest before 2.2.4, the timeout is used for all testcases.</source>
        <target state="needs-review-translation">Timeout pro Test, nach dem ein Blockadeabbild ausgelöst und der Testhostprozess beendet wird. 
Der Timeoutwert wird im folgenden Format angegeben: 1.5h / 90m / 5400s / 5400000ms. Ist keine Einheit angegeben (z. B. 5400000), wird von einem Wert in Millisekunden ausgegangen.
Bei Verwendung in Verbindung mit datengesteuerten Tests hängt das Timeoutverhalten vom verwendeten Testadapter ab. Für xUnit und NUnit wird das Timeout nach jedem Testfall erneuert,
für MSTest wird das Timeout für alle Testfälle verwendet.
Diese Option wird aktuell nur unter Windows zusammen mit netcoreapp 2.1 und höher unterstützt. Unter Linux wird die Option mit netcoreapp 3.1 und höher unterstützt. OSX und UWP werden nicht unterstützt.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdEnvironmentVariableDescription">
        <source>Sets the value of an environment variable. 
Creates the variable if it does not exist, overrides if it does. 
This will force the tests to be run in an isolated process. 
This argument can be specified multiple times to provide multiple variables.

Examples:
-e VARIABLE=abc
-e VARIABLE="value with spaces"
-e VARIABLE="value;seperated with;semicolons"
-e VAR1=abc -e VAR2=def -e VAR3=ghi
</source>
        <target state="translated">Legt den Wert einer Umgebungsvariablen fest. 
Erstellt die Variable, wenn Sie nicht vorhanden ist, und setzt sie andernfalls außer Kraft. 
Dadurch wird die Ausführung der Tests in einem isolierten Prozess erzwungen. 
Dieses Argument kann mehrmals angegeben werden, um mehrere Variablen bereitzustellen.

Beispiele:
-e VARIABLE=abc
-e VARIABLE="wert mit leerzeichen"
-e VARIABLE="wert;getrennt durch;semikolons"
-e VAR1=abc -e VAR2=def -e VAR3=ghi
</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdEnvironmentVariableExpression">
        <source>NAME="VALUE"</source>
        <target state="translated">NAME="WERT"</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdNoLogo">
        <source>Run test(s), without displaying Microsoft Testplatform banner</source>
        <target state="translated">Test(s) ohne Anzeige des Microsoft-Testplattformbanners ausführen</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdSettingsFile">
        <source>SETTINGS_FILE</source>
        <target state="translated">SETTINGS_FILE</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdSettingsDescription">
        <source>The settings file to use when running tests.</source>
        <target state="translated">Die beim Ausführen von Tests zu verwendende Einstellungsdatei.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdListTestsDescription">
        <source>List the discovered tests instead of running the tests.</source>
        <target state="translated">Hiermit werden die gefundenen Tests aufgelistet, anstatt sie auszuführen.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdTestCaseFilterExpression">
        <source>EXPRESSION</source>
        <target state="translated">EXPRESSION</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdTestCaseFilterDescription">
        <source>Run tests that match the given expression.
                                        Examples:
                                        Run tests with priority set to 1: --filter "Priority = 1"
                                        Run a test with the specified full name: --filter "FullyQualifiedName=Namespace.ClassName.MethodName"
                                        Run tests that contain the specified name: --filter "FullyQualifiedName~Namespace.Class"
                                        See https://aka.ms/vstest-filtering for more information on filtering support.
                                        </source>
        <target state="translated">Hiermit werden Tests ausgeführt, die dem angegebenen Ausdruck entsprechen.
                                        Beispiele:
                                        Hiermit werden Tests ausgeführt, bei denen die Priorität auf 1 festgelegt ist: --filter "Priority = 1"
                                        Hiermit wird ein Test mit dem angegebenen vollständigen Namen ausgeführt: --filter "FullyQualifiedName=Namespace.ClassName.MethodName"
                                        Hiermit werden Tests ausgeführt, die den angegebenen Namen enthalten: --filter "FullyQualifiedName~Namespace.Class"
                                        Weitere Informationen zur Unterstützung der Filterung finden Sie unter https://aka.ms/vstest-filtering.
                                        </target>
        <note />
      </trans-unit>
      <trans-unit id="CmdTestAdapterPathDescription">
        <source>The path to the custom adapters to use for the test run.</source>
        <target state="translated">Der Pfad zu den benutzerdefinierten Adaptern, die für den Testlauf verwendet werden sollen.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdLoggerOption">
        <source>LOGGER</source>
        <target state="translated">LOGGER</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdLoggerDescription">
        <source>The logger to use for test results.
                                        Examples:
                                        Log in trx format using a unique file name: --logger trx
                                        Log in trx format using the specified file name: --logger "trx;LogFileName=&lt;TestResults.trx&gt;"
                                        See https://aka.ms/vstest-report for more information on logger arguments.</source>
        <target state="translated">Die für Testergebnisse zu verwendende Protokollierung.
                                        Beispiele:
                                        Protokollierung im TRX-Format mit einem eindeutigen Dateinamen: --logger trx
                                        Protokollierung im TRX-Format mit dem angegebenen Dateinamen: --logger "trx;LogFileName=&lt;TestResults.trx&gt;"
                                        Weitere Informationen zu Protokollierungsargumenten finden Sie unter https://aka.ms/vstest-report.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdOutputDir">
        <source>OUTPUT_DIR</source>
        <target state="translated">OUTPUT_DIR</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdOutputDescription">
        <source>The output directory to place built artifacts in.</source>
        <target state="translated">Das Ausgabeverzeichnis, in dem erstellte Artefakte abgelegt werden.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdPathToLogFile">
        <source>LOG_FILE</source>
        <target state="translated">LOG_FILE</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdPathTologFileDescription">
        <source>Enable verbose logging to the specified file.</source>
        <target state="translated">Hiermit wird die ausführliche Protokollierung in der angegebenen Datei aktiviert.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdNoBuildDescription">
        <source>Do not build the project before testing. Implies --no-restore.</source>
        <target state="translated">Erstellt das Projekt nicht vor dem Testen. Impliziert "--no-restore".</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdTestAdapterPath">
        <source>ADAPTER_PATH</source>
        <target state="translated">ADAPTER_PATH</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdResultsDirectoryDescription">
        <source>The directory where the test results will be placed.
The specified directory will be created if it does not exist.</source>
        <target state="translated">Das Verzeichnis, in dem die Testergebnisse abgelegt werden.
Das angegebene Verzeichnis wird erstellt, wenn es nicht vorhanden ist.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdPathToResultsDirectory">
        <source>RESULTS_DIR</source>
        <target state="translated">RESULTS_DIR</target>
        <note />
      </trans-unit>
      <trans-unit id="CrashDumpTypeArgumentName">
        <source>DUMP_TYPE</source>
        <target state="translated">DUMP_TYPE</target>
        <note />
      </trans-unit>
      <trans-unit id="HangDumpTypeArgumentName">
        <source>DUMP_TYPE</source>
        <target state="translated">DUMP_TYPE</target>
        <note />
      </trans-unit>
      <trans-unit id="HangTimeoutArgumentName">
        <source>TIMESPAN</source>
        <target state="translated">TIMESPAN</target>
        <note />
      </trans-unit>
      <trans-unit id="IgnoredArgumentsMessage">
        <source>The following arguments have been ignored : "{0}"</source>
        <target state="translated">Die folgenden Argumente wurden ignoriert: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="RunSettingsArgumentsDescription">
        <source>

RunSettings arguments:
  Arguments to pass as RunSettings configurations. Arguments are specified as '[name]=[value]' pairs after "-- " (note the space after --). 
  Use a space to separate multiple '[name]=[value]' pairs.
  See https://aka.ms/vstest-runsettings-arguments for more information on RunSettings arguments.
  Example: dotnet test -- MSTest.DeploymentEnabled=false MSTest.MapInconclusiveToFailed=True</source>
        <target state="translated">

RunSettings-Argumente:
  Argumente zum Übergeben von RunSettings-Konfigurationen. Argumente werden als "[Name]=[Wert]"-Paar nach "-- " angegeben. Beachten Sie das Leerzeichen nach "--".
      Trennen Sie mehrere Paare der Form "[Name]=[Wert]" mithilfe von Leerzeichen.
      Weitere Informationen zu RunSettings-Argumenten finden Sie unter https://aka.ms/vstest-runsettings-arguments.
  Beispiel: "dotnet test -- MSTest.DeploymentEnabled=false MSTest.MapInconclusiveToFailed=True"</target>
        <note />
      </trans-unit>
      <trans-unit id="cmdCollectFriendlyName">
        <source>DATA_COLLECTOR_NAME</source>
        <target state="translated">DATA_COLLECTOR_NAME</target>
        <note />
      </trans-unit>
      <trans-unit id="cmdCollectDescription">
        <source>The friendly name of the data collector to use for the test run.
                                        More info here: https://aka.ms/vstest-collect</source>
        <target state="translated">Der Anzeigename des Datensammlers für den Testlauf.
                                        Weitere Informationen finden Sie hier: https://aka.ms/vstest-collect</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameDescription">
        <source>Runs the tests in blame mode. This option is helpful in isolating problematic tests that cause the test host to crash or hang, but it does not create a memory dump by default. 

When a crash is detected, it creates an sequence file in TestResults/guid/guid_Sequence.xml that captures the order of tests that were run before the crash.

Based on the additional settings, hang dump or crash dump can also be collected.

Example: 
  Timeout the test run when test takes more than the default timeout of 1 hour, and collect crash dump when the test host exits unexpectedly. 
  (Crash dumps require additional setup, see below.)
  dotnet test --blame-hang --blame-crash
Example: 
  Timeout the test run when a test takes more than 20 minutes and collect hang dump. 
  dotnet test --blame-hang-timeout 20min
</source>
        <target state="needs-review-translation">Führt den Test im Modus "Verantwortung zuweisen" aus. Diese Option ist hilfreich zum Isolieren des problematischen Tests, der dazu geführt hat, dass der Testhost abgestürzt ist oder nicht mehr reagiert.
Wird ein Absturz erkannt, wird in "TestResults/guid/guid_Sequence.xml" eine Sequenzdatei erstellt, in der die Reihenfolge der Testausführung vor dem Absturz erfasst wird.
Basierend auf den zusätzlichen Einstellungen kann auch ein Blockade- oder Absturzabbild erfasst werden.
Beispiel: 
  Es wird ein Timeout für die Testausführung ausgelöst, wenn der Test länger als 1 Stunde (Standardwert) dauert, und es wird ein Absturzabbild erfasst, wenn der Testhost unerwartet beendet wird. 
  (Für Absturzabbilder ist eine zusätzliche Einrichtung erforderlich, siehe unten.)
  dotnet test --blame-hang --blame-crash
Beispiel: 
  Es wird ein Timeout für die Testausführung ausgelöst, wenn der Test mehr als 20 Minuten dauert, und es wird ein Blockadeabbild erfasst. 
  dotnet test --blame-hang-timeout 20min
</target>
        <note />
      </trans-unit>
      <trans-unit id="FrameworkOptionDescription">
        <source>The target framework to run tests for. The target framework must also be specified in the project file.</source>
        <target state="translated">Das Zielframework für den Testlauf. Das Zielframework muss auch in der Projektdatei angegeben werden.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConfigurationOptionDescription">
        <source>The configuration to use for running tests. The default for most projects is 'Debug'.</source>
        <target state="translated">Die für die Testausführung zu verwendende Konfiguration. Standard für die meisten Projekte ist "Debug".</target>
        <note />
      </trans-unit>
      <trans-unit id="RuntimeOptionDescription">
        <source>The target runtime to test for.</source>
        <target state="translated">Die Zielruntime, für die Tests ausgeführt werden sollen.</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>