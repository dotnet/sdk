<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="zh-Hant" original="../LocalizableStrings.resx">
    <body>
      <trans-unit id="AppFullName">
        <source>.NET Test Driver</source>
        <target state="translated">.NET 測試驅動程式</target>
        <note />
      </trans-unit>
      <trans-unit id="AppDescription">
        <source>Test Driver for the .NET Platform</source>
        <target state="translated">適用於 .NET 平台的測試驅動程式</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameCrashCollectAlwaysDescription">
        <source>Enables collecting crash dump on expected as well as unexpected testhost exit.</source>
        <target state="translated">允許在測試主機如預期或未預期地結束時收集損毀傾印。</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameCrashDescription">
        <source>Runs the tests in blame mode and collects a crash dump when the test host exits unexpectedly. This option depends on the version of .NET used, the type of error, and the operating system.
  
For exceptions in managed code, a dump will be automatically collected on .NET 5.0 and later versions. It will generate a dump for testhost or any child process that also ran on .NET 5.0 and crashed. Crashes in native code will not generate a dump. This option works on Windows, macOS, and Linux.

Crash dumps in native code, or when targetting .NET Framework, or .NET Core 3.1 and earlier versions, can only be collected on Windows, by using Procdump. A directory that contains procdump.exe and procdump64.exe must be in the PATH or PROCDUMP_PATH environment variable.

The tools can be downloaded here: https://docs.microsoft.com/sysinternals/downloads/procdump
  
To collect a crash dump from a native application running on .NET 5.0 or later, the usage of Procdump can be forced by setting the VSTEST_DUMP_FORCEPROCDUMP environment variable to 1.

Implies --blame.</source>
        <target state="needs-review-translation">當測試主機意外結束時，在改動者模式中執行測試，並允許收集損毀傾印。
目前只有 Windows 支援此選項，而且必須在 PATH 中提供 procdump.exe 與 procdump64.exe。
也可以設定 PROCDUMP_PATH 環境變數，並指向包含 procdump.exe 與 procdump64.exe 的目錄。
這些工具可從下列網址下載: https://docs.microsoft.com/sysinternals/downloads/procdump 
表示 --blame。</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameCrashDumpTypeDescription">
        <source>The type of crash dump to be collected. Supported values are full (default) and mini. Implies --blame-crash.</source>
        <target state="needs-review-translation">要收集的損毀傾印類型。Implies --blame-crash。</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameHangDescription">
        <source>Run the tests in blame mode and enables collecting hang dump when test exceeds the given timeout. Implies --blame-hang.</source>
        <target state="translated">當測試超過指定的逾時時，請在改動者模式中執行測試，並啟用收集停止回應傾印。Implies --blame-hang。</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameHangDumpTypeDescription">
        <source>The type of crash dump to be collected. The supported values are full (default), mini, and none. When 'none' is used then test host is terminated on timeout, but no dump is collected. Implies --blame-hang.</source>
        <target state="needs-review-translation">要收集之損毀傾印的類型。若使用 [無]，測試主機將會在逾時時終止，但不會收集任何傾印。Implies --blame-hang。</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameHangTimeoutDescription">
        <source>Per-test timeout, after which hang dump is triggered and the testhost process is terminated. Default is 1h.
The timeout value is specified in the following format: 1.5h / 90m / 5400s / 5400000ms. When no unit is used (e.g. 5400000), the value is assumed to be in milliseconds.
When used together with data driven tests, the timeout behavior depends on the test adapter used. For xUnit, NUnit and MSTest 2.2.4+ the timeout is renewed after every test case,
For MSTest before 2.2.4, the timeout is used for all testcases.</source>
        <target state="needs-review-translation">每個測試的逾時，在此之後將會觸發停止回應傾印，而且測試主機處理序將會終止。
指定此逾時值時，請使用下列格式: 1.5 h/90m/5400s/5400000ms。若未使用單位 (例如 5400000)，將會假設該值的單位為毫秒。
當與資料驅動型測試並用時，逾時行為取決於使用的測試配接器。對於 xUnit 與 NUnit，此逾時值會在每次執行測試案例之後更新。
對於 MSTest，此逾時值會套用到所有測試案例。
目前只有安裝有 netcoreapp 2.1 及更新版本的 Windows 支援此選項。此外安裝有 netcoreapp 3.1 及更新版本的 Linux 也支援此選項。不支援 OSX 與 UWP。</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdEnvironmentVariableDescription">
        <source>Sets the value of an environment variable. 
Creates the variable if it does not exist, overrides if it does. 
This will force the tests to be run in an isolated process. 
This argument can be specified multiple times to provide multiple variables.

Examples:
-e VARIABLE=abc
-e VARIABLE="value with spaces"
-e VARIABLE="value;seperated with;semicolons"
-e VAR1=abc -e VAR2=def -e VAR3=ghi
</source>
        <target state="translated">設定環境變數的值。
若變數不存在，則加以建立; 若有，則予以覆寫。
這會強制在隔離流程中執行測試。
此引數可多次指定，以提供多項變數。

範例:
-e VARIABLE=abc
-e VARIABLE="value with spaces"
-e VARIABLE="value;seperated with;semicolons"
-e VAR1=abc -e VAR2=def -e VAR3=ghi
</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdEnvironmentVariableExpression">
        <source>NAME="VALUE"</source>
        <target state="translated">NAME="VALUE"</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdNoLogo">
        <source>Run test(s), without displaying Microsoft Testplatform banner</source>
        <target state="translated">執行測試，但不顯示 Microsoft Testplatform 橫幅</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdSettingsFile">
        <source>SETTINGS_FILE</source>
        <target state="translated">SETTINGS_FILE</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdSettingsDescription">
        <source>The settings file to use when running tests.</source>
        <target state="translated">執行測試時要使用的設定檔。</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdListTestsDescription">
        <source>List the discovered tests instead of running the tests.</source>
        <target state="translated">列出探索到的測試，而非執行測試。</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdTestCaseFilterExpression">
        <source>EXPRESSION</source>
        <target state="translated">EXPRESSION</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdTestCaseFilterDescription">
        <source>Run tests that match the given expression.
                                        Examples:
                                        Run tests with priority set to 1: --filter "Priority = 1"
                                        Run a test with the specified full name: --filter "FullyQualifiedName=Namespace.ClassName.MethodName"
                                        Run tests that contain the specified name: --filter "FullyQualifiedName~Namespace.Class"
                                        See https://aka.ms/vstest-filtering for more information on filtering support.
                                        </source>
        <target state="translated">執行符合指定運算式的測試。
                                        範例:
                                        執行測試，而優先順序設為 1: --filter "Priority = 1"
                                        使用指定的全名執行測試: --filter "FullyQualifiedName=Namespace.ClassName.MethodName"
                                        執行內含指定名稱的測試: --filter "FullyQualifiedName~Namespace.Class"
                                        如需篩選支援的詳細資訊，請參閱 https://aka.ms/vstest-filtering。
                                        </target>
        <note />
      </trans-unit>
      <trans-unit id="CmdTestAdapterPathDescription">
        <source>The path to the custom adapters to use for the test run.</source>
        <target state="translated">到達用於測試執行的自訂配接器路徑。</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdLoggerOption">
        <source>LOGGER</source>
        <target state="translated">LOGGER</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdLoggerDescription">
        <source>The logger to use for test results.
                                        Examples:
                                        Log in trx format using a unique file name: --logger trx
                                        Log in trx format using the specified file name: --logger "trx;LogFileName=&lt;TestResults.trx&gt;"
                                        See https://aka.ms/vstest-report for more information on logger arguments.</source>
        <target state="translated">用於測試結果的記錄器。
                                        範例:
                                        使用獨特的檔案名稱登入 trx 格式: --logger trx
                                        使用指定的檔案名稱登入 trx 格式: --logger "trx;LogFileName=&lt;TestResults.trx&gt;"
                                        如需了解記錄器引數的詳細資訊，請參閱 https://aka.ms/vstest-report。</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdOutputDir">
        <source>OUTPUT_DIR</source>
        <target state="translated">OUTPUT_DIR</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdOutputDescription">
        <source>The output directory to place built artifacts in.</source>
        <target state="translated">放置建置成品的輸出目錄。</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdPathToLogFile">
        <source>LOG_FILE</source>
        <target state="translated">LOG_FILE</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdPathTologFileDescription">
        <source>Enable verbose logging to the specified file.</source>
        <target state="translated">為指定的檔案啟用詳細資訊記錄。</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdNoBuildDescription">
        <source>Do not build the project before testing. Implies --no-restore.</source>
        <target state="translated">請勿在測試之前建置專案。提示：-no-restore。</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdTestAdapterPath">
        <source>ADAPTER_PATH</source>
        <target state="translated">ADAPTER_PATH</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdResultsDirectoryDescription">
        <source>The directory where the test results will be placed.
The specified directory will be created if it does not exist.</source>
        <target state="translated">將放置測試結果的目錄。
若指定的目錄不存在，則會建立該目錄。</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdPathToResultsDirectory">
        <source>RESULTS_DIR</source>
        <target state="translated">RESULTS_DIR</target>
        <note />
      </trans-unit>
      <trans-unit id="CrashDumpTypeArgumentName">
        <source>DUMP_TYPE</source>
        <target state="translated">DUMP_TYPE</target>
        <note />
      </trans-unit>
      <trans-unit id="HangDumpTypeArgumentName">
        <source>DUMP_TYPE</source>
        <target state="translated">DUMP_TYPE</target>
        <note />
      </trans-unit>
      <trans-unit id="HangTimeoutArgumentName">
        <source>TIMESPAN</source>
        <target state="translated">TIMESPAN</target>
        <note />
      </trans-unit>
      <trans-unit id="IgnoredArgumentsMessage">
        <source>The following arguments have been ignored : "{0}"</source>
        <target state="translated">已忽略下列引數: "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="RunSettingsArgumentsDescription">
        <source>

RunSettings arguments:
  Arguments to pass as RunSettings configurations. Arguments are specified as '[name]=[value]' pairs after "-- " (note the space after --). 
  Use a space to separate multiple '[name]=[value]' pairs.
  See https://aka.ms/vstest-runsettings-arguments for more information on RunSettings arguments.
  Example: dotnet test -- MSTest.DeploymentEnabled=false MSTest.MapInconclusiveToFailed=True</source>
        <target state="translated">

RunSettings 引數:
  傳遞為 RunSettings 組態的引數。引數的指定方式為成對的 '[name]=[value]'，接在 "-- " (請注意 -- 之後的空格) 之後。
  請使用空格隔開多個成對的 '[name]=[value]'。
  如需 RunSettings 引數的詳細資訊，請參閱 https://aka.ms/vstest-runsettings-arguments。
  範例: dotnet test -- MSTest.DeploymentEnabled=false MSTest.MapInconclusiveToFailed=True</target>
        <note />
      </trans-unit>
      <trans-unit id="cmdCollectFriendlyName">
        <source>DATA_COLLECTOR_NAME</source>
        <target state="translated">DATA_COLLECTOR_NAME</target>
        <note />
      </trans-unit>
      <trans-unit id="cmdCollectDescription">
        <source>The friendly name of the data collector to use for the test run.
                                        More info here: https://aka.ms/vstest-collect</source>
        <target state="translated">用於測試執行的資料收集器之易記名稱。
                                        此處提供詳細資訊: https://aka.ms/vstest-collect</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameDescription">
        <source>Runs the tests in blame mode. This option is helpful in isolating problematic tests that cause the test host to crash or hang, but it does not create a memory dump by default. 

When a crash is detected, it creates an sequence file in TestResults/guid/guid_Sequence.xml that captures the order of tests that were run before the crash.

Based on the additional settings, hang dump or crash dump can also be collected.

Example: 
  Timeout the test run when test takes more than the default timeout of 1 hour, and collect crash dump when the test host exits unexpectedly. 
  (Crash dumps require additional setup, see below.)
  dotnet test --blame-hang --blame-crash
Example: 
  Timeout the test run when a test takes more than 20 minutes and collect hang dump. 
  dotnet test --blame-hang-timeout 20min
</source>
        <target state="needs-review-translation">在改動者模式中執行測試。此選項可用於找出導致測試主機損毀或停止回應的問題測試。
當偵測到損毀時，其會在 TestResults/guid/guid_Sequence.xml 中建立所擷取在損毀前，測試之執行順序的順序檔案。
依據其他設定，也可收集損毀或停止回應的傾印。
範例: 
  當測試進行時間超過預設的 1 小時時，將測試逾時，並在測試主機未預期地結束時收集損毀傾印
  (損毀傾印需要其他的設定，請參閱下文)。
  dotnet test --blame-hang --blame-crash
範例: 
  當測試進行時間超過 20 分鐘時，將測試逾時，並收集停止回應傾印。
  dotnet test --blame-hang-timeout 20min
</target>
        <note />
      </trans-unit>
      <trans-unit id="FrameworkOptionDescription">
        <source>The target framework to run tests for. The target framework must also be specified in the project file.</source>
        <target state="translated">要為其執行測試的目標架構。該目標架構必須在專案檔中指定。</target>
        <note />
      </trans-unit>
      <trans-unit id="ConfigurationOptionDescription">
        <source>The configuration to use for running tests. The default for most projects is 'Debug'.</source>
        <target state="translated">要用於執行測試的組態。大部分的專案預設為「偵錯」。</target>
        <note />
      </trans-unit>
      <trans-unit id="RuntimeOptionDescription">
        <source>The target runtime to test for.</source>
        <target state="translated">要測試的目標執行時間。</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>