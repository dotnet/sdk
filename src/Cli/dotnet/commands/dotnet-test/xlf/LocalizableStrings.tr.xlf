<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="tr" original="../LocalizableStrings.resx">
    <body>
      <trans-unit id="AppFullName">
        <source>.NET Test Driver</source>
        <target state="translated">.NET Test Sürücüsü</target>
        <note />
      </trans-unit>
      <trans-unit id="AppDescription">
        <source>Test Driver for the .NET Platform</source>
        <target state="translated">.NET Platformunun Test Sürücüsü</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameCrashCollectAlwaysDescription">
        <source>Enables collecting crash dump on expected as well as unexpected testhost exit.</source>
        <target state="new">Enables collecting crash dump on expected as well as unexpected testhost exit.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameCrashDescription">
        <source>Runs the tests in blame mode and enables collecting crash dump when testhost exits unexpectedly. 
This option is currently only supported on Windows, and requires procdump.exe and procdump64.exe to be available in PATH.
Or PROCDUMP_PATH environment variable to be set, and point to a directory that contains procdump.exe and procdump64.exe. 
The tools can be downloaded here: https://docs.microsoft.com/sysinternals/downloads/procdump 
Implies --blame.</source>
        <target state="new">Runs the tests in blame mode and enables collecting crash dump when testhost exits unexpectedly. 
This option is currently only supported on Windows, and requires procdump.exe and procdump64.exe to be available in PATH.
Or PROCDUMP_PATH environment variable to be set, and point to a directory that contains procdump.exe and procdump64.exe. 
The tools can be downloaded here: https://docs.microsoft.com/sysinternals/downloads/procdump 
Implies --blame.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameCrashDumpTypeDescription">
        <source>The type of crash dump to be collected. Implies --blame-crash.</source>
        <target state="new">The type of crash dump to be collected. Implies --blame-crash.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameHangDescription">
        <source>Run the tests in blame mode and enables collecting hang dump when test exceeds the given timeout. Implies --blame-hang.</source>
        <target state="new">Run the tests in blame mode and enables collecting hang dump when test exceeds the given timeout. Implies --blame-hang.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameHangDumpTypeDescription">
        <source>The type of crash dump to be collected. When None, is used then test host is terminated on timeout, but no dump is collected. Implies --blame-hang.</source>
        <target state="new">The type of crash dump to be collected. When None, is used then test host is terminated on timeout, but no dump is collected. Implies --blame-hang.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameHangTimeoutDescription">
        <source>Per-test timeout, after which hang dump is triggered and the testhost process is terminated. 
The timeout value is specified in the following format: 1.5h / 90m / 5400s / 5400000ms. When no unit is used (e.g. 5400000), the value is assumed to be in milliseconds.
When used together with data driven tests, the timeout behavior depends on the test adapter used. For xUnit and NUnit the timeout is renewed after every test case,
For MSTest, the timeout is used for all testcases.
This option is currently supported only on Windows together with netcoreapp2.1 and newer. And on Linux with netcoreapp3.1 and newer. OSX and UWP are not supported.</source>
        <target state="new">Per-test timeout, after which hang dump is triggered and the testhost process is terminated. 
The timeout value is specified in the following format: 1.5h / 90m / 5400s / 5400000ms. When no unit is used (e.g. 5400000), the value is assumed to be in milliseconds.
When used together with data driven tests, the timeout behavior depends on the test adapter used. For xUnit and NUnit the timeout is renewed after every test case,
For MSTest, the timeout is used for all testcases.
This option is currently supported only on Windows together with netcoreapp2.1 and newer. And on Linux with netcoreapp3.1 and newer. OSX and UWP are not supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdEnvironmentVariableDescription">
        <source>Sets the value of an environment variable. 
Creates the variable if it does not exist, overrides if it does. 
This will force the tests to be run in an isolated process. 
This argument can be specified multiple times to provide multiple variables.

Examples:
-e VARIABLE1=VALUE1
-e ANOTHER_VARIABLE="VALUE WITH SPACES"
-e ANOTHER_VARIABLE="VALUE;seperated with;semicolons"</source>
        <target state="new">Sets the value of an environment variable. 
Creates the variable if it does not exist, overrides if it does. 
This will force the tests to be run in an isolated process. 
This argument can be specified multiple times to provide multiple variables.

Examples:
-e VARIABLE1=VALUE1
-e ANOTHER_VARIABLE="VALUE WITH SPACES"
-e ANOTHER_VARIABLE="VALUE;seperated with;semicolons"</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdEnvironmentVariableExpression">
        <source>NAME="VALUE"</source>
        <target state="new">NAME="VALUE"</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdNoLogo">
        <source>Run test(s), without displaying Microsoft Testplatform banner</source>
        <target state="translated">Testleri Microsoft Testplatform bandını görüntülemeden çalıştır</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdSettingsFile">
        <source>SETTINGS_FILE</source>
        <target state="translated">AYAR_DOSYASI</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdSettingsDescription">
        <source>The settings file to use when running tests.</source>
        <target state="translated">Testleri çalıştırırken kullanılacak ayarlar dosyası.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdListTestsDescription">
        <source>List the discovered tests instead of running the tests.</source>
        <target state="translated">Testleri çalıştırmak yerine bulunan testleri listeler.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdTestCaseFilterExpression">
        <source>EXPRESSION</source>
        <target state="translated">İFADE</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdTestCaseFilterDescription">
        <source>Run tests that match the given expression.
                                        Examples:
                                        Run tests with priority set to 1: --filter "Priority = 1"
                                        Run a test with the specified full name: --filter "FullyQualifiedName=Namespace.ClassName.MethodName"
                                        Run tests that contain the specified name: --filter "FullyQualifiedName~Namespace.Class"
                                        See https://aka.ms/vstest-filtering for more information on filtering support.
                                        </source>
        <target state="translated">Belirtilen ifadeyle eşleşen testleri çalıştırır.
                                        Örnekler:
                                        Önceliği 1: --filter "Priority = 1" olarak ayarlanmış testleri çalıştırır
                                        Belirtilen tam ada sahip bir test çalıştırır: --filter "TamAd=AdAlanı.SınıfAdı.MetotAdı"
                                        Belirtilen adı içeren testleri çalıştırır: --filter "tamAd~AdAlanı.Sınıf"
                                        Filtreleme desteği hakkında daha fazla bilgi için bkz. https://aka.ms/vstest-filtering.
                                        </target>
        <note />
      </trans-unit>
      <trans-unit id="CmdTestAdapterPathDescription">
        <source>The path to the custom adapters to use for the test run.</source>
        <target state="translated">Test çalıştırması için kullanılacak özel bağdaştırıcıların yolu.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdLoggerOption">
        <source>LOGGER</source>
        <target state="translated">LOGGER</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdLoggerDescription">
        <source>The logger to use for test results.
                                        Examples:
                                        Log in trx format using a unique file name: --logger trx
                                        Log in trx format using the specified file name: --logger "trx;LogFileName=&lt;TestResults.trx&gt;"
                                        See https://aka.ms/vstest-report for more information on logger arguments.</source>
        <target state="translated">Test sonuçları için kullanılacak günlükçü.
                                        Örnekler:
                                        Benzersiz bir dosya adı kullanarak trx biçiminde günlüğe kaydedin: --logger trx
                                        Belirtilen dosya adını kullanarak trx biçiminde günlüğe kaydedin: --logger "trx;LogFileName=&lt;TestResults.trx&gt;"
                                        Günlükçü bağımsız değişkenleri hakkında daha fazla bilgi için bkz. https://aka.ms/vstest-report.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdOutputDir">
        <source>OUTPUT_DIR</source>
        <target state="translated">ÇIKIŞ_DİZİNİ</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdOutputDescription">
        <source>The output directory to place built artifacts in.</source>
        <target state="translated">Derlenen yapıtların yerleştirileceği çıkış dizini.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdPathToLogFile">
        <source>LOG_FILE</source>
        <target state="translated">LOG_FILE</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdPathTologFileDescription">
        <source>Enable verbose logging to the specified file.</source>
        <target state="translated">Belirtilen dosyaya ayrıntılı günlük kaydını etkinleştirir.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdNoBuildDescription">
        <source>Do not build the project before testing. Implies --no-restore.</source>
        <target state="translated">Test etmeden önce projeyi derlemeyin. --no-restore anlamına gelir.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdTestAdapterPath">
        <source>ADAPTER_PATH</source>
        <target state="translated">ADAPTER_PATH</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdResultsDirectoryDescription">
        <source>The directory where the test results will be placed.
The specified directory will be created if it does not exist.</source>
        <target state="translated">Test sonuçlarının yerleştirileceği dizin.
Belirtilen dizin yoksa oluşturulur.</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdPathToResultsDirectory">
        <source>RESULTS_DIR</source>
        <target state="translated">RESULTS_DIR</target>
        <note />
      </trans-unit>
      <trans-unit id="CrashDumpTypeArgumentName">
        <source>DUMP_TYPE</source>
        <target state="new">DUMP_TYPE</target>
        <note />
      </trans-unit>
      <trans-unit id="HangDumpTypeArgumentName">
        <source>DUMP_TYPE</source>
        <target state="new">DUMP_TYPE</target>
        <note />
      </trans-unit>
      <trans-unit id="HangTimeoutArgumentName">
        <source>TIMESPAN</source>
        <target state="new">TIMESPAN</target>
        <note />
      </trans-unit>
      <trans-unit id="IgnoredArgumentsMessage">
        <source>The following arguments have been ignored : "{0}"</source>
        <target state="translated">Şu bağımsız değişkenler yoksayıldı: "{0}"</target>
        <note />
      </trans-unit>
      <trans-unit id="RunSettingsArgumentsDescription">
        <source>

RunSettings arguments:
  Arguments to pass as RunSettings configurations. Arguments are specified as '[name]=[value]' pairs after "-- " (note the space after --). 
  Use a space to separate multiple '[name]=[value]' pairs.
  See https://aka.ms/vstest-runsettings-arguments for more information on RunSettings arguments.
  Example: dotnet test -- MSTest.DeploymentEnabled=false MSTest.MapInconclusiveToFailed=True</source>
        <target state="translated">

RunSettings bağımsız değişkenleri:
  RunSettings yapılandırmaları olarak geçirilecek bağımsız değişkenler. Bağımsız değişkenler "-- " (-- sonrasındaki boşluğa dikkat edin) sonrasında '[ad]=[değer]' çifti olarak belirtilir. 
  Birden fazla '[ad]=[değer]' çiftini ayırmak için boşluk kullanın.
  RunSettings bağımsız değişkenleri hakkında daha fazla bilgi için bkz. https://aka.ms/vstest-runsettings-arguments.
  Örnek: dotnet test -- MSTest.DeploymentEnabled=false MSTest.MapInconclusiveToFailed=True</target>
        <note />
      </trans-unit>
      <trans-unit id="cmdCollectFriendlyName">
        <source>DATA_COLLECTOR_NAME</source>
        <target state="translated">DATA_COLLECTOR_NAME</target>
        <note />
      </trans-unit>
      <trans-unit id="cmdCollectDescription">
        <source>The friendly name of the data collector to use for the test run.
                                        More info here: https://aka.ms/vstest-collect</source>
        <target state="translated">Test çalıştırması için kullanılacak veri toplayıcının kolay adı.
                                        Daha fazla bilgi için bkz.: https://aka.ms/vstest-collect</target>
        <note />
      </trans-unit>
      <trans-unit id="CmdBlameDescription">
        <source>Runs the tests in blame mode. This option is helpful in isolating problematic tests that cause the test host to crash or hang. 
When a crash is detected, it creates an sequence file in TestResults/guid/guid_Sequence.xml that captures the order of tests that were run before the crash.
Based on the additional settings, hang dump or crash dump can also be collected.
Example: 
  Timeout the test run when test takes more than the default timeout of 1 hour, and collect crash dump when the test host exits unexpectedly. 
  (Crash dumps require additional setup, see below.)
  dotnet test --blame-hang --blame-crash
Example: 
  Timeout the test run when a test takes more than 20 minutes and collect hang dump. 
  dotnet test --blame-hang-timeout 20min
</source>
        <target state="needs-review-translation">Testleri blame modunda çalıştırır. Bu seçenek, test konağının kilitlenmesine neden olan sorunlu testi yalıtmak için kullanışlıdır.
Geçerli dizinde testin kilitlenmeden önceki test yürütme sırasını yakalayan ‘Sequence.xml’ adlı dosyayı çıkarır.</target>
        <note />
      </trans-unit>
      <trans-unit id="FrameworkOptionDescription">
        <source>The target framework to run tests for. The target framework must also be specified in the project file.</source>
        <target state="translated">Testlerin çalıştırılacağı hedef çerçeve. Hedef çerçevenin proje dosyasında da belirtilmesi gerekir.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConfigurationOptionDescription">
        <source>The configuration to use for running tests. The default for most projects is 'Debug'.</source>
        <target state="translated">Testleri çalıştırmak için kullanılacak yapılandırma. Çoğu proje için varsayılan, ‘Hata Ayıklama’ seçeneğidir.</target>
        <note />
      </trans-unit>
      <trans-unit id="RuntimeOptionDescription">
        <source>The target runtime to test for.</source>
        <target state="translated">Test için hedef çalışma zamanı.</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>