<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="cs" original="../LocalizableStrings.resx">
    <body>
      <trans-unit id="CommandDescription">
        <source>Searches one or more package sources for packages that match a search term. If no sources are specified, all sources defined in the NuGet.Config are used.</source>
        <target state="new">Searches one or more package sources for packages that match a search term. If no sources are specified, all sources defined in the NuGet.Config are used.</target>
        <note />
      </trans-unit>
      <trans-unit id="ExactMatchDescription">
        <source>Require that the search term exactly match the name of the package. Causes `--take` and `--skip` options to be ignored.</source>
        <target state="new">Require that the search term exactly match the name of the package. Causes `--take` and `--skip` options to be ignored.</target>
        <note />
      </trans-unit>
      <trans-unit id="InteractiveDescription">
        <source>Stop and wait for user input or action (for example to complete authentication).</source>
        <target state="new">Stop and wait for user input or action (for example to complete authentication).</target>
        <note />
      </trans-unit>
      <trans-unit id="PrereleaseDescription">
        <source>Include prerelease packages.</source>
        <target state="new">Include prerelease packages.</target>
        <note />
      </trans-unit>
      <trans-unit id="SearchTermArgumentName">
        <source>SearchTerm</source>
        <target state="new">SearchTerm</target>
        <note />
      </trans-unit>
      <trans-unit id="SearchTermDescription">
        <source>Search term to filter package names, descriptions, and tags. Used as a literal value. Example: `dotnet package search some.package`. See also `--exact-match`.</source>
        <target state="new">Search term to filter package names, descriptions, and tags. Used as a literal value. Example: `dotnet package search some.package`. See also `--exact-match`.</target>
        <note />
      </trans-unit>
      <trans-unit id="SkipArgumentName">
        <source>Skip</source>
        <target state="new">Skip</target>
        <note />
      </trans-unit>
      <trans-unit id="SkipDescription">
        <source>Number of results to skip, to allow pagination. Default 0.</source>
        <target state="new">Number of results to skip, to allow pagination. Default 0.</target>
        <note />
      </trans-unit>
      <trans-unit id="SourceArgumentName">
        <source>Source</source>
        <target state="new">Source</target>
        <note />
      </trans-unit>
      <trans-unit id="SourceDescription">
        <source>The package source to search. You can pass multiple `--source` options to search multiple package sources. Example: `--source https://api.nuget.org/v3/index.json`.</source>
        <target state="new">The package source to search. You can pass multiple `--source` options to search multiple package sources. Example: `--source https://api.nuget.org/v3/index.json`.</target>
        <note />
      </trans-unit>
      <trans-unit id="TakeArgumentName">
        <source>Take</source>
        <target state="new">Take</target>
        <note />
      </trans-unit>
      <trans-unit id="TakeDescription">
        <source>Number of results to return. Default 20.</source>
        <target state="new">Number of results to return. Default 20.</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>