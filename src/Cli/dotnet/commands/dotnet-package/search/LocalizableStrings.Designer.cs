//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.DotNet.Tools.Package.Search {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LocalizableStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LocalizableStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.DotNet.Tools.Package.Search.LocalizableStrings", typeof(LocalizableStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Searches a given source using the query string provided. If no sources are specified, all sources defined in NuGet.config are used..
        /// </summary>
        internal static string CommandDescription {
            get {
                return ResourceManager.GetString("CommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Return exact matches only as a search result..
        /// </summary>
        internal static string ExactMatchDescription {
            get {
                return ResourceManager.GetString("ExactMatchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the command to stop and wait for user input or action (for example to complete authentication)..
        /// </summary>
        internal static string InteractiveDescription {
            get {
                return ResourceManager.GetString("InteractiveDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow prelease packages to be shown..
        /// </summary>
        internal static string PrereleaseDescription {
            get {
                return ResourceManager.GetString("PrereleaseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SearchTerm.
        /// </summary>
        internal static string SearchTermArgumentName {
            get {
                return ResourceManager.GetString("SearchTermArgumentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the search term to filter results. Use this argument to search for packages matching the provided query. Example: dotnet package search json..
        /// </summary>
        internal static string SearchTermDescription {
            get {
                return ResourceManager.GetString("SearchTermDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip.
        /// </summary>
        internal static string SkipArgumentName {
            get {
                return ResourceManager.GetString("SkipArgumentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of results to skip, for pagination. The default is 0..
        /// </summary>
        internal static string SkipDescription {
            get {
                return ResourceManager.GetString("SkipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source.
        /// </summary>
        internal static string SourceArgumentName {
            get {
                return ResourceManager.GetString("SourceArgumentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package source to search. You can pass multiple --source options to search multiple package sources..
        /// </summary>
        internal static string SourceDescription {
            get {
                return ResourceManager.GetString("SourceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Take.
        /// </summary>
        internal static string TakeArgumentName {
            get {
                return ResourceManager.GetString("TakeArgumentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of results to return. The default value is 20..
        /// </summary>
        internal static string TakeDescription {
            get {
                return ResourceManager.GetString("TakeDescription", resourceCulture);
            }
        }
    }
}
