<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Aborted" xml:space="preserve">
    <value>Aborted</value>
  </data>
  <data name="ActiveTestsRunning_FullTestsCount" xml:space="preserve">
    <value>{0} tests running</value>
  </data>
  <data name="ActiveTestsRunning_MoreTestsCount" xml:space="preserve">
    <value>and {0} more</value>
  </data>
  <data name="Actual" xml:space="preserve">
    <value>Actual</value>
  </data>
  <data name="AddAppFullName" xml:space="preserve">
    <value>Add one or more projects to a solution file.</value>
  </data>
  <data name="AdditionalDeps" xml:space="preserve">
    <value>Path to additional deps.json file.</value>
  </data>
  <data name="AdditionalProbingPathDefinition" xml:space="preserve">
    <value>Path containing probing policy and assemblies to probe for.</value>
  </data>
  <data name="AdditionalTools" xml:space="preserve">
    <value>Additional commands from bundled tools:</value>
  </data>
  <data name="AddProjectPathArgumentDescription" xml:space="preserve">
    <value>The paths to the projects to add to the solution.</value>
  </data>
  <data name="AddProjectPathArgumentName" xml:space="preserve">
    <value>PROJECT_PATH</value>
  </data>
  <data name="AddProjectSolutionFolderArgumentDescription" xml:space="preserve">
    <value>The destination solution folder path to add the projects to.</value>
  </data>
  <data name="AdManifestOnlyOptionDescription" xml:space="preserve">
    <value>Only update advertising manifests.</value>
  </data>
  <data name="AdManifestPackageDoesNotExist" xml:space="preserve">
    <value>Advertising manifest not updated. Manifest package for {0} doesn't exist.</value>
  </data>
  <data name="AdManifestUpdated" xml:space="preserve">
    <value>Updated advertising manifest {0}.</value>
  </data>
  <data name="AllowPackageDowngradeOptionDescription" xml:space="preserve">
    <value>Allow package downgrade when installing a .NET tool package.</value>
  </data>
  <data name="Authors" xml:space="preserve">
    <value>Authors</value>
    <comment>Table lable</comment>
  </data>
  <data name="BuildAppFullName" xml:space="preserve">
    <value>.NET Builder</value>
  </data>
  <data name="BuildCmdNoLogo" xml:space="preserve">
    <value>Do not display the startup banner or the copyright message.</value>
  </data>
  <data name="BuildConfigurationOptionDescription" xml:space="preserve">
    <value>The configuration to use for building the project. The default for most projects is 'Debug'.</value>
  </data>
  <data name="BuildDefinition" xml:space="preserve">
    <value>Build a .NET project.</value>
  </data>
  <data name="BuildFrameworkOptionDescription" xml:space="preserve">
    <value>The target framework to build for. The target framework must also be specified in the project file.</value>
  </data>
  <data name="BuildOutputOptionDescription" xml:space="preserve">
    <value>The output directory to place built artifacts in.</value>
  </data>
  <data name="BuildRuntimeOptionDescription" xml:space="preserve">
    <value>The target runtime to build for.</value>
  </data>
  <data name="BuildServerCommandDescription" xml:space="preserve">
    <value>Interact with servers started from a build.</value>
  </data>
  <data name="BuildServerDefinition" xml:space="preserve">
    <value>Interact with servers started by a build.</value>
  </data>
  <data name="BuildServerShutdownCommandDescription" xml:space="preserve">
    <value>Shuts down build servers that are started from dotnet. By default, all servers are shut down.</value>
  </data>
  <data name="BundleUpToDateMessage" xml:space="preserve">
    <value>Up to date.</value>
  </data>
  <data name="CacheMissingPackage" xml:space="preserve">
    <value>Package {0} version {1} doesn't exist in offline cache {2}.</value>
  </data>
  <data name="CancelledLowercase" xml:space="preserve">
    <value>canceled</value>
  </data>
  <data name="CancellingTestSession" xml:space="preserve">
    <value>Canceling the test session...</value>
  </data>
  <data name="CannotAnalyzeVSWorkloadBand" xml:space="preserve">
    <value>Workloads managed by Visual Studio must be uninstalled using the Visual Studio Installer. For the version of Visual Studio managing the SDK '{0}', we could not display workloads to uninstall. This is likely because '{0}' uses a different dotnet root path or custom user profile directory from the current running SDK.
Paths searched: '{1}', '{2}'.</value>
  </data>
  <data name="CannotCombineOptions" xml:space="preserve">
    <value>Cannot use the {0} and {1} options together.</value>
  </data>
  <data name="CannotCombineSearchStringAndVersion" xml:space="preserve">
    <value>Cannot specify both the {0} and {1} arguments.</value>
  </data>
  <data name="CannotCombineSkipManifestAndRollback" xml:space="preserve">
    <value>Cannot use the {0} and {1} options together. If installing from a rollback file, remove {0}. Otherwise, remove {1}</value>
  </data>
  <data name="CannotCombineSkipManifestAndVersion" xml:space="preserve">
    <value>Cannot use the {0} and {1} options together.  Remove one of the options.</value>
  </data>
  <data name="CannotFindCommandName" xml:space="preserve">
    <value>Cannot find a tool in the manifest file that has a command named '{0}'.</value>
  </data>
  <data name="CannotMigrateSlnx" xml:space="preserve">
    <value>Only .sln files can be migrated to .slnx format.</value>
  </data>
  <data name="CannotSpecifyVersionAndWorkloadIdsByComponent" xml:space="preserve">
    <value>Cannot specify a workload version using the --version option while also specifying versions to install using workload@version syntax.</value>
    <comment>{Locked="--version"}</comment>
  </data>
  <data name="CannotSpecifyVersionOnCommandLineAndInGlobalJson" xml:space="preserve">
    <value>Cannot specify a particular workload version on the command line via --version or --from-history when there is already a version specified in global.json file {0}. To update the globally installed workload version, run the command outside of the path containing that global.json file or update the version specified in the global.json file and run "dotnet workload update."</value>
  </data>
  <data name="CannotUseSkipManifestWithGlobalJsonWorkloadVersion" xml:space="preserve">
    <value>Cannot use the {0} option when workload version is specified in global.json.  Remove the {0} option, or remove the 'workloadVersion' element from {1}.</value>
    <comment>{Locked="workloadVersion"} Locked={"global.json"}</comment>
  </data>
  <data name="CapabilityExpressionEvaluator_Exception_InvalidExpression" xml:space="preserve">
    <value>Invalid expression, position: {0}.</value>
  </data>
  <data name="CheckForUpdatedWorkloadManifests" xml:space="preserve">
    <value>Checking for updated workload version.</value>
  </data>
  <data name="CleanAllOptionDescription" xml:space="preserve">
    <value>Causes clean to remove and uninstall all workload components from all SDK versions.</value>
  </data>
  <data name="CleanAppFullName" xml:space="preserve">
    <value>.NET Clean Command</value>
  </data>
  <data name="CleanCmdNoLogo" xml:space="preserve">
    <value>Do not display the startup banner or the copyright message.</value>
  </data>
  <data name="CleanCmdOutputDir" xml:space="preserve">
    <value>OUTPUT_DIR</value>
  </data>
  <data name="CleanCmdOutputDirDescription" xml:space="preserve">
    <value>The directory containing the build artifacts to clean.</value>
  </data>
  <data name="CleanConfigurationOptionDescription" xml:space="preserve">
    <value>The configuration to clean for. The default for most projects is 'Debug'.</value>
  </data>
  <data name="CleanDefinition" xml:space="preserve">
    <value>Clean build outputs of a .NET project.</value>
  </data>
  <data name="CleanFrameworkOptionDescription" xml:space="preserve">
    <value>The target framework to clean for. The target framework must also be specified in the project file.</value>
  </data>
  <data name="CleanRuntimeOptionDescription" xml:space="preserve">
    <value>The target runtime to clean for.</value>
  </data>
  <data name="CmdBlameCrashCollectAlwaysDescription" xml:space="preserve">
    <value>Enables collecting crash dump on expected as well as unexpected testhost exit.</value>
  </data>
  <data name="CmdBlameCrashDescription" xml:space="preserve">
    <value>Runs the tests in blame mode and collects a crash dump when the test host exits unexpectedly. This option depends on the version of .NET used, the type of error, and the operating system.

For exceptions in managed code, a dump will be automatically collected on .NET 5.0 and later versions. It will generate a dump for testhost or any child process that also ran on .NET 5.0 and crashed. Crashes in native code will not generate a dump. This option works on Windows, macOS, and Linux.

Crash dumps in native code, or when targetting .NET Framework, or .NET Core 3.1 and earlier versions, can only be collected on Windows, by using Procdump. A directory that contains procdump.exe and procdump64.exe must be in the PATH or PROCDUMP_PATH environment variable.

The tools can be downloaded here: https://docs.microsoft.com/sysinternals/downloads/procdump

To collect a crash dump from a native application running on .NET 5.0 or later, the usage of Procdump can be forced by setting the VSTEST_DUMP_FORCEPROCDUMP environment variable to 1.

Implies --blame.</value>
  </data>
  <data name="CmdBlameCrashDumpTypeDescription" xml:space="preserve">
    <value>The type of crash dump to be collected. Supported values are full (default) and mini. Implies --blame-crash.</value>
  </data>
  <data name="CmdBlameDescription" xml:space="preserve">
    <value>Runs the tests in blame mode. This option is helpful in isolating problematic tests that cause the test host to crash or hang, but it does not create a memory dump by default.

When a crash is detected, it creates an sequence file in TestResults/guid/guid_Sequence.xml that captures the order of tests that were run before the crash.

Based on the additional settings, hang dump or crash dump can also be collected.

Example:
  Timeout the test run when test takes more than the default timeout of 1 hour, and collect crash dump when the test host exits unexpectedly.
  (Crash dumps require additional setup, see below.)
  dotnet test --blame-hang --blame-crash
Example:
  Timeout the test run when a test takes more than 20 minutes and collect hang dump.
  dotnet test --blame-hang-timeout 20min
</value>
  </data>
  <data name="CmdBlameHangDescription" xml:space="preserve">
    <value>Run the tests in blame mode and enables collecting hang dump when test exceeds the given timeout.</value>
  </data>
  <data name="CmdBlameHangDumpTypeDescription" xml:space="preserve">
    <value>The type of crash dump to be collected. The supported values are full (default), mini, and none. When 'none' is used then test host is terminated on timeout, but no dump is collected. Implies --blame-hang.</value>
  </data>
  <data name="CmdBlameHangTimeoutDescription" xml:space="preserve">
    <value>Per-test timeout, after which hang dump is triggered and the testhost process is terminated. Default is 1h.
The timeout value is specified in the following format: 1.5h / 90m / 5400s / 5400000ms. When no unit is used (e.g. 5400000), the value is assumed to be in milliseconds.
When used together with data driven tests, the timeout behavior depends on the test adapter used. For xUnit, NUnit and MSTest 2.2.4+ the timeout is renewed after every test case,
For MSTest before 2.2.4, the timeout is used for all testcases.</value>
  </data>
  <data name="cmdCollectDescription" xml:space="preserve">
    <value>The friendly name of the data collector to use for the test run.
                                        More info here: https://aka.ms/vstest-collect</value>
  </data>
  <data name="cmdCollectFriendlyName" xml:space="preserve">
    <value>DATA_COLLECTOR_NAME</value>
  </data>
  <data name="CmdConfig" xml:space="preserve">
    <value>CONFIG_FILE</value>
  </data>
  <data name="CmdConfigDescription" xml:space="preserve">
    <value>The path to the NuGet config file to use. Requires the '--outdated', '--deprecated' or '--vulnerable' option.</value>
  </data>
  <data name="CmdConfigFileOption" xml:space="preserve">
    <value>FILE</value>
  </data>
  <data name="CmdConfigFileOptionDescription" xml:space="preserve">
    <value>The NuGet configuration file to use.</value>
  </data>
  <data name="CmdCurrentRuntimeOptionDescription" xml:space="preserve">
    <value>Use current runtime as the target runtime.</value>
  </data>
  <data name="CmdDeprecatedDescription" xml:space="preserve">
    <value>Lists packages that have been deprecated. Cannot be combined with '--vulnerable' or '--outdated' options.</value>
  </data>
  <data name="CmdDGFileException" xml:space="preserve">
    <value>Unable to create dependency graph file for project '{0}'. Cannot add package reference.</value>
  </data>
  <data name="CmdDGFileIOException" xml:space="preserve">
    <value>Unable to generate a temporary file for project '{0}'. Cannot add package reference. Clear the temp directory and try again.</value>
  </data>
  <data name="CmdDirectoryDescription" xml:space="preserve">
    <value>Defines the path of directory to run. If not specified, it defaults to the current directory.</value>
  </data>
  <data name="CmdDirectoryPathName" xml:space="preserve">
    <value>DIRECTORY_PATH</value>
  </data>
  <data name="CmdDisableParallelOptionDescription" xml:space="preserve">
    <value>Prevent restoring multiple projects in parallel.</value>
  </data>
  <data name="CmdExpressionName" xml:space="preserve">
    <value>EXPRESSION</value>
  </data>
  <data name="CmdFileDescription" xml:space="preserve">
    <value>Path to the file-based program.</value>
  </data>
  <data name="CmdOptionForceDescription" xml:space="preserve">
    <value>Force conversion even if there are malformed directives.</value>
  </data>
  <data name="CmdForceRestoreOptionDescription" xml:space="preserve">
    <value>Force all dependencies to be resolved even if the last restore was successful.
This is equivalent to deleting project.assets.json.</value>
  </data>
  <data name="CmdFormatDescription" xml:space="preserve">
    <value>Specifies the output format type for the list packages command.</value>
  </data>
  <data name="CmdHelpUsageTitle" xml:space="preserve">
    <value>Usage:</value>
  </data>
  <data name="CmdHighestMinorDescription" xml:space="preserve">
    <value>Consider only the packages with a matching major version number when searching for newer packages. Requires the '--outdated' option.</value>
  </data>
  <data name="CmdHighestPatchDescription" xml:space="preserve">
    <value>Consider only the packages with a matching major and minor version numbers when searching for newer packages. Requires the '--outdated' option.</value>
  </data>
  <data name="CmdIgnoreFailedSourcesOptionDescription" xml:space="preserve">
    <value>Treat package source failures as warnings.</value>
  </data>
  <data name="CmdIncludeSourceDescription" xml:space="preserve">
    <value>Include PDBs and source files. Source files go into the 'src' folder in the resulting nuget package.</value>
  </data>
  <data name="CmdIncludeSymbolsDescription" xml:space="preserve">
    <value>Include packages with symbols in addition to regular packages in output directory.</value>
  </data>
  <data name="CmdInvalidProjectFileExtensionErrorDescription" xml:space="preserve">
    <value>The provided project file has an invalid extension: {0}.</value>
  </data>
  <data name="CmdInvalidSolutionFileExtensionErrorDescription" xml:space="preserve">
    <value>The provided solution file has an invalid extension: {0}.</value>
  </data>
  <data name="CmdListTestsDescription" xml:space="preserve">
    <value>List the discovered tests instead of running the tests.</value>
  </data>
  <data name="CmdLockedModeOptionDescription" xml:space="preserve">
    <value>Don't allow updating project lock file.</value>
  </data>
  <data name="CmdLockFilePathOption" xml:space="preserve">
    <value>LOCK_FILE_PATH</value>
  </data>
  <data name="CmdLockFilePathOptionDescription" xml:space="preserve">
    <value>Output location where project lock file is written. By default, this is 'PROJECT_ROOT\packages.lock.json'.</value>
  </data>
  <data name="CmdLoggerDescription" xml:space="preserve">
    <value>The logger to use for test results.
                                        Examples:
                                        Log in trx format using a unique file name: --logger trx
                                        Log in trx format using the specified file name: --logger "trx;LogFileName=&lt;TestResults.trx&gt;"
                                        See https://aka.ms/vstest-report for more information on logger arguments.</value>
  </data>
  <data name="CmdLoggerOption" xml:space="preserve">
    <value>LOGGER</value>
  </data>
  <data name="CmdMaxParallelTestModulesDescription" xml:space="preserve">
    <value>The max number of test modules that can run in parallel.</value>
  </data>
  <data name="CmdMSBuildProjectsPropertiesErrorDescription" xml:space="preserve">
    <value>Get projects properties with MSBuild didn't execute properly with exit code: {0}.</value>
  </data>
  <data name="CmdMultipleBuildPathOptionsErrorDescription" xml:space="preserve">
    <value>Specify either the project, solution, directory, or test modules option.</value>
  </data>
  <data name="CmdMultipleProjectOrSolutionFilesErrorDescription" xml:space="preserve">
    <value>Specify which project or solution file to use because this folder contains more than one project or solution file.</value>
  </data>
  <data name="CmdNoAnsiDescription" xml:space="preserve">
    <value>Disable ANSI output.</value>
  </data>
  <data name="CmdNoBuildDescription" xml:space="preserve">
    <value>Do not build the project before testing. Implies --no-restore.</value>
  </data>
  <data name="CmdNoBuildOptionDescription" xml:space="preserve">
    <value>Do not build the project before packing. Implies --no-restore.</value>
  </data>
  <data name="CmdNoCacheOptionDescription" xml:space="preserve">
    <value>Do not cache packages and http requests.</value>
  </data>
  <data name="CmdNoDependenciesOptionDescription" xml:space="preserve">
    <value>Do not restore project-to-project references and only restore the specified project.</value>
  </data>
  <data name="CmdNoHttpCacheOptionDescription" xml:space="preserve">
    <value>Disable Http Caching for packages.</value>
  </data>
  <data name="CmdNonExistentDirectoryErrorDescription" xml:space="preserve">
    <value>The provided directory path does not exist: {0}.</value>
  </data>
  <data name="CmdNonExistentFileErrorDescription" xml:space="preserve">
    <value>The provided file path does not exist: {0}.</value>
  </data>
  <data name="CmdNonExistentRootDirectoryErrorDescription" xml:space="preserve">
    <value>The provided root directory does not exist: {0}.</value>
  </data>
  <data name="CmdNoProgressDescription" xml:space="preserve">
    <value>Disable progress reporting.</value>
  </data>
  <data name="CmdNoProjectOrSolutionFileErrorDescription" xml:space="preserve">
    <value>Specify a project or solution file. The current working directory does not contain a project or solution file.</value>
  </data>
  <data name="CmdNoTestModulesErrorDescription" xml:space="preserve">
    <value>No test modules found for the given test module pattern: {0} with root directory: {1}</value>
  </data>
  <data name="CmdNumberName" xml:space="preserve">
    <value>NUMBER</value>
  </data>
  <data name="CmdOptionCannotBeUsedWithTestModulesDescription" xml:space="preserve">
    <value>The options architecture, configuration, framework, operating system, and runtime cannot be used with '--test-modules' option.</value>
  </data>
  <data name="CmdOutdatedDescription" xml:space="preserve">
    <value>Lists packages that have newer versions. Cannot be combined with '--deprecated' or '--vulnerable' options.</value>
  </data>
  <data name="CmdOutputDescription" xml:space="preserve">
    <value>The output directory to place built artifacts in.</value>
  </data>
  <data name="CmdOutputVersionDescription" xml:space="preserve">
    <value>Specifies the version of machine-readable output. Requires the '--format json' option.</value>
  </data>
  <data name="Error_restore" xml:space="preserve">
    <value>Restore failed. Run `dotnet restore` for more details on the issue.</value>
    <comment>{Locked="dotnet restore"}</comment>
  </data>
  <data name="CmdNoRestoreDescription" xml:space="preserve">
    <value>Do not restore before running the command.</value>
  </data>
  <data name="CmdPackage" xml:space="preserve">
    <value>PACKAGE_NAME</value>
  </data>
  <data name="CmdPackageDescription" xml:space="preserve">
    <value>The package reference to add. This can be in the form of just the package identifier, for example 'Newtonsoft.Json', or a package identifier and version separated by '@', for example 'Newtonsoft.Json@13.0.3'</value>
  </data>
  <data name="CmdPackageDirectory" xml:space="preserve">
    <value>PACKAGE_DIR</value>
  </data>
  <data name="CmdPackageDirectoryDescription" xml:space="preserve">
    <value>The directory to restore packages to.</value>
  </data>
  <data name="CmdPackagesOption" xml:space="preserve">
    <value>PACKAGES_DIR</value>
  </data>
  <data name="CmdPackagesOptionDescription" xml:space="preserve">
    <value>The directory to restore packages to.</value>
  </data>
  <data name="CmdPathToLogFile" xml:space="preserve">
    <value>LOG_FILE</value>
  </data>
  <data name="CmdPathTologFileDescription" xml:space="preserve">
    <value>Enable verbose logging to the specified file.</value>
  </data>
  <data name="CmdPathToResultsDirectory" xml:space="preserve">
    <value>RESULTS_DIR</value>
  </data>
  <data name="CmdPrereleaseDescription" xml:space="preserve">
    <value>Consider packages with prerelease versions when searching for newer packages. Requires the '--outdated' option.</value>
  </data>
  <data name="CmdProjectDescription" xml:space="preserve">
    <value>Defines the path of the project file to run (folder name or full path). If not specified, it defaults to the current directory.</value>
  </data>
  <data name="CmdProjectPathName" xml:space="preserve">
    <value>PROJECT_PATH</value>
  </data>
  <data name="CmdReevaluateOptionDescription" xml:space="preserve">
    <value>Forces restore to reevaluate all dependencies even if a lock file already exists.</value>
  </data>
  <data name="CmdResultsDirectoryDescription" xml:space="preserve">
    <value>The directory where the test results will be placed.
The specified directory will be created if it does not exist.</value>
  </data>
  <data name="CmdRootPathName" xml:space="preserve">
    <value>ROOT_PATH</value>
  </data>
  <data name="CmdRuntimeOption" xml:space="preserve">
    <value>RUNTIME_IDENTIFIER</value>
  </data>
  <data name="CmdRuntimeOptionDescription" xml:space="preserve">
    <value>The target runtime to restore packages for.</value>
  </data>
  <data name="CmdServiceableDescription" xml:space="preserve">
    <value>Set the serviceable flag in the package. See https://aka.ms/nupkgservicing for more information.</value>
  </data>
  <data name="CmdSettingsDescription" xml:space="preserve">
    <value>The settings file to use when running tests.</value>
  </data>
  <data name="CmdSettingsFile" xml:space="preserve">
    <value>SETTINGS_FILE</value>
  </data>
  <data name="CmdSolutionDescription" xml:space="preserve">
    <value>Defines the path of the solution file to run. If not specified, it defaults to the current directory.</value>
  </data>
  <data name="CmdSolutionPathName" xml:space="preserve">
    <value>SOLUTION_PATH</value>
  </data>
  <data name="CmdSourceOption" xml:space="preserve">
    <value>SOURCE</value>
  </data>
  <data name="CmdSourceOptionDescription" xml:space="preserve">
    <value>The NuGet package source to use for the restore.</value>
  </data>
  <data name="CmdTestAdapterPath" xml:space="preserve">
    <value>ADAPTER_PATH</value>
  </data>
  <data name="CmdTestAdapterPathDescription" xml:space="preserve">
    <value>The path to the custom adapters to use for the test run.</value>
  </data>
  <data name="CmdTestCaseFilterDescription" xml:space="preserve">
    <value>Run tests that match the given expression.
                                        Examples:
                                        Run tests with priority set to 1: --filter "Priority = 1"
                                        Run a test with the specified full name: --filter "FullyQualifiedName=Namespace.ClassName.MethodName"
                                        Run tests that contain the specified name: --filter "FullyQualifiedName~Namespace.Class"
                                        See https://aka.ms/vstest-filtering for more information on filtering support.
                                        </value>
  </data>
  <data name="CmdTestCaseFilterExpression" xml:space="preserve">
    <value>EXPRESSION</value>
  </data>
  <data name="CmdTestModulesDescription" xml:space="preserve">
    <value>Run tests for the specified test modules.</value>
  </data>
  <data name="CmdTestModulesRootDirectoryDescription" xml:space="preserve">
    <value>The test modules have the specified root directory.</value>
  </data>
  <data name="CmdTestOutputDescription" xml:space="preserve">
    <value>Verbosity of test output.</value>
  </data>
  <data name="CmdTransitiveDescription" xml:space="preserve">
    <value>Lists transitive and top-level packages.</value>
  </data>
  <data name="CmdUnsupportedMessageRequestTypeException" xml:space="preserve">
    <value>Message Request type '{0}' is unsupported.</value>
    <comment>{0} - message request type</comment>
  </data>
  <data name="CmdUnsupportedTestRunnerDescription" xml:space="preserve">
    <value>Test runner '{0}' is not supported.</value>
  </data>
  <data name="CmdUnsupportedVSTestTestApplicationsDescription" xml:space="preserve">
    <value>dotnet.config defines test runner to be Microsoft.Testing.Platform. All projects must use that test runner.
The following test projects are using VSTest test runner:
{0}

See https://aka.ms/dotnet-test/mtp for more information.</value>
    <comment>{0} is one or more project names.
Microsoft.Testing.Platform is a name, don't translate.
dotnet.config is a name don't translate.</comment>
  </data>
  <data name="CmdUseLockFileOptionDescription" xml:space="preserve">
    <value>Enables project lock file to be generated and used with restore.</value>
  </data>
  <data name="CmdVersion" xml:space="preserve">
    <value>VERSION</value>
  </data>
  <data name="CmdVersionDescription" xml:space="preserve">
    <value>The version of the package to add.</value>
  </data>
  <data name="CmdVulnerableDescription" xml:space="preserve">
    <value>Lists packages that have known vulnerabilities. Cannot be combined with '--deprecated' or '--outdated' options.</value>
  </data>
  <data name="Command" xml:space="preserve">
    <value>Command</value>
  </data>
  <data name="CommandArgumentDescription" xml:space="preserve">
    <value>The SDK command to launch online help for.</value>
  </data>
  <data name="CommandArgumentName" xml:space="preserve">
    <value>COMMAND_NAME</value>
  </data>
  <data name="CommandDoesNotExist" xml:space="preserve">
    <value>Specified command '{0}' is not a valid SDK command. Specify a valid SDK command. For more information, run dotnet help.</value>
  </data>
  <data name="CommandFooter" xml:space="preserve">
    <value>The latest versions of .NET can be installed from https://aka.ms/dotnet-core-download. For more information about .NET lifecycles, see https://aka.ms/dotnet-core-support.</value>
  </data>
  <data name="CommandNameArgumentDescription" xml:space="preserve">
    <value>The command name of the tool to run.</value>
  </data>
  <data name="CommandNameArgumentName" xml:space="preserve">
    <value>COMMAND_NAME</value>
  </data>
  <data name="CommandOptionLaunchProfileDescription" xml:space="preserve">
    <value>The name of the launch profile (if any) to use when launching the application.</value>
  </data>
  <data name="CommandOptionNoBuildDescription" xml:space="preserve">
    <value>Do not build the project before running. Implies --no-restore.</value>
    <comment>{Locked="--no-restore"}</comment>
  </data>
  <data name="CommandOptionNoCacheDescription" xml:space="preserve">
    <value>Skip up to date checks and always build the program before running.</value>
  </data>
  <data name="CommandOptionNoLaunchProfileArgumentsDescription" xml:space="preserve">
    <value>Do not use arguments specified in launch profile to run the application.</value>
  </data>
  <data name="CommandOptionNoLaunchProfileDescription" xml:space="preserve">
    <value>Do not attempt to use launchSettings.json to configure the application.</value>
  </data>
  <data name="CommandOptionProjectDescription" xml:space="preserve">
    <value>The path to the project file to run (defaults to the current directory if there is only one project).</value>
  </data>
  <data name="Commands" xml:space="preserve">
    <value>SDK commands</value>
  </data>
  <data name="CommandsMismatch" xml:space="preserve">
    <value>The command {0} specified in the tool manifest file is not contained in the package with Package Id {1}. The commands contained in the package are {2}.</value>
  </data>
  <data name="ConfigFileArgumentName" xml:space="preserve">
    <value>ConfigFile</value>
  </data>
  <data name="ConfigFileDescription" xml:space="preserve">
    <value>The NuGet configuration file. If specified, only the settings from this file will be used. If not specified, the hierarchy of configuration files from the current directory will be used. For more information, see https://docs.microsoft.com/nuget/consume-packages/configuring-nuget-behavior</value>
  </data>
  <data name="ConsoleIsAlreadyInBatchingMode" xml:space="preserve">
    <value>Console is already in batching mode.</value>
    <comment>Exception that is thrown when console is already collecting input into a batch (into a string builder), and code asks to enable batching mode again.</comment>
  </data>
  <data name="CouldNotConvertToBoolean" xml:space="preserve">
    <value>Could not convert the value of property '{0}' to a boolean.</value>
  </data>
  <data name="CouldNotConvertToString" xml:space="preserve">
    <value>Could not convert the value of property '{0}' to a string.</value>
  </data>
  <data name="CouldNotFindAProject" xml:space="preserve">
    <value>Couldn't find a project. Ensure that a project exists in {0}, or pass the path to the project using {1}.</value>
  </data>
  <data name="CrashDumpTypeArgumentName" xml:space="preserve">
    <value>DUMP_TYPE</value>
  </data>
  <data name="CreateManifestIfNeededOptionDescription" xml:space="preserve">
    <value>Create a tool manifest if one isn't found during tool installation. For information on how manifests are located, see https://aka.ms/dotnet/tools/create-manifest-if-needed</value>
  </data>
  <data name="CurrentRuntimeOptionDescription" xml:space="preserve">
    <value>Use current runtime as the target runtime.</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DefaultLaunchProfileDisplayName" xml:space="preserve">
    <value>(Default)</value>
  </data>
  <data name="DeletingWorkloadManifest" xml:space="preserve">
    <value>Uninstalling workload manifest {0} version {1}...</value>
  </data>
  <data name="DeletingWorkloadPack" xml:space="preserve">
    <value>Uninstalling workload pack {0} version {1}...</value>
  </data>
  <data name="DeletingWorkloadSet" xml:space="preserve">
    <value>Deleting workload version {0}.</value>
  </data>
  <data name="DepsFileDefinition" xml:space="preserve">
    <value>Path to &lt;application&gt;.deps.json file.</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
    <comment>Table lable</comment>
  </data>
  <data name="DescriptionColumnName" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DeserializationExceptionMessage" xml:space="preserve">
    <value>An error was encountered when reading launchSettings.json.
{0}</value>
  </data>
  <data name="DetailDescription" xml:space="preserve">
    <value>Show detail result of the query.</value>
  </data>
  <data name="DevCertsDefinition" xml:space="preserve">
    <value>Create and manage development certificates.</value>
  </data>
  <data name="Diagnostics_OptionDescription" xml:space="preserve">
    <value>Enables diagnostic output.</value>
  </data>
  <data name="DirectoryAlreadyExists" xml:space="preserve">
    <value>The target directory already exists: '{0}'</value>
  </data>
  <data name="DisableProjectContextEval_OptionDescription" xml:space="preserve">
    <value>Disables evaluating project context using MSBuild.</value>
  </data>
  <data name="DisableSdkTemplates_OptionDescription" xml:space="preserve">
    <value>If present, prevents templates bundled in the SDK from being presented.</value>
  </data>
  <data name="DiscoveredTestsInAssembly" xml:space="preserve">
    <value>Discovered {0} tests in assembly</value>
    <comment>0 is count, the sentence is followed by the path of the assebly</comment>
  </data>
  <data name="DiscoveringTestsFrom" xml:space="preserve">
    <value>Discovering tests from</value>
  </data>
  <data name="DotnetTestCommand" xml:space="preserve">
    <value>.NET Test Command</value>
  </data>
  <data name="DownloadingPackToCacheMessage" xml:space="preserve">
    <value>Downloading pack {0} version {1} to offline cache {2}...</value>
  </data>
  <data name="Downloads" xml:space="preserve">
    <value>Downloads</value>
    <comment>Table lable</comment>
  </data>
  <data name="DownloadToCacheOptionArgumentName" xml:space="preserve">
    <value>DIRECTORY</value>
  </data>
  <data name="DownloadToCacheOptionDescription" xml:space="preserve">
    <value>Download packages needed to install a workload to a folder that can be used for offline installation.</value>
  </data>
  <data name="DuplicateCaseInsensitiveLaunchProfileNames" xml:space="preserve">
    <value>There are several launch profiles with case-sensitive names, which isn't permitted:
{0}
Make the profile names distinct.</value>
  </data>
  <data name="ExactMatchDescription" xml:space="preserve">
    <value>Require that the search term exactly match the name of the package. Causes `--take` and `--skip` options to be ignored.</value>
  </data>
  <data name="ExecutionUsageDescription" xml:space="preserve">
    <value>Execute a .NET application.</value>
  </data>
  <data name="ExitCode" xml:space="preserve">
    <value>Exit code</value>
  </data>
  <data name="Expected" xml:space="preserve">
    <value>Expected</value>
  </data>
  <data name="ExpectedSingleManifest" xml:space="preserve">
    <value>Expected single manifest feature band and manifest folder in MSI from package {0}</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>Failed</value>
  </data>
  <data name="FailedAdManifestUpdate" xml:space="preserve">
    <value>Failed to update the advertising manifest {0}: {1}.</value>
  </data>
  <data name="FailedLowercase" xml:space="preserve">
    <value>failed</value>
  </data>
  <data name="FailedToCreateToolShim" xml:space="preserve">
    <value>Failed to create shell shim for tool '{0}': {1}</value>
  </data>
  <data name="FailedToExtractMsi" xml:space="preserve">
    <value>Failed to extract information from MSI: {0}</value>
  </data>
  <data name="FailedToInstallWorkloadManifest" xml:space="preserve">
    <value>Failed to install manifest {0} version {1}: {2}.</value>
  </data>
  <data name="FailedToInstallWorkloadSet" xml:space="preserve">
    <value>Failed to install workload version {0}: {1}</value>
  </data>
  <data name="FailedToRunTarget" xml:space="preserve">
    <value>Failed to restore workload for project {0}: Failed to run MSBuild Target _GetRequiredWorkloads.</value>
  </data>
  <data name="FailedToUninstallTool" xml:space="preserve">
    <value>Failed to uninstall tool '{0}': {1}</value>
  </data>
  <data name="FailedWithErrors" xml:space="preserve">
    <value>failed with {0} error(s)</value>
  </data>
  <data name="FailedWithErrorsAndWarnings" xml:space="preserve">
    <value>failed with {0} error(s) and {1} warning(s)</value>
  </data>
  <data name="FailedWithWarnings" xml:space="preserve">
    <value>failed with {0} warning(s)</value>
  </data>
  <data name="FormatArgumentName" xml:space="preserve">
    <value>Format</value>
  </data>
  <data name="FormatDefinition" xml:space="preserve">
    <value>Apply style preferences to a project or solution.</value>
  </data>
  <data name="FormatDescription" xml:space="preserve">
    <value>Format the output accordingly. Either `table`, or `json`. The default value is `table`.</value>
  </data>
  <data name="FormatOptionDescription" xml:space="preserve">
    <value>Changes the format of outputted workload versions. Can take 'json' or 'list'</value>
  </data>
  <data name="ForTest" xml:space="preserve">
    <value>For test</value>
    <comment>is followed by test name</comment>
  </data>
  <data name="FrameworkVersionOption" xml:space="preserve">
    <value>FRAMEWORK_VERSION</value>
  </data>
  <data name="FrameworkVersionOptionDescription" xml:space="preserve">
    <value>The Microsoft.NETCore.App package version that will be used to run the assemblies.</value>
  </data>
  <data name="FromCacheOptionArgumentName" xml:space="preserve">
    <value>DIRECTORY</value>
  </data>
  <data name="FromCacheOptionDescription" xml:space="preserve">
    <value>Complete the operation from cache (offline).</value>
  </data>
  <data name="FromFile" xml:space="preserve">
    <value>from</value>
    <comment>from followed by a file name to point to the file from which test is originating</comment>
  </data>
  <data name="FromHistoryOptionDescription" xml:space="preserve">
    <value>Update workloads to a previous version specified by the argument. Use the 'dotnet workload history' to see available workload history records.</value>
  </data>
  <data name="FromPreviousSdkOptionDescription" xml:space="preserve">
    <value>Include workloads installed with earlier SDK versions in update.</value>
  </data>
  <data name="FromRollbackDefinitionOptionDescription" xml:space="preserve">
    <value>Update workloads based on specified rollback definition file.</value>
  </data>
  <data name="FsiDefinition" xml:space="preserve">
    <value>Start F# Interactive / execute F# scripts.</value>
  </data>
  <data name="FxVersionDefinition" xml:space="preserve">
    <value>Version of the installed Shared Framework to use to run the application.</value>
  </data>
  <data name="GarbageCollectingSdkFeatureBandsMessage" xml:space="preserve">
    <value>Garbage collecting for SDK feature band(s) {0}...</value>
  </data>
  <data name="GarbageCollectionFailed" xml:space="preserve">
    <value>Warning: Workload garbage collection failed with error: {0}.</value>
  </data>
  <data name="GlobalJsonVersion" xml:space="preserve">
    <value>Global.json Version</value>
  </data>
  <data name="HangDumpTypeArgumentName" xml:space="preserve">
    <value>DUMP_TYPE</value>
  </data>
  <data name="HangTimeoutArgumentName" xml:space="preserve">
    <value>TIMESPAN</value>
  </data>
  <data name="HelpAppFullName" xml:space="preserve">
    <value>.NET CLI help utility</value>
  </data>
  <data name="HelpDefinition" xml:space="preserve">
    <value>Opens the reference page in a browser for the specified command.</value>
  </data>
  <data name="HelpExtensionOptions" xml:space="preserve">
    <value>Extension Options:</value>
  </data>
  <data name="HelpModuleIsMissingTheOptionBelow" xml:space="preserve">
    <value>{0} is missing the option below</value>
    <comment>0 is name of the module, this string is followed by lined that list the option</comment>
  </data>
  <data name="HelpModuleIsMissingTheOptionsBelow" xml:space="preserve">
    <value>{0} is missing the options below</value>
    <comment>0 is name of the module, this string is followed by lined that list the options</comment>
  </data>
  <data name="HelpModulesAreMissingTheOptionBelow" xml:space="preserve">
    <value>{0} are missing the option below</value>
    <comment>0 is name of the module, this string is followed by lined that list the option</comment>
  </data>
  <data name="HelpModulesAreMissingTheOptionsBelow" xml:space="preserve">
    <value>{0} are missing the options below</value>
    <comment>0 is name of the module, this string is followed by lined that list the options</comment>
  </data>
  <data name="HelpOptions" xml:space="preserve">
    <value>Options:</value>
  </data>
  <data name="HelpPlatformOptions" xml:space="preserve">
    <value>Platform Options:</value>
  </data>
  <data name="HelpUnavailableExtensionOptions" xml:space="preserve">
    <value>Unavailable extension options:</value>
  </data>
  <data name="HelpUnavailableOptions" xml:space="preserve">
    <value>Unavailable options:</value>
  </data>
  <data name="HelpWaitingForOptionsAndExtensions" xml:space="preserve">
    <value>Waiting for options and extensions...</value>
  </data>
  <data name="HistoryManifestOnlyOptionDescription" xml:space="preserve">
    <value>Update to the workload versions specified in the history without changing which workloads are installed. Currently installed workloads will be updated to match the specified history version.</value>
  </data>
  <data name="HostFxrCouldNotBeLoaded" xml:space="preserve">
    <value>Could not load hostfxr from '{0}'.</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="IgnoredArgumentsMessage" xml:space="preserve">
    <value>The following arguments have been ignored : "{0}"</value>
  </data>
  <data name="InadequatePermissions" xml:space="preserve">
    <value>Inadequate permissions. Run the command with elevated privileges.</value>
  </data>
  <data name="IncludePreviewOptionDescription" xml:space="preserve">
    <value>Allow prerelease workload manifests.</value>
  </data>
  <data name="InProcessArtifactsProduced" xml:space="preserve">
    <value>In process file artifacts produced:</value>
  </data>
  <data name="InRoot" xml:space="preserve">
    <value>Place project in root of the solution, rather than creating a solution folder.</value>
  </data>
  <data name="InstallingPackVersionMessage" xml:space="preserve">
    <value>Installing pack {0} version {1}...</value>
  </data>
  <data name="InstallingWorkloadManifest" xml:space="preserve">
    <value>Installing workload manifest {0} version {1}...</value>
  </data>
  <data name="InstallingWorkloads" xml:space="preserve">
    <value>Installing workloads: {0}</value>
  </data>
  <data name="InstallToolCommandInvalidGlobalAndLocalAndToolPath" xml:space="preserve">
    <value>The local option(--local), the global option (--global), the tool path option (--tool-path), can only have one at a time. Specify only one of the options: {0}.</value>
  </data>
  <data name="InsufficientPrivilegeToStartServer" xml:space="preserve">
    <value>Insufficient privilege to start the server.</value>
  </data>
  <data name="IntermediateWorkingDirOption" xml:space="preserve">
    <value>WORKING_DIR</value>
  </data>
  <data name="IntermediateWorkingDirOptionDescription" xml:space="preserve">
    <value>The working directory used by the command to execute.</value>
  </data>
  <data name="InvalidFilePath" xml:space="preserve">
    <value>The specified file must exist and have '.cs' file extension: '{0}'</value>
    <comment>{Locked=".cs"}</comment>
  </data>
  <data name="InvalidSemVerVersionString" xml:space="preserve">
    <value>Failed to parse "{0}" as a semantic version.</value>
    <comment>{0} is a version string that the user entered that was not parsed as a Semantic Version</comment>
  </data>
  <data name="InvalidToolConfiguration" xml:space="preserve">
    <value>The settings file in the tool's NuGet package is invalid: {0}</value>
  </data>
  <data name="InvalidVersionForWorkload" xml:space="preserve">
    <value>Error parsing version '{1}' for workload manifest ID '{0}'</value>
  </data>
  <data name="LatestVersion" xml:space="preserve">
    <value>Latest Version</value>
    <comment>Table lable</comment>
  </data>
  <data name="LaunchProfileDoesNotExist" xml:space="preserve">
    <value>A launch profile with the name '{0}' doesn't exist.</value>
  </data>
  <data name="LaunchProfileHandlerCannotBeLocated" xml:space="preserve">
    <value>The launch profile type '{0}' is not supported.</value>
  </data>
  <data name="LaunchProfileIsNotAJsonObject" xml:space="preserve">
    <value>A profile with the specified name isn't a valid JSON object.</value>
  </data>
  <data name="LaunchProfilesCollectionIsNotAJsonObject" xml:space="preserve">
    <value>The 'profiles' property of the launch settings document is not a JSON object.</value>
  </data>
  <data name="ListAppFullName" xml:space="preserve">
    <value>List all projects in a solution file.</value>
  </data>
  <data name="ListSolutionFoldersArgumentDescription" xml:space="preserve">
    <value>Display solution folder paths.</value>
  </data>
  <data name="ListToolCommandInvalidGlobalAndLocalAndToolPath" xml:space="preserve">
    <value>The local option(--local), the global option (--global), the tool path option (--tool-path), can only have one at a time. Specify only one of the options: {0}.</value>
  </data>
  <data name="LocalOptionDoesNotSupportFrameworkOption" xml:space="preserve">
    <value>The local option(--local) does not support the framework option (--framework).</value>
  </data>
  <data name="LocalToolInstallationSucceeded" xml:space="preserve">
    <value>You can invoke the tool from this directory using the following commands: 'dotnet tool run {0}' or 'dotnet {0}'.
Tool '{1}' (version '{2}') was successfully installed. Entry is added to the manifest file {3}.</value>
  </data>
  <data name="LocalToolsRestoreWasSuccessful" xml:space="preserve">
    <value>Restore was successful.</value>
  </data>
  <data name="MaintenanceMessage" xml:space="preserve">
    <value>.NET {0} is going out of support soon.</value>
  </data>
  <data name="ManifestFileColumn" xml:space="preserve">
    <value>Manifest</value>
  </data>
  <data name="ManifestMsiNotFoundInNuGetPackage" xml:space="preserve">
    <value>Manifest MSI not found in NuGet package {0}</value>
  </data>
  <data name="ManifestOption" xml:space="preserve">
    <value>MANIFEST</value>
  </data>
  <data name="ManifestOptionDescription" xml:space="preserve">
    <value>The path to a target manifest file that contains the list of packages to be excluded from the publish step.</value>
  </data>
  <data name="ManifestPackageUrlNotResolved" xml:space="preserve">
    <value>Manifest package not resolved. Manifest package or URL for {0} doesn't exist.</value>
  </data>
  <data name="MigrateAppFullName" xml:space="preserve">
    <value>Generate a .slnx file from a .sln file.</value>
  </data>
  <data name="MinimumExpectedTestsPolicyViolation" xml:space="preserve">
    <value>Minimum expected tests policy violation, tests ran {0}, minimum expected {1}</value>
    <comment>{0}, {1} number of tests</comment>
  </data>
  <data name="MissingDirectiveName" xml:space="preserve">
    <value>Missing name of '{0}' at {1}.</value>
    <comment>{0} is the directive name like 'package' or 'sdk', {1} is the file path and line number.</comment>
  </data>
  <data name="MsBuildDefinition" xml:space="preserve">
    <value>Run Microsoft Build Engine (MSBuild) commands.</value>
  </data>
  <data name="MSBuildEvaluationResult_Error_NoProjectFound" xml:space="preserve">
    <value>No project was found at the path: {0}.</value>
    <comment>{0} - the file path where project was expected to be found.</comment>
  </data>
  <data name="MSBuildEvaluationResult_Error_NotRestored" xml:space="preserve">
    <value>{0} is not restored.</value>
    <comment>{0} - the full path to the project.</comment>
  </data>
  <data name="MSBuildEvaluator_Error_NoTargetFramework" xml:space="preserve">
    <value>Project '{0}' is a SDK-style project, but does not specify the framework.</value>
    <comment>{0} - the full path to the project.</comment>
  </data>
  <data name="MSBuildOptionDescription" xml:space="preserve">
    <value>Shut down the MSBuild build server.</value>
  </data>
  <data name="MsiProgressInstall" xml:space="preserve">
    <value>Installing {0} </value>
  </data>
  <data name="MsiProgressRepair" xml:space="preserve">
    <value>Repairing {0} </value>
  </data>
  <data name="MsiProgressUninstall" xml:space="preserve">
    <value>Removing {0} </value>
  </data>
  <data name="MultipleProjectsEvaluationResult_Error" xml:space="preserve">
    <value>Multiple projects found: {0}.</value>
    <comment>{0} - semi-colon separated list of path to projects found.</comment>
  </data>
  <data name="NameColumnHeader" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NeedNuGetInConfig" xml:space="preserve">
    <value>The 'dotnet tool search' command unconditionally accesses nuget.org to find tools, but it is not present in your nuget.config. Add it to run this command.
    This can be done with this command:
  dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org</value>
    <comment>Do not translate 'dotnet tool search' or 'nuget.config'. Do not localize the last line at all.</comment>
  </data>
  <data name="NetAddCommand" xml:space="preserve">
    <value>.NET Add Command</value>
  </data>
  <data name="NetListCommand" xml:space="preserve">
    <value>List references or packages of a .NET project.</value>
  </data>
  <data name="NetRemoveCommand" xml:space="preserve">
    <value>.NET Remove Command</value>
  </data>
  <data name="NewDefinition" xml:space="preserve">
    <value>Create a new .NET project or file.</value>
  </data>
  <data name="NewFeatureBandMessage" xml:space="preserve">
    <value>Try out the newest .NET SDK features with .NET {0}.</value>
  </data>
  <data name="NewPatchAvailableMessage" xml:space="preserve">
    <value>Patch {0} is available.</value>
  </data>
  <data name="NewWorkloadSet" xml:space="preserve">
    <value>Installing workload version {0}.</value>
  </data>
  <data name="NoBuildOptionDescription" xml:space="preserve">
    <value>Do not build the project before publishing. Implies --no-restore.</value>
  </data>
  <data name="NoDependenciesOptionDescription" xml:space="preserve">
    <value>Do not build project-to-project references and only build the specified project.</value>
  </data>
  <data name="NoHistoryFound" xml:space="preserve">
    <value>No workload history found</value>
  </data>
  <data name="NoIncrementalOptionDescription" xml:space="preserve">
    <value>Do not use incremental building.</value>
  </data>
  <data name="NoManifestFileContainPackageId" xml:space="preserve">
    <value>Cannot find a manifest file that contains package id '{0}'.</value>
  </data>
  <data name="NoProjectsOrSolutions" xml:space="preserve">
    <value>A project or solution file could not be found in {0}. Specify a project or solution file to use.</value>
  </data>
  <data name="NoResult" xml:space="preserve">
    <value>Could not find any results.</value>
  </data>
  <data name="NoSerializerRegisteredWithIdErrorMessage" xml:space="preserve">
    <value>No serializer registered with ID '{0}'</value>
  </data>
  <data name="NoSerializerRegisteredWithTypeErrorMessage" xml:space="preserve">
    <value>No serializer registered with type '{0}'</value>
  </data>
  <data name="NoServersToShutdown" xml:space="preserve">
    <value>No build servers are running.</value>
  </data>
  <data name="NoToolsWereRestored" xml:space="preserve">
    <value>No tools were restored.</value>
  </data>
  <data name="NoTrustWithParentPID" xml:space="preserve">
    <value>Failed to establish a trust relationship with parent process ({0}).</value>
  </data>
  <data name="NoWorkloadHistoryRecords" xml:space="preserve">
    <value>Workload history records are created when when running an operation that modifies workloads like update or install. Cannot update from history until workload history records exist.</value>
  </data>
  <data name="NoWorkloadsInstalledInfoWarning" xml:space="preserve">
    <value>There are no installed workloads to display.</value>
  </data>
  <data name="NoWorkloadsToRepair" xml:space="preserve">
    <value>No workloads are installed, nothing to repair. Run `dotnet workload search` to find workloads to install.</value>
  </data>
  <data name="NoWorkloadsToUpdate" xml:space="preserve">
    <value>No workloads installed for this feature band. To update workloads installed with earlier SDK versions, include the --from-previous-sdk option.</value>
  </data>
  <data name="NoWorkloadUpdateFound" xml:space="preserve">
    <value>No workload update found.</value>
  </data>
  <data name="NoWorkloadVersionsFound" xml:space="preserve">
    <value>No workload versions found for SDK feature band {0}.</value>
  </data>
  <data name="NugetDefinition" xml:space="preserve">
    <value>Provides additional NuGet commands.</value>
  </data>
  <data name="OnlyLocalOptionSupportManifestFileOption" xml:space="preserve">
    <value>Specifying the tool manifest option (--tool-manifest) is only valid with the local option (--local or the default).</value>
  </data>
  <data name="OptionsCannotBeCombined" xml:space="preserve">
    <value>Options '--outdated', '--deprecated' and '--vulnerable' cannot be combined.</value>
  </data>
  <data name="OSDoesNotSupportMsi" xml:space="preserve">
    <value>MSI installations are only supported on Windows.</value>
  </data>
  <data name="OutOfProcessArtifactsProduced" xml:space="preserve">
    <value>Out of process file artifacts produced:</value>
  </data>
  <data name="OutOfSupportMessage" xml:space="preserve">
    <value>.NET {0} is out of support.</value>
  </data>
  <data name="OutputOptionName" xml:space="preserve">
    <value>OUTPUT_DIR</value>
  </data>
  <data name="PackageAddAppFullName" xml:space="preserve">
    <value>Add a NuGet package reference to the project.</value>
  </data>
  <data name="PackageAddCmdFramework" xml:space="preserve">
    <value>FRAMEWORK</value>
  </data>
  <data name="PackageAddCmdFrameworkDescription" xml:space="preserve">
    <value>Add the reference only when targeting a specific framework.</value>
  </data>
  <data name="PackageAddCmdNoRestoreDescription" xml:space="preserve">
    <value>Add the reference without performing restore preview and compatibility check.</value>
  </data>
  <data name="PackageAddCmdSource" xml:space="preserve">
    <value>SOURCE</value>
  </data>
  <data name="PackageAddCmdSourceDescription" xml:space="preserve">
    <value>The NuGet package source to use during the restore.</value>
  </data>
  <data name="PackageDefinition" xml:space="preserve">
    <value>Search for, add, remove, or list PackageReferences for a .NET project.</value>
  </data>
  <data name="PackageFailedToRestore" xml:space="preserve">
    <value>Package "{0}" failed to restore, due to {1}</value>
  </data>
  <data name="PackageId" xml:space="preserve">
    <value>Package ID</value>
    <comment>Table lable</comment>
  </data>
  <data name="PackageListAppFullName" xml:space="preserve">
    <value>List all package references of the project or solution.</value>
  </data>
  <data name="PackageListCmdFramework" xml:space="preserve">
    <value>FRAMEWORK | FRAMEWORK\RID</value>
  </data>
  <data name="PackageListCmdFrameworkDescription" xml:space="preserve">
    <value>Chooses a framework to show its packages. Use the option multiple times for multiple frameworks.</value>
  </data>
  <data name="PackageListCmdSource" xml:space="preserve">
    <value>SOURCE</value>
  </data>
  <data name="PackageListCmdSourceDescription" xml:space="preserve">
    <value>The NuGet sources to use when searching for newer packages. Requires the '--outdated', '--deprecated' or '--vulnerable' option.</value>
  </data>
  <data name="PackageListFileNotFound" xml:space="preserve">
    <value>Could not find file or directory '{0}'.</value>
  </data>
  <data name="PackageRemoveAppFullName" xml:space="preserve">
    <value>Remove a NuGet package reference from the project.</value>
  </data>
  <data name="PackageRemoveAppHelpText" xml:space="preserve">
    <value>The package reference to remove.</value>
  </data>
  <data name="PackageRemoveSpecifyExactlyOnePackageReference" xml:space="preserve">
    <value>Specify only one package reference to remove.</value>
  </data>
  <data name="PackagesCommandNameCollisionConclusion" xml:space="preserve">
    <value>Command names conflict. Command names are case insensitive.
{0}</value>
  </data>
  <data name="PackagesCommandNameCollisionForOnePackage" xml:space="preserve">
    <value>A command "{0}" in package "{1}"</value>
  </data>
  <data name="PackageSearchCommandDescription" xml:space="preserve">
    <value>Searches one or more package sources for packages that match a search term. If no sources are specified, all sources defined in the NuGet.Config are used.</value>
  </data>
  <data name="PackageSearchPrereleaseDescription" xml:space="preserve">
    <value>Include prerelease packages.</value>
  </data>
  <data name="PackageSearchSearchTermArgumentName" xml:space="preserve">
    <value>SearchTerm</value>
  </data>
  <data name="PackageSearchSearchTermDescription" xml:space="preserve">
    <value>Search term to filter package names, descriptions, and tags. Used as a literal value. Example: `dotnet package search some.package`. See also `--exact-match`.</value>
  </data>
  <data name="PackageSearchSkipArgumentName" xml:space="preserve">
    <value>Skip</value>
  </data>
  <data name="PackageSearchSkipDescription" xml:space="preserve">
    <value>Number of results to skip, to allow pagination. Default 0.</value>
  </data>
  <data name="PackageSearchTakeArgumentName" xml:space="preserve">
    <value>Take</value>
  </data>
  <data name="PackageSearchTakeDescription" xml:space="preserve">
    <value>Number of results to return. Default 20.</value>
  </data>
  <data name="PackAppFullName" xml:space="preserve">
    <value>.NET Core NuGet Package Packer</value>
  </data>
  <data name="PackCmdNoLogo" xml:space="preserve">
    <value>Do not display the startup banner or the copyright message.</value>
  </data>
  <data name="PackCmdOutputDir" xml:space="preserve">
    <value>OUTPUT_DIR</value>
  </data>
  <data name="PackCmdOutputDirDescription" xml:space="preserve">
    <value>The output directory to place built packages in.</value>
  </data>
  <data name="PackConfigurationOptionDescription" xml:space="preserve">
    <value>The configuration to use for building the package. The default is 'Release'.</value>
  </data>
  <data name="PackDefinition" xml:space="preserve">
    <value>Create a NuGet package.</value>
  </data>
  <data name="Passed" xml:space="preserve">
    <value>Passed</value>
  </data>
  <data name="PassedLowercase" xml:space="preserve">
    <value>passed</value>
  </data>
  <data name="PathToApplicationDefinition" xml:space="preserve">
    <value>The path to an application .dll file to execute.</value>
  </data>
  <data name="PendingReboot" xml:space="preserve">
    <value>The machine has a pending reboot. The workload operation will continue, but you may need to restart.</value>
  </data>
  <data name="PostAction_AddProjToSln_Error_BothInRootAndSolutionFolderSpecified" xml:space="preserve">
    <value>Add project reference to solution action is not configured correctly in the template.
    The 'solutionFolder' and 'inRoot' cannot be used together; use only one of the options.</value>
    <comment>do not translate: 'solutionFolder', 'inRoot'</comment>
  </data>
  <data name="PostAction_AddProjToSln_Error_NoProjectsToAdd" xml:space="preserve">
    <value>Add project reference to solution action is not configured correctly in the template. Unable to determine the project files to add.</value>
  </data>
  <data name="PostAction_AddProjToSln_Error_NoSolutionFile" xml:space="preserve">
    <value>Unable to determine which solution file to add the reference to.</value>
  </data>
  <data name="PostAction_AddProjToSln_Failed" xml:space="preserve">
    <value>Failed to add project(s) to the solution: {0}</value>
    <comment>{0} - the reason why operation failed, normally ends with period</comment>
  </data>
  <data name="PostAction_AddProjToSln_Failed_NoReason" xml:space="preserve">
    <value>Failed to add project(s) to a solution file.</value>
  </data>
  <data name="PostAction_AddProjToSln_InRoot_Running" xml:space="preserve">
    <value>Adding
    project(s): {0}
    in the root of solution file: {1}</value>
    <comment>{0} - list of file paths to projects to add,
{1} - the path to target solution file</comment>
  </data>
  <data name="PostAction_AddProjToSln_Running" xml:space="preserve">
    <value>Adding
    project(s): {0}
    to solution file: {1}
    solution folder: {2}</value>
    <comment>{0} - list of file paths to projects to add,
{1} - the path to target solution file,
{2} - the solution folder inside solution to add the projects to.</comment>
  </data>
  <data name="PostAction_AddProjToSln_Succeeded" xml:space="preserve">
    <value>Successfully added project(s) to a solution file.</value>
  </data>
  <data name="PostAction_AddReference_AddPackageReference" xml:space="preserve">
    <value>Adding a package reference {0} to project file {1}:</value>
  </data>
  <data name="PostAction_AddReference_AddPackageReference_Failed" xml:space="preserve">
    <value>Failed to add package reference: {0}</value>
    <comment>{0} - the reason why operation failed, normally ends with period</comment>
  </data>
  <data name="PostAction_AddReference_AddPackageReference_WithVersion" xml:space="preserve">
    <value>Adding a package reference {0} (version: {1}) to project file {2}:</value>
  </data>
  <data name="PostAction_AddReference_AddProjectReference" xml:space="preserve">
    <value>Adding a project reference {0} to project file {1}:</value>
  </data>
  <data name="PostAction_AddReference_AddProjectReference_Failed" xml:space="preserve">
    <value>Failed to add project reference: {0}</value>
    <comment>{0} - the reason why operation failed, normally ends with period</comment>
  </data>
  <data name="PostAction_AddReference_Error_ActionMisconfigured" xml:space="preserve">
    <value>Add reference action is not configured correctly in the template.</value>
  </data>
  <data name="PostAction_AddReference_Error_FrameworkNotSupported" xml:space="preserve">
    <value>Unable to automatically add the framework reference {0} to the project. Manually edit the project file to add it.</value>
  </data>
  <data name="PostAction_AddReference_Error_ProjFileListHeader" xml:space="preserve">
    <value>Project files found:</value>
  </data>
  <data name="PostAction_AddReference_Error_UnresolvedProjFile" xml:space="preserve">
    <value>Unable to determine which project file to add the reference to.</value>
  </data>
  <data name="PostAction_AddReference_Error_UnsupportedRefType" xml:space="preserve">
    <value>Adding reference type {0} is not supported.</value>
  </data>
  <data name="PostAction_AddReference_Failed" xml:space="preserve">
    <value>Failed to add a reference to the project file.</value>
  </data>
  <data name="PostAction_AddReference_Succeeded" xml:space="preserve">
    <value>Successfully added a reference to the project file.</value>
  </data>
  <data name="PostAction_Restore_Error_FailedToDetermineProjectToRestore" xml:space="preserve">
    <value>Couldn't determine files to restore.</value>
  </data>
  <data name="PostAction_Restore_Error_NoProjectsToRestore" xml:space="preserve">
    <value>No projects are configured to restore. Check primary outputs configuration in template.json.</value>
  </data>
  <data name="PostAction_Restore_Failed" xml:space="preserve">
    <value>Restore failed.</value>
  </data>
  <data name="PostAction_Restore_RestoreFailed" xml:space="preserve">
    <value>Failed to perform restore: {0}</value>
    <comment>{0} - the reason why operation failed, normally ends with period</comment>
  </data>
  <data name="PostAction_Restore_Running" xml:space="preserve">
    <value>Restoring {0}:</value>
    <comment>{0} - path to a project to restore</comment>
  </data>
  <data name="PostAction_Restore_Succeeded" xml:space="preserve">
    <value>Restore succeeded.</value>
  </data>
  <data name="PrereleaseAndVersionAreNotSupportedAtTheSameTime" xml:space="preserve">
    <value>The --prerelease and --version options are not supported in the same command</value>
  </data>
  <data name="PrintDownloadLinkOnlyDescription" xml:space="preserve">
    <value>Only print the list of links to download without downloading.</value>
  </data>
  <data name="PrintSetVersionsDescription" xml:space="preserve">
    <value>'dotnet workload search version' has three functions depending on its argument:
      1. If no argument is specified, it outputs a list of the latest released workload versions from this feature band. Takes the --take option to specify how many to provide and --format to alter the format.
         Example:
           dotnet workload search version --take 2 --format json
           [{"workloadVersion":"9.0.201"},{"workloadVersion":"9.0.200.1"}]
      2. If a workload version is provided as an argument, it outputs a table of various workloads and their versions for the specified workload version. Takes the --format option to alter the output format.
         Example:
           dotnet workload search version 9.0.201
           Workload manifest ID                               Manifest feature band      Manifest Version
           ------------------------------------------------------------------------------------------------
           microsoft.net.workload.emscripten.current          9.0.100-rc.1               9.0.0-rc.1.24430.3
           microsoft.net.workload.emscripten.net6             9.0.100-rc.1               9.0.0-rc.1.24430.3
           microsoft.net.workload.emscripten.net7             9.0.100-rc.1               9.0.0-rc.1.24430.3
           microsoft.net.workload.emscripten.net8             9.0.100-rc.1               9.0.0-rc.1.24430.3
           microsoft.net.sdk.android                          9.0.100-rc.1               35.0.0-rc.1.80
           microsoft.net.sdk.ios                              9.0.100-rc.1               17.5.9270-net9-rc1
           microsoft.net.sdk.maccatalyst                      9.0.100-rc.1               17.5.9270-net9-rc1
           microsoft.net.sdk.macos                            9.0.100-rc.1               14.5.9270-net9-rc1
           microsoft.net.sdk.maui                             9.0.100-rc.1               9.0.0-rc.1.24453.9
           microsoft.net.sdk.tvos                             9.0.100-rc.1               17.5.9270-net9-rc1
           microsoft.net.workload.mono.toolchain.current      9.0.100-rc.1               9.0.0-rc.1.24431.7
           microsoft.net.workload.mono.toolchain.net6         9.0.100-rc.1               9.0.0-rc.1.24431.7
           microsoft.net.workload.mono.toolchain.net7         9.0.100-rc.1               9.0.0-rc.1.24431.7
           microsoft.net.workload.mono.toolchain.net8         9.0.100-rc.1               9.0.0-rc.1.24431.7
           microsoft.net.sdk.aspire                           8.0.100                    8.2.0
      3. If one or more workloads are provided along with their versions (by joining them with the '@' character), it outputs workload versions that match the provided versions. Takes the --take option to specify how many to provide and --format to alter the format.
         Example:
           dotnet workload search version maui@9.0.0-rc.1.24453.9 ios@17.5.9270-net9-rc1
           9.0.201
    </value>
    <comment>{Locked="--take"} {Locked="--format"} {Locked="dotnet workload search version"} {Locked="workloadVersion"}</comment>
  </data>
  <data name="ProjectCapabilityConstraint_DisplayName" xml:space="preserve">
    <value>Project capabiltities</value>
  </data>
  <data name="ProjectCapabilityConstraint_Error_ArgumentShouldBeString" xml:space="preserve">
    <value>argument should be a string</value>
    <comment>part of a sentence</comment>
  </data>
  <data name="ProjectCapabilityConstraint_Error_ArgumentShouldNotBeEmpty" xml:space="preserve">
    <value>arguments should not contain empty values</value>
    <comment>part of a sentence</comment>
  </data>
  <data name="ProjectCapabilityConstraint_Error_InvalidConstraintConfiguration" xml:space="preserve">
    <value>Invalid constraint configuration</value>
    <comment>part of a sentence</comment>
  </data>
  <data name="ProjectCapabilityConstraint_Error_InvalidJson" xml:space="preserve">
    <value>invalid JSON</value>
    <comment>part of a sentence</comment>
  </data>
  <data name="ProjectCapabilityConstraint_Restricted_EvaluationFailed_Message" xml:space="preserve">
    <value>Failed to evaluate project context: {0}</value>
    <comment>{0} - failure reason</comment>
  </data>
  <data name="ProjectCapabilityConstraint_Restricted_Message" xml:space="preserve">
    <value>The template needs project capability '{0}', and current project ({1}) does not satisfy it.</value>
    <comment>{0} - project capability expression (non-localizable), {1} - path to the project.</comment>
  </data>
  <data name="ProjectCapabilityConstraint_Restricted_MultipleProjectsFound_CTA" xml:space="preserve">
    <value>Specify the project to use using {0} option.</value>
    <comment>{0} - option to use - non localizable</comment>
  </data>
  <data name="ProjectCapabilityConstraint_Restricted_NonSDKStyle_Message" xml:space="preserve">
    <value>The project {0} is not an SDK style project, and is not supported for evaluation. It is only possible to use this template with SDK-style projects.</value>
    <comment>{0} - path to the project</comment>
  </data>
  <data name="ProjectCapabilityConstraint_Restricted_NoProjectFound_CTA" xml:space="preserve">
    <value>This template can only be created inside the project.</value>
  </data>
  <data name="ProjectCapabilityConstraint_Restricted_NotRestored_CTA" xml:space="preserve">
    <value>Run 'dotnet restore {0}' to restore the project.</value>
    <comment>{Locked="dotnet restore {0}"}</comment>
  </data>
  <data name="ProjectCapabilityConstraintFactory_Exception_EvaluationFailed" xml:space="preserve">
    <value>Failed to create constraint '{0}': failed to evaluate the project: {1}</value>
    <comment>{0} - type of constraint (non-localizable), {1} - localized reason why evaluation failed, ends with period.</comment>
  </data>
  <data name="ProjectCapabilityConstraintFactory_Exception_NoEvaluator" xml:space="preserve">
    <value>Failed to create constraint '{0}': {1} component is not available.</value>
    <comment>{0} - type of constraint (non-localizable), {1} - name of required component (non-localizable).</comment>
  </data>
  <data name="ProjectContextSymbolSource_DisplayName" xml:space="preserve">
    <value>Project context</value>
  </data>
  <data name="ProjectConvertAppFullName" xml:space="preserve">
    <value>Convert a file-based program to a project-based program.</value>
  </data>
  <data name="ProjectManifest" xml:space="preserve">
    <value>PROJECT_MANIFEST</value>
  </data>
  <data name="ProjectManifestDescription" xml:space="preserve">
    <value>The XML file that contains the list of packages to be stored.</value>
  </data>
  <data name="ProjectsHeader" xml:space="preserve">
    <value>Project(s)</value>
  </data>
  <data name="PropertyDirectiveInvalidName" xml:space="preserve">
    <value>Invalid property name at {0}. {1}</value>
    <comment>{0} is the file path and line number. {1} is an inner exception message.</comment>
  </data>
  <data name="PropertyDirectiveMissingParts" xml:space="preserve">
    <value>The property directive needs to have two parts separated by a space like 'PropertyName PropertyValue': {0}</value>
    <comment>{0} is the file path and line number.</comment>
  </data>
  <data name="CannotConvertDirective" xml:space="preserve">
    <value>Some directives cannot be converted: the first error is at {0}. Run the file to see all compilation errors. Specify '--force' to convert anyway.</value>
    <comment>{Locked="--force"}. {0} is the file path and line number.</comment>
  </data>
  <data name="DuplicateDirective" xml:space="preserve">
    <value>Duplicate directives are not supported: {0} at {1}</value>
    <comment>{0} is the directive type and name. {1} is the file path and line number.</comment>
  </data>
  <data name="InvalidOptionCombination" xml:space="preserve">
    <value>Cannot combine option '{0}' and '{1}'.</value>
    <comment>{0} and {1} are option names like '--no-build'.</comment>
  </data>
  <data name="NoBinaryLogBecauseUpToDate" xml:space="preserve">
    <value>Warning: Binary log option was specified but build will be skipped because output is up to date, specify '--no-cache' to force build.</value>
    <comment>{Locked="--no-cache"}</comment>
  </data>
  <data name="PublishAppDescription" xml:space="preserve">
    <value>Publisher for the .NET Platform</value>
  </data>
  <data name="PublishCmdNoLogo" xml:space="preserve">
    <value>Do not display the startup banner or the copyright message.</value>
  </data>
  <data name="PublishConfigurationOptionDescription" xml:space="preserve">
    <value>The configuration to publish for. The default is 'Release' for NET 8.0 projects and above, but 'Debug' for older projects.</value>
  </data>
  <data name="PublishDefinition" xml:space="preserve">
    <value>Publish a .NET project for deployment.</value>
  </data>
  <data name="PublishFrameworkOptionDescription" xml:space="preserve">
    <value>The target framework to publish for. The target framework has to be specified in the project file.</value>
  </data>
  <data name="PublishOutputOption" xml:space="preserve">
    <value>OUTPUT_DIR</value>
  </data>
  <data name="PublishOutputOptionDescription" xml:space="preserve">
    <value>The output directory to place the published artifacts in.</value>
  </data>
  <data name="PublishRuntimeOptionDescription" xml:space="preserve">
    <value>The target runtime to publish for. This is used when creating a self-contained deployment.
The default is to publish a framework-dependent application.</value>
  </data>
  <data name="RazorOptionDescription" xml:space="preserve">
    <value>Shut down the Razor build server.</value>
  </data>
  <data name="ReferenceAddAppFullName" xml:space="preserve">
    <value>Add a project-to-project reference to the project.</value>
  </data>
  <data name="ReferenceAddCmdFrameworkDescription" xml:space="preserve">
    <value>Add the reference only when targeting a specific framework.</value>
  </data>
  <data name="ReferenceAddProjectPathArgumentDescription" xml:space="preserve">
    <value>The paths to the projects to add as references.</value>
  </data>
  <data name="ReferenceAddProjectPathArgumentName" xml:space="preserve">
    <value>PROJECT_PATH</value>
  </data>
  <data name="ReferenceDefinition" xml:space="preserve">
    <value>Add, remove, or list ProjectReferences for a .NET project.</value>
  </data>
  <data name="ReferenceListAppFullName" xml:space="preserve">
    <value>List all project-to-project references of the project.</value>
  </data>
  <data name="ReferenceRemoveAppFullName" xml:space="preserve">
    <value>Remove a project-to-project reference from the project.</value>
  </data>
  <data name="ReferenceRemoveCmdFrameworkDescription" xml:space="preserve">
    <value>Remove the reference only when targeting a specific framework.</value>
  </data>
  <data name="ReferenceRemoveProjectPathArgumentDescription" xml:space="preserve">
    <value>The paths to the referenced projects to remove.</value>
  </data>
  <data name="ReferenceRemoveProjectPathArgumentName" xml:space="preserve">
    <value>PROJECT_PATH</value>
  </data>
  <data name="ReleasesLibraryFailed" xml:space="preserve">
    <value>Unable to get releases information: {0}</value>
  </data>
  <data name="RemoveAppFullName" xml:space="preserve">
    <value>Remove one or more projects from a solution file.</value>
  </data>
  <data name="RemoveProjectPathArgumentDescription" xml:space="preserve">
    <value>The project paths or names to remove from the solution.</value>
  </data>
  <data name="RemoveProjectPathArgumentName" xml:space="preserve">
    <value>PROJECT_PATH</value>
  </data>
  <data name="RemovingWorkloadInstallationRecord" xml:space="preserve">
    <value>Removing workload installation record for {0}...</value>
  </data>
  <data name="RepairingWorkloads" xml:space="preserve">
    <value>Repairing workload installation for workloads: {0}</value>
  </data>
  <data name="RepairSucceeded" xml:space="preserve">
    <value>Successfully repaired workloads: {0}</value>
  </data>
  <data name="RequiresWindows" xml:space="preserve">
    <value>This command can only be run on Windows</value>
  </data>
  <data name="RestoreAppFullName" xml:space="preserve">
    <value>.NET dependency restorer</value>
  </data>
  <data name="RestoreDefinition" xml:space="preserve">
    <value>Restore dependencies specified in a .NET project.</value>
  </data>
  <data name="RestoreFailed" xml:space="preserve">
    <value>Restore failed.</value>
  </data>
  <data name="RestorePartiallyFailed" xml:space="preserve">
    <value>Restore partially failed.</value>
  </data>
  <data name="RestoreSuccessful" xml:space="preserve">
    <value>Tool '{0}' (version '{1}') was restored. Available commands: {2}</value>
  </data>
  <data name="RollbackDefinitionContainsExtraneousManifestIds" xml:space="preserve">
    <value>Invalid rollback definition. The manifest IDs in rollback definition {0} do not match installed manifest IDs {1}.</value>
  </data>
  <data name="RollbackDefinitionFileDoesNotExist" xml:space="preserve">
    <value>Provided rollback definition file {0} doesn't exist.</value>
  </data>
  <data name="RollForwardDefinition" xml:space="preserve">
    <value>Roll forward to framework version  (LatestPatch, Minor, LatestMinor, Major, LatestMajor, Disable).</value>
  </data>
  <data name="RollForwardOptionDescription" xml:space="preserve">
    <value>Allow a .NET tool to roll forward to newer versions of the .NET runtime if the runtime it targets isn't installed.</value>
  </data>
  <data name="RollingBackPackInstall" xml:space="preserve">
    <value>Rolling back pack {0} installation...</value>
  </data>
  <data name="RunAppFullName" xml:space="preserve">
    <value>.NET Run Command</value>
  </data>
  <data name="RunCommandBuilding" xml:space="preserve">
    <value>Building...</value>
  </data>
  <data name="RunCommandEvaluationExceptionBuildFailed" xml:space="preserve">
    <value>Running the {0} target to discover run commands failed for this project. Fix the errors and warnings and run again.</value>
    <comment>{0} is the name of an MSBuild target</comment>
  </data>
  <data name="RunCommandException" xml:space="preserve">
    <value>The build failed. Fix the build errors and run again.</value>
  </data>
  <data name="RunCommandExceptionCouldNotApplyLaunchSettings" xml:space="preserve">
    <value>The launch profile "{0}" could not be applied.
{1}</value>
  </data>
  <data name="RunCommandExceptionCouldNotLocateALaunchSettingsFile" xml:space="preserve">
    <value>The specified launch profile '{0}' could not be located.</value>
  </data>
  <data name="RunCommandExceptionMultipleProjects" xml:space="preserve">
    <value>Specify which project file to use because {0} contains more than one project file.</value>
  </data>
  <data name="RunCommandExceptionNoProjects" xml:space="preserve">
    <value>Couldn't find a project to run. Ensure a project exists in {0}, or pass the path to the project using {1}.</value>
  </data>
  <data name="RunCommandExceptionUnableToRun" xml:space="preserve">
    <value>Unable to run your project.
Ensure you have a runnable project type and ensure '{0}' supports this project.
A runnable project should target a runnable TFM (for instance, net5.0) and have OutputType 'Exe'.
The current {1} is '{2}'.</value>
  </data>
  <data name="RunCommandExceptionUnableToRunSpecifyFramework" xml:space="preserve">
    <value>Unable to run your project
Your project targets multiple frameworks. Specify which framework to run using '{0}'.</value>
  </data>
  <data name="RunCommandProjectAbbreviationDeprecated" xml:space="preserve">
    <value>Warning NETSDK1174: The abbreviation of -p for --project is deprecated. Please use --project.</value>
    <comment>{Locked="--project"}</comment>
  </data>
  <data name="RunCommandSpecifiedFileIsNotAValidProject" xml:space="preserve">
    <value>'{0}' is not a valid project file.</value>
  </data>
  <data name="RunConfigurationOptionDescription" xml:space="preserve">
    <value>The configuration to run for. The default for most projects is 'Debug'.</value>
  </data>
  <data name="RunDefinition" xml:space="preserve">
    <value>Build and run a .NET project output.</value>
  </data>
  <data name="RunDotnetCommandHelpForMore" xml:space="preserve">
    <value>Run 'dotnet [command] --help' for more information on a command.</value>
  </data>
  <data name="RunFrameworkOptionDescription" xml:space="preserve">
    <value>The target framework to run for. The target framework must also be specified in the project file.</value>
  </data>
  <data name="RunningTestsFrom" xml:space="preserve">
    <value>Running tests from</value>
  </data>
  <data name="RunRuntimeOptionDescription" xml:space="preserve">
    <value>The target runtime to run for.</value>
  </data>
  <data name="RuntimeConfigDefinition" xml:space="preserve">
    <value>Path to &lt;application&gt;.runtimeconfig.json file.</value>
  </data>
  <data name="RuntimePropertyNotFound" xml:space="preserve">
    <value>Runtime property 'HOSTFXR_PATH' was not set or empty.</value>
  </data>
  <data name="RuntimeSectionHeader" xml:space="preserve">
    <value>.NET Runtimes:</value>
  </data>
  <data name="SamePackageIdInOtherManifestFile" xml:space="preserve">
    <value>Warning: There are other manifest files in the directory hierarchy that will affect this local tool. The following files have not been changed:
{0}</value>
  </data>
  <data name="SdkAppFullName" xml:space="preserve">
    <value>.NET SDK Command</value>
  </data>
  <data name="SdkCheckAppFullName" xml:space="preserve">
    <value>.NET SDK Check Command</value>
  </data>
  <data name="SDKCommandUsageDescription" xml:space="preserve">
    <value>Execute a .NET SDK command.</value>
  </data>
  <data name="SdkDefinition" xml:space="preserve">
    <value>Manage .NET SDK installation.</value>
  </data>
  <data name="SDKInfoCommandDefinition" xml:space="preserve">
    <value>Display .NET information.</value>
  </data>
  <data name="SdkInfoProvider_Message_InstallSdk" xml:space="preserve">
    <value>Go to aka.ms/get-dotnet and install any of the supported SDK versions: '{0}'.</value>
    <comment>{0} is the list of supported versions.</comment>
  </data>
  <data name="SdkInfoProvider_Message_SwitchSdk" xml:space="preserve">
    <value>You have other SDK version(s) installed that can be used to run this template. Switch to any of the following SDK(s) on your system to run this template: '{0}'. Details on selecting SDK version to run: https://docs.microsoft.com/dotnet/core/tools/global-json.</value>
    <comment>{0} is the list of installed and supported versions.</comment>
  </data>
  <data name="SDKListRuntimesCommandDefinition" xml:space="preserve">
    <value>Display the installed runtimes.</value>
  </data>
  <data name="SDKListSdksCommandDefinition" xml:space="preserve">
    <value>Display the installed SDKs.</value>
  </data>
  <data name="SDKOptionsHelpDefinition" xml:space="preserve">
    <value>Show command line help.</value>
  </data>
  <data name="SdkSectionHeader" xml:space="preserve">
    <value>.NET SDKs:</value>
  </data>
  <data name="SDKVersionCommandDefinition" xml:space="preserve">
    <value>Display .NET SDK version in use.</value>
  </data>
  <data name="SdkVersionOptionNotSupported" xml:space="preserve">
    <value>The --sdk-version option is no longer supported for this command.</value>
    <comment>{Locked="--sdk-version"}</comment>
  </data>
  <data name="ShouldInstallAWorkloadSet" xml:space="preserve">
    <value>Workloads are configured to install and update using workload versions, but none were found. Run "dotnet workload restore" to install a workload version.</value>
    <comment>{Locked="dotnet workload restore"}</comment>
  </data>
  <data name="ShutDownFailed" xml:space="preserve">
    <value>{0} failed to shut down: {1}</value>
  </data>
  <data name="ShutDownFailedWithPid" xml:space="preserve">
    <value>{0} (process {1}) failed to shut down: {2}</value>
  </data>
  <data name="ShutDownSucceeded" xml:space="preserve">
    <value>{0} shut down successfully.</value>
  </data>
  <data name="ShutDownSucceededWithPid" xml:space="preserve">
    <value>{0} (process {1}) shut down successfully.</value>
  </data>
  <data name="ShuttingDownServer" xml:space="preserve">
    <value>Shutting down {0}...</value>
  </data>
  <data name="ShuttingDownServerWithPid" xml:space="preserve">
    <value>Shutting down {0} (process {1})...</value>
  </data>
  <data name="SkipManifestUpdateOptionDescription" xml:space="preserve">
    <value>Skip updating the workload manifests.</value>
  </data>
  <data name="SkipOptimizationOptionDescription" xml:space="preserve">
    <value>Skip the optimization phase.</value>
  </data>
  <data name="SkippedLowercase" xml:space="preserve">
    <value>skipped</value>
  </data>
  <data name="SkippingManifestUpdate" xml:space="preserve">
    <value>Manifest packages were not found. Skipping manifest update...</value>
  </data>
  <data name="SkipSignCheckInvalidOption" xml:space="preserve">
    <value>Unable to bypass signature verification. The specified option conflicts with a global policy.</value>
  </data>
  <data name="SkipSignCheckOptionDescription" xml:space="preserve">
    <value>Skip signature verification of workload packages and installers.</value>
  </data>
  <data name="SkipSymbolsOptionDescription" xml:space="preserve">
    <value>Skip creating symbol files which can be used for profiling the optimized assemblies.</value>
  </data>
  <data name="SlnDefinition" xml:space="preserve">
    <value>Modify Visual Studio solution files.</value>
  </data>
  <data name="SlnxGenerated" xml:space="preserve">
    <value>.slnx file {0} generated.</value>
  </data>
  <data name="SolutionAppFullName" xml:space="preserve">
    <value>.NET modify solution file command</value>
  </data>
  <data name="SolutionArgumentDescription" xml:space="preserve">
    <value>The solution file to operate on. If not specified, the command will search the current directory for one.</value>
  </data>
  <data name="SolutionArgumentName" xml:space="preserve">
    <value>SLN_FILE</value>
  </data>
  <data name="SolutionFolderAndInRootMutuallyExclusive" xml:space="preserve">
    <value>The --solution-folder and --in-root options cannot be used together; use only one of the options.</value>
  </data>
  <data name="SolutionFolderHeader" xml:space="preserve">
    <value>Solution Folder(s)</value>
  </data>
  <data name="SourceArgumentName" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="SourceDescription" xml:space="preserve">
    <value>The package source to search. You can pass multiple `--source` options to search multiple package sources. Example: `--source https://api.nuget.org/v3/index.json`.</value>
  </data>
  <data name="SpecifiedNoWorkloadVersionAndSpecificWorkloadVersion" xml:space="preserve">
    <value>'useWorkloadVersions' specified to not use a workload version. This is not compatible with updating or installing with a specified workload version from the command line, global.json, or from a history record with a workload version.</value>
  </data>
  <data name="SpecifiedWorkloadVersionAndSpecificNonWorkloadVersion" xml:space="preserve">
    <value>'useWorkloadVersions' specified to use a workload version. This option is not compatible with updating from a rollback file or from history using a set of manifests.</value>
  </data>
  <data name="SpecifyManifests" xml:space="preserve">
    <value>Specify at least one manifest with --manifest.</value>
  </data>
  <data name="StackFrameAt" xml:space="preserve">
    <value>at</value>
    <comment>at that is used for a stack frame location in a stack trace, is followed by a class and method name</comment>
  </data>
  <data name="StackFrameIn" xml:space="preserve">
    <value>in</value>
    <comment>in that is used in stack frame it is followed by file name</comment>
  </data>
  <data name="StandardError" xml:space="preserve">
    <value>Error output</value>
  </data>
  <data name="StandardOutput" xml:space="preserve">
    <value>Standard output</value>
  </data>
  <data name="StatusColumnHeader" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="StoreAppDescription" xml:space="preserve">
    <value>Stores the specified assemblies for the .NET Platform. By default, these will be optimized for the target runtime and framework.</value>
  </data>
  <data name="StoreDefinition" xml:space="preserve">
    <value>Store the specified assemblies in the runtime package store.</value>
  </data>
  <data name="StoreFrameworkOptionDescription" xml:space="preserve">
    <value>The target framework to store packages for. The target framework has to be specified in the project file.</value>
  </data>
  <data name="StoreOutputOption" xml:space="preserve">
    <value>OUTPUT_DIR</value>
  </data>
  <data name="StoreOutputOptionDescription" xml:space="preserve">
    <value>The output directory to store the given assemblies in.</value>
  </data>
  <data name="StoreRuntimeOptionDescription" xml:space="preserve">
    <value>The target runtime to store packages for.</value>
  </data>
  <data name="Summary" xml:space="preserve">
    <value>Summary</value>
    <comment>Table lable</comment>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Tags</value>
    <comment>Table lable</comment>
  </data>
  <data name="TempDirOptionDescription" xml:space="preserve">
    <value>Specify a temporary directory for this command to download and extract NuGet packages (must be secure).</value>
  </data>
  <data name="TestAppFullName" xml:space="preserve">
    <value>.NET Test Driver</value>
  </data>
  <data name="TestCmdNoLogo" xml:space="preserve">
    <value>Run test(s), without displaying Microsoft Testplatform banner</value>
  </data>
  <data name="TestCmdOutputDir" xml:space="preserve">
    <value>OUTPUT_DIR</value>
  </data>
  <data name="TestConfigurationOptionDescription" xml:space="preserve">
    <value>The configuration to use for running tests. The default for most projects is 'Debug'.</value>
  </data>
  <data name="TestDefinition" xml:space="preserve">
    <value>Run unit tests using the test runner specified in a .NET project.</value>
  </data>
  <data name="TestDiscoveryExitCode" xml:space="preserve">
    <value>Test discovery completed with non-success exit code: {0} (see: https://aka.ms/testingplatform/exitcodes)</value>
    <comment>0 is whole number, the value of exit code</comment>
  </data>
  <data name="TestDiscoverySummary" xml:space="preserve">
    <value>Discovered {0} tests in {1} assemblies.</value>
    <comment>0 is number of tests, 1 is count of assemblies</comment>
  </data>
  <data name="TestDiscoverySummarySingular" xml:space="preserve">
    <value>Discovered {0} tests.</value>
    <comment>0 is number of tests</comment>
  </data>
  <data name="TestFrameworkOptionDescription" xml:space="preserve">
    <value>The target framework to run tests for. The target framework must also be specified in the project file.</value>
  </data>
  <data name="TestRunExitCode" xml:space="preserve">
    <value>Test run completed with non-success exit code: {0} (see: https://aka.ms/testingplatform/exitcodes)</value>
    <comment>0 is whole number, the value of exit code</comment>
  </data>
  <data name="TestRunSummary" xml:space="preserve">
    <value>Test run summary:</value>
  </data>
  <data name="TestRuntimeOptionDescription" xml:space="preserve">
    <value>The target runtime to test for.</value>
  </data>
  <data name="ToolAlreadyInstalled" xml:space="preserve">
    <value>Tool '{0}' is already installed.</value>
  </data>
  <data name="ToolCommandDescription" xml:space="preserve">
    <value>Install or work with tools that extend the .NET experience.</value>
  </data>
  <data name="ToolCommonNoManifestGuide" xml:space="preserve">
    <value>If you intended to perform the action on a global tool, use the `--global` option for the command.</value>
  </data>
  <data name="ToolDefinition" xml:space="preserve">
    <value>Install or manage tools that extend the .NET experience.</value>
  </data>
  <data name="ToolInstallAddSourceOptionDescription" xml:space="preserve">
    <value>Add an additional NuGet package source to use during installation.</value>
  </data>
  <data name="ToolInstallAddSourceOptionName" xml:space="preserve">
    <value>ADDSOURCE</value>
  </data>
  <data name="ToolInstallationFailed" xml:space="preserve">
    <value>Tool '{0}' failed to install.</value>
  </data>
  <data name="ToolInstallationFailedContactAuthor" xml:space="preserve">
    <value>Tool '{0}' failed to install. Contact the tool author for assistance.</value>
  </data>
  <data name="ToolInstallationRestoreFailed" xml:space="preserve">
    <value>The tool package could not be restored.</value>
  </data>
  <data name="ToolInstallCommandDescription" xml:space="preserve">
    <value>Install global or local tool. Local tools are added to manifest and restored.</value>
  </data>
  <data name="ToolInstallConfigFileOptionDescription" xml:space="preserve">
    <value>The NuGet configuration file to use.</value>
  </data>
  <data name="ToolInstallConfigFileOptionName" xml:space="preserve">
    <value>FILE</value>
  </data>
  <data name="ToolInstallFrameworkOptionDescription" xml:space="preserve">
    <value>The target framework to install the tool for.</value>
  </data>
  <data name="ToolInstallFrameworkOptionName" xml:space="preserve">
    <value>FRAMEWORK</value>
  </data>
  <data name="ToolInstallGlobalOptionDescription" xml:space="preserve">
    <value>Install the tool for the current user.</value>
  </data>
  <data name="ToolInstallInstallationSucceeded" xml:space="preserve">
    <value>You can invoke the tool using the following command: {0}
Tool '{1}' (version '{2}') was successfully installed.</value>
  </data>
  <data name="ToolInstallInvalidNuGetVersionRange" xml:space="preserve">
    <value>Specified version '{0}' is not a valid NuGet version range.</value>
  </data>
  <data name="ToolInstallLocalOptionDescription" xml:space="preserve">
    <value>Install the tool and add to the local tool manifest (default).</value>
  </data>
  <data name="ToolInstallManifestPathOptionDescription" xml:space="preserve">
    <value>Path to the manifest file.</value>
  </data>
  <data name="ToolInstallManifestPathOptionName" xml:space="preserve">
    <value>PATH</value>
  </data>
  <data name="ToolInstallNuGetConfigurationFileDoesNotExist" xml:space="preserve">
    <value>NuGet configuration file '{0}' does not exist.</value>
  </data>
  <data name="ToolInstallPackageIdArgumentDescription" xml:space="preserve">
    <value>The NuGet Package Id of the tool to install.</value>
  </data>
  <data name="ToolInstallPackageIdArgumentName" xml:space="preserve">
    <value>PACKAGE_ID</value>
  </data>
  <data name="ToolInstallSourceOptionDescription" xml:space="preserve">
    <value>Replace all NuGet package sources to use during installation with these.</value>
  </data>
  <data name="ToolInstallSourceOptionName" xml:space="preserve">
    <value>SOURCE</value>
  </data>
  <data name="ToolInstallToolPathOptionDescription" xml:space="preserve">
    <value>The directory where the tool will be installed. The directory will be created if it does not exist.</value>
  </data>
  <data name="ToolInstallToolPathOptionName" xml:space="preserve">
    <value>PATH</value>
  </data>
  <data name="ToolInstallVersionOptionDescription" xml:space="preserve">
    <value>The version of the tool package to install.</value>
  </data>
  <data name="ToolInstallVersionOptionName" xml:space="preserve">
    <value>VERSION</value>
  </data>
  <data name="ToolListCommandDescription" xml:space="preserve">
    <value>List tools installed globally or locally.</value>
  </data>
  <data name="ToolListCommandsColumn" xml:space="preserve">
    <value>Commands</value>
  </data>
  <data name="ToolListFormatOptionDescription" xml:space="preserve">
    <value>The output format for the list of tools.</value>
  </data>
  <data name="ToolListGlobalOptionDescription" xml:space="preserve">
    <value>List tools installed for the current user.</value>
  </data>
  <data name="ToolListInvalidPackageWarning" xml:space="preserve">
    <value>Warning: tool package '{0}' is invalid, contact tool author:
{1}</value>
  </data>
  <data name="ToolListInvalidToolPathOption" xml:space="preserve">
    <value>Tool path '{0}' does not exist.</value>
  </data>
  <data name="ToolListLocalOptionDescription" xml:space="preserve">
    <value>List the tools installed in the local tool manifest.</value>
  </data>
  <data name="ToolListPackageIdArgumentDescription" xml:space="preserve">
    <value>The NuGet Package Id of the tool to list</value>
  </data>
  <data name="ToolListPackageIdArgumentName" xml:space="preserve">
    <value>PACKAGE_ID</value>
  </data>
  <data name="ToolListPackageIdColumn" xml:space="preserve">
    <value>Package Id</value>
  </data>
  <data name="ToolListToolPathOptionDescription" xml:space="preserve">
    <value>The directory containing the tools to list.</value>
  </data>
  <data name="ToolListVersionColumn" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="ToolRestoreCommandDescription" xml:space="preserve">
    <value>Restore tools defined in the local tool manifest.</value>
  </data>
  <data name="ToolRestoreManifestPathOptionDescription" xml:space="preserve">
    <value>Path to the manifest file.</value>
  </data>
  <data name="ToolRunCommandDescription" xml:space="preserve">
    <value>Run a local tool. Note that this command cannot be used to run a global tool. </value>
  </data>
  <data name="ToolSearchCommandDescription" xml:space="preserve">
    <value>Search dotnet tools in nuget.org</value>
  </data>
  <data name="ToolSearchPrereleaseDescription" xml:space="preserve">
    <value>Include pre-release packages.</value>
  </data>
  <data name="ToolSearchSearchTermArgumentName" xml:space="preserve">
    <value>SEARCH_TERM</value>
  </data>
  <data name="ToolSearchSearchTermDescription" xml:space="preserve">
    <value>Search term from package id or package description. Require at least one character.</value>
  </data>
  <data name="ToolSearchSkipArgumentName" xml:space="preserve">
    <value>Skip</value>
  </data>
  <data name="ToolSearchSkipDescription" xml:space="preserve">
    <value>The number of results to skip, for pagination.</value>
  </data>
  <data name="ToolSearchTakeArgumentName" xml:space="preserve">
    <value>Take</value>
  </data>
  <data name="ToolSearchTakeDescription" xml:space="preserve">
    <value>The number of results to return, for pagination.</value>
  </data>
  <data name="ToolUninstallCommandDescription" xml:space="preserve">
    <value>Uninstall a global tool or local tool.</value>
  </data>
  <data name="ToolUninstallGlobalOptionDescription" xml:space="preserve">
    <value>Uninstall the tool from the current user's tools directory.</value>
  </data>
  <data name="ToolUninstallInvalidToolPathOption" xml:space="preserve">
    <value>Tool path '{0}' does not exist.</value>
  </data>
  <data name="ToolUninstallLocalOptionDescription" xml:space="preserve">
    <value>Uninstall the tool and remove it from the local tool manifest.</value>
  </data>
  <data name="ToolUninstallManifestPathOptionDescription" xml:space="preserve">
    <value>Path to the manifest file.</value>
  </data>
  <data name="ToolUninstallToolHasMultipleVersionsInstalled" xml:space="preserve">
    <value>Tool '{0}' has multiple versions installed and cannot be uninstalled.</value>
  </data>
  <data name="ToolUninstallToolNotInstalled" xml:space="preserve">
    <value>A tool with the package Id '{0}' could not be found.

Tools are uninstalled using their package Id which may be different
from the tool name you use when calling the tool. You can find the tool names
and the corresponding package Ids for installed tools using the command
'dotnet tool list'.</value>
  </data>
  <data name="ToolUninstallToolPathOptionDescription" xml:space="preserve">
    <value>The directory containing the tool to uninstall.</value>
  </data>
  <data name="ToolUninstallUninstallSucceeded" xml:space="preserve">
    <value>Tool '{0}' (version '{1}') was successfully uninstalled.</value>
  </data>
  <data name="ToolUpdateCommandDescription" xml:space="preserve">
    <value>Update a global or local tool.</value>
  </data>
  <data name="ToolUpdatePackageIdArgumentDescription" xml:space="preserve">
    <value>The NuGet Package Id of the tool to update.</value>
  </data>
  <data name="ToolUpdatePackageIdArgumentName" xml:space="preserve">
    <value>PACKAGE_ID</value>
  </data>
  <data name="ToolUpdateToolHasMultipleVersionsInstalled" xml:space="preserve">
    <value>Tool '{0}' has multiple versions installed and cannot be updated.</value>
  </data>
  <data name="ToolUpdateUpdateSucceeded" xml:space="preserve">
    <value>Tool '{0}' was successfully updated from version '{1}' to version '{2}'.</value>
  </data>
  <data name="Try" xml:space="preserve">
    <value>try {0}</value>
    <comment>number or tries of the current test assembly when test assembly is being retried. {0} is number that starts at 1</comment>
  </data>
  <data name="UninstallLocalToolSucceeded" xml:space="preserve">
    <value>Tool '{0}' was successfully uninstalled and removed from manifest file {1}.</value>
  </data>
  <data name="UninstallToolCommandInvalidGlobalAndLocalAndToolPath" xml:space="preserve">
    <value>The local option(--local), the global option (--global), the tool path option (--tool-path), can only have one at a time. Specify only one of the options: {0}.</value>
  </data>
  <data name="UnknownRecordsInformationalMessage" xml:space="preserve">
    <value>Rows with Unlogged changes represent changes from actions other than .NET CLI workload commands. Usually this represents an update to the .NET SDK or to Visual Studio.</value>
  </data>
  <data name="UnrecognizedDirective" xml:space="preserve">
    <value>Unrecognized directive '{0}' at {1}.</value>
    <comment>{0} is the directive name like 'package' or 'sdk', {1} is the file path and line number.</comment>
  </data>
  <data name="UpdateAllOptionDescription" xml:space="preserve">
    <value>Update all tools.</value>
  </data>
  <data name="UpdatedWorkloadMode" xml:space="preserve">
    <value>Successfully updated workload install mode to use {0}.</value>
  </data>
  <data name="UpdateFromRollbackSwitchesModeToLooseManifests" xml:space="preserve">
    <value>Updating to a rollback file is not compatible with workload sets. Install and Update will now use loose manifests. To update to a specific workload version, use --version.</value>
  </data>
  <data name="UpdateLocalToolSucceeded" xml:space="preserve">
    <value>Tool '{0}' was successfully updated from version '{1}' to version '{2}' (manifest file {3}).</value>
  </data>
  <data name="UpdateLocalToolToLowerVersion" xml:space="preserve">
    <value>The requested version {0} is lower than existing version {1} (manifest file {2}). Use the --allow-downgrade option to allow this update.</value>
  </data>
  <data name="UpdateLocaToolSucceededVersionNoChange" xml:space="preserve">
    <value>Tool '{0}' is up to date (version '{1}' manifest file {2}) .</value>
  </data>
  <data name="UpdateModeDescription" xml:space="preserve">
    <value>Controls whether updates should look for workload sets or the latest version of each individual manifest.</value>
  </data>
  <data name="UpdateModeDoesNotMatchGlobalJson" xml:space="preserve">
    <value>Specified to update workloads using {0} from the command line, but global.json file at {1} specified to use {2}.</value>
  </data>
  <data name="UpdateSucceededPreVersionNoChange" xml:space="preserve">
    <value>Tool '{0}' was reinstalled with the prerelease version (version '{1}').</value>
  </data>
  <data name="UpdateSucceededStableVersionNoChange" xml:space="preserve">
    <value>Tool '{0}' was reinstalled with the stable version (version '{1}').</value>
  </data>
  <data name="UpdateToLowerVersion" xml:space="preserve">
    <value>The requested version {0} is lower than existing version {1}.</value>
  </data>
  <data name="UpdateToolCommandInvalidAllAndPackageId" xml:space="preserve">
    <value>One must specify either package ID or use the update all option (--all).</value>
  </data>
  <data name="UpdateToolCommandInvalidAllAndVersion" xml:space="preserve">
    <value>The version option (--version) and the update all option (--all) cannot be used together. Specify only one of the options: {0}.</value>
  </data>
  <data name="UpdateToolCommandInvalidGlobalAndLocalAndToolPath" xml:space="preserve">
    <value>The local option (--local), the global option (--global), and the tool path option (--tool-path) cannot be used together. Specify only one of the options: {0}.</value>
  </data>
  <data name="UpdateToolFailed" xml:space="preserve">
    <value>Tool '{0}' failed to update due to the following:</value>
  </data>
  <data name="UsableLaunchProfileCannotBeLocated" xml:space="preserve">
    <value>A usable launch profile could not be located.</value>
  </data>
  <data name="Usage" xml:space="preserve">
    <value>Usage</value>
  </data>
  <data name="UserJwtsDefinition" xml:space="preserve">
    <value>Manage JSON Web Tokens in development.</value>
  </data>
  <data name="UserSecretsDefinition" xml:space="preserve">
    <value>Manage development user secrets.</value>
  </data>
  <data name="UsingCacheForPackInstall" xml:space="preserve">
    <value>Installing package {0} version {1} from offline cache {2}.</value>
  </data>
  <data name="UsingLaunchSettingsFromMessage" xml:space="preserve">
    <value>Using launch settings from {0}...</value>
  </data>
  <data name="ValidationFailedDuplicateVersion" xml:space="preserve">
    <value>Cannot specify --version when the package argument already contains a version.</value>
    <comment>{Locked="--version"}</comment>
  </data>
  <data name="ValueMustBeAnObject" xml:space="preserve">
    <value>The property '{0}' must be an object if it is specified.</value>
  </data>
  <data name="VBCSCompilerOptionDescription" xml:space="preserve">
    <value>Shut down the VB/C# compiler build server.</value>
  </data>
  <data name="Verbosity_OptionDescription" xml:space="preserve">
    <value>Sets the verbosity level. Allowed values are q[uiet], m[inimal], n[ormal], and diag[nostic].</value>
  </data>
  <data name="VerbosityArgumentName" xml:space="preserve">
    <value>Verbosity</value>
  </data>
  <data name="VerbosityDescription" xml:space="preserve">
    <value>Display this amount of details in the output: `normal`, `minimal`, `detailed`. The default is `normal`</value>
  </data>
  <data name="Verified" xml:space="preserve">
    <value>Verified</value>
    <comment>Table lable</comment>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
    <comment>Table lable</comment>
  </data>
  <data name="VersionCheckFailure" xml:space="preserve">
    <value>No version found to check if this is up to date. Please check for updates manually.</value>
  </data>
  <data name="VersionColumnHeader" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="Versions" xml:space="preserve">
    <value>Versions</value>
    <comment>Table lable</comment>
  </data>
  <data name="VsTestDefinition" xml:space="preserve">
    <value>Run Microsoft Test Engine (VSTest) commands.</value>
  </data>
  <data name="VSWorkloadNotRemoved" xml:space="preserve">
    <value>Workload '{0}' was not removed because it is installed and managed by Visual Studio: '{1}'. Please uninstall this workload using the Visual Studio Installer to fully remove it.</value>
  </data>
  <data name="WatchDefinition" xml:space="preserve">
    <value>Start a file watcher that runs a command when files change.</value>
  </data>
  <data name="WorkloadAlreadyInstalled" xml:space="preserve">
    <value>Workload(s) '{0}' are already installed.</value>
  </data>
  <data name="WorkloadCleanCommandDescription" xml:space="preserve">
    <value>Removes workload components that may have been left behind from previous updates and uninstallations.</value>
  </data>
  <data name="WorkloadCommandDescription" xml:space="preserve">
    <value>Install or work with workloads that extend the .NET experience.</value>
  </data>
  <data name="WorkloadConfigCommandDescription" xml:space="preserve">
    <value>Modify or display workload configuration values.
To display a value, specify the corresponding command-line option without providing a value.  For example: "dotnet workload config --update-mode"</value>
  </data>
  <data name="WorkloadDefinition" xml:space="preserve">
    <value>Manage optional workloads.</value>
  </data>
  <data name="WorkloadElevateCommandDescription" xml:space="preserve">
    <value>Start the elevated server process to facilitate MSI based installations.</value>
  </data>
  <data name="WorkloadHistoryCommandDescription" xml:space="preserve">
    <value>Shows a history of workload installation actions.</value>
  </data>
  <data name="WorkloadHistoryRecordInvalidIdValue" xml:space="preserve">
    <value>The ID of a workload history record should be between 1 and the number of workload history records, inclusive.</value>
  </data>
  <data name="WorkloadHistoryWorkloadSetVersion" xml:space="preserve">
    <value>Workload Version</value>
  </data>
  <data name="WorkloadIdArgumentDescription" xml:space="preserve">
    <value>The NuGet package ID of the workload to install.</value>
  </data>
  <data name="WorkloadIdArgumentName" xml:space="preserve">
    <value>WORKLOAD_ID</value>
  </data>
  <data name="WorkloadIdColumn" xml:space="preserve">
    <value>Installed Workload Id</value>
  </data>
  <data name="WorkloadIdColumnName" xml:space="preserve">
    <value>Workload ID</value>
  </data>
  <data name="WorkloadIdStubArgumentDescription" xml:space="preserve">
    <value>The text to search for in the IDs and descriptions of available workloads.</value>
  </data>
  <data name="WorkloadIdStubArgumentName" xml:space="preserve">
    <value>SEARCH_STRING</value>
  </data>
  <data name="WorkloadInfoDescription" xml:space="preserve">
    <value>Display information about installed workloads.</value>
  </data>
  <data name="WorkloadInfoProvider_Message_AddWorkloads" xml:space="preserve">
    <value>Run 'dotnet workload search' to search workloads available to be installed on your SDK.</value>
    <comment>{Locked="dotnet workload search"}</comment>
  </data>
  <data name="WorkloadInstallationFailed" xml:space="preserve">
    <value>Workload installation failed: {0}</value>
  </data>
  <data name="WorkloadInstallCommandDescription" xml:space="preserve">
    <value>Install one or more workloads.</value>
  </data>
  <data name="WorkloadInstallConfigFileOptionDescription" xml:space="preserve">
    <value>The NuGet configuration file to use.</value>
  </data>
  <data name="WorkloadInstallConfigFileOptionName" xml:space="preserve">
    <value>FILE</value>
  </data>
  <data name="WorkloadInstallInstallationSucceeded" xml:space="preserve">
    <value>Successfully installed workload(s) {0}.</value>
  </data>
  <data name="WorkloadInstallRollBackFailedMessage" xml:space="preserve">
    <value>Installation rollback failed: {0}</value>
  </data>
  <data name="WorkloadInstallRollingBackInstall" xml:space="preserve">
    <value>Workload installation failed. Rolling back installed packs...</value>
  </data>
  <data name="WorkloadInstallSourceOptionDescription" xml:space="preserve">
    <value>The NuGet package source to use during the restore. To specify multiple sources, repeat the option.</value>
  </data>
  <data name="WorkloadInstallSourceOptionName" xml:space="preserve">
    <value>SOURCE</value>
  </data>
  <data name="WorkloadInstallTypeColumn" xml:space="preserve">
    <value>Install Type</value>
  </data>
  <data name="WorkloadInstallVersionOptionDescription" xml:space="preserve">
    <value>The version of the SDK.</value>
  </data>
  <data name="WorkloadInstallVersionOptionName" xml:space="preserve">
    <value>VERSION</value>
  </data>
  <data name="WorkloadInstallWorkloadCacheDownloadFailed" xml:space="preserve">
    <value>Download of workload packs to offline cache failed: {0}</value>
  </data>
  <data name="WorkloadInstallWorkloadUpdatesAvailable" xml:space="preserve">
    <value>Workload updates are available. Run `dotnet workload list` for more information.</value>
  </data>
  <data name="WorkloadIntegrityCheck" xml:space="preserve">
    <value>Checking the state of installed workloads...</value>
  </data>
  <data name="WorkloadListCommandDescription" xml:space="preserve">
    <value>List workloads available.</value>
  </data>
  <data name="WorkloadListFooter" xml:space="preserve">
    <value>Use `dotnet workload search` to find additional workloads to install.</value>
    <comment>{Locked="dotnet workload search"}</comment>
  </data>
  <data name="WorkloadListWorkloadSetVersion" xml:space="preserve">
    <value>Workload version: {0}</value>
  </data>
  <data name="WorkloadListWorkloadUpdatesAvailable" xml:space="preserve">
    <value>Updates are available for the following workload(s): {0}. Run `dotnet workload update` to get the latest.</value>
    <comment>{Locked="dotnet workload update"}</comment>
  </data>
  <data name="WorkloadManifestFeatureBandColumn" xml:space="preserve">
    <value>Manifest feature band</value>
  </data>
  <data name="WorkloadManifestIdColumn" xml:space="preserve">
    <value>Workload manifest ID</value>
  </data>
  <data name="WorkloadManifestInstallationConfiguration" xml:space="preserve">
    <value>Configured to use {0} when installing new manifests.</value>
  </data>
  <data name="WorkloadManifestPathColumn" xml:space="preserve">
    <value>Manifest Path</value>
  </data>
  <data name="WorkloadManifestVersionColumn" xml:space="preserve">
    <value>Manifest Version</value>
  </data>
  <data name="WorkloadNotInstalled" xml:space="preserve">
    <value>Couldn't find workload ID(s): {0}</value>
  </data>
  <data name="WorkloadNotRecognized" xml:space="preserve">
    <value>Workload ID {0} is not recognized.</value>
  </data>
  <data name="WorkloadNotSupportedOnPlatform" xml:space="preserve">
    <value>Workload ID {0} isn't supported on this platform.</value>
  </data>
  <data name="WorkloadPackAlreadyInstalledMessage" xml:space="preserve">
    <value>Pack {0} version {1} is already installed.</value>
  </data>
  <data name="WorkloadRepairCommandDescription" xml:space="preserve">
    <value>Repair workload installations.</value>
  </data>
  <data name="WorkloadRepairFailed" xml:space="preserve">
    <value>Workload repair failed: {0}</value>
  </data>
  <data name="WorkloadRestoreCommandDescription" xml:space="preserve">
    <value>Restore workloads required for a project.</value>
  </data>
  <data name="Workloads" xml:space="preserve">
    <value>Workloads</value>
  </data>
  <data name="WorkloadSearchCommandDescription" xml:space="preserve">
    <value>Search for available workloads.</value>
  </data>
  <data name="WorkloadSetFromGlobalJsonInstalled" xml:space="preserve">
    <value>Using workload version {0}, which was specified in the global.json file at {1}.</value>
  </data>
  <data name="WorkloadSetFromGlobalJsonNotInstalled" xml:space="preserve">
    <value>Workload version {0}, which was specified in {1}, was not found. Run "dotnet workload restore" to install this workload version.</value>
    <comment>{Locked="dotnet workload restore"}</comment>
  </data>
  <data name="WorkloadSetVersionOptionDescription" xml:space="preserve">
    <value>A workload version to display or one or more workloads and their versions joined by the '@' character.</value>
  </data>
  <data name="WorkloadSourceColumn" xml:space="preserve">
    <value>Installation Source</value>
  </data>
  <data name="WorkloadUninstallCommandDescription" xml:space="preserve">
    <value>Uninstall one or more workloads.</value>
  </data>
  <data name="WorkloadUninstallFailed" xml:space="preserve">
    <value>Workload uninstallation failed: {0}</value>
  </data>
  <data name="WorkloadUninstallUninstallSucceeded" xml:space="preserve">
    <value>Successfully uninstalled workload(s): {0}</value>
  </data>
  <data name="WorkloadUpdateAdManifestsSucceeded" xml:space="preserve">
    <value>Successfully updated advertising manifests.</value>
  </data>
  <data name="WorkloadUpdateCommandDescription" xml:space="preserve">
    <value>Update all installed workloads.</value>
  </data>
  <data name="WorkloadUpdateFailed" xml:space="preserve">
    <value>Workload update failed: {0}</value>
  </data>
  <data name="WorkloadUpdateRollBackFailedMessage" xml:space="preserve">
    <value>Installation rollback failed: {0}</value>
  </data>
  <data name="WorkloadUpdateRollingBackInstall" xml:space="preserve">
    <value>Workload installation failed. Rolling back installed packs...</value>
  </data>
  <data name="WorkloadUpdateUpdateSucceeded" xml:space="preserve">
    <value>Successfully updated workload(s): {0}.</value>
  </data>
  <data name="WorkloadUpdateWorkloadCacheDownloadFailed" xml:space="preserve">
    <value>Failed to download workload update packages to cache: {0}</value>
  </data>
  <data name="WorkloadVersionArgument" xml:space="preserve">
    <value>WORKLOAD_VERSION</value>
  </data>
  <data name="WorkloadVersionArgumentDescription" xml:space="preserve">
    <value>Output workload manifest versions associated with the provided workload version.</value>
  </data>
  <data name="WorkloadVersionDescription" xml:space="preserve">
    <value>Display the currently installed workload version.</value>
  </data>
  <data name="WorkloadVersionNotInstalledShort" xml:space="preserve">
    <value>(not installed)</value>
  </data>
  <data name="WorkloadVersionRequestedNotFound" xml:space="preserve">
    <value>Workload version {0} not found.</value>
  </data>
  <data name="WorkloadVersionWithSpecifiedManifestNotFound" xml:space="preserve">
    <value>No workload version matching {0} was found.</value>
  </data>
  <data name="WriteCLIRecordForVisualStudioWorkloadMessage" xml:space="preserve">
    <value>Writing install records for Visual Studio workloads: '{0}'</value>
  </data>
  <data name="WritingPackInstallRecordMessage" xml:space="preserve">
    <value>Writing workload pack installation record for {0} version {1}...</value>
  </data>
  <data name="ZeroTestsRan" xml:space="preserve">
    <value>Zero tests ran</value>
  </data>
  <data name="SolutionAddReferencedProjectsOptionDescription" xml:space="preserve">
    <value>Recursively add projects' ReferencedProjects to solution</value>
  </data>
</root>
