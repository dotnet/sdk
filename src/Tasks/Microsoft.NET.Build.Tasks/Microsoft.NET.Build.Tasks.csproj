<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the MIT license. See License.txt in the project root for full license information. -->
<Project>

  <PropertyGroup>
    <Description>The MSBuild targets and properties for building .NET Core projects.</Description>
    <OutputType>Library</OutputType>
    <PackageId>Microsoft.NET.Sdk</PackageId>
    <TargetFrameworks>netcoreapp2.0;net46</TargetFrameworks>
    <TargetFrameworks Condition="'$(OS)' != 'Windows_NT'">netcoreapp2.0</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <EnableDefaultItems>false</EnableDefaultItems>
    <GenerateDependencyFile>false</GenerateDependencyFile>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <OutDirName>Sdks\$(PackageId)\tools</OutDirName>
    <NoPackageAnalysis>true</NoPackageAnalysis>
  </PropertyGroup>

  <Import Project="Sdk.props" Sdk="RoslynTools.RepoToolset" />

  <PropertyGroup>
    <!-- MSBuild Task DLLs need to be versioned with every build -->
    <AssemblyVersion>$(FileVersion)</AssemblyVersion>
  </PropertyGroup>

  <PropertyGroup>
    <IsPackable>true</IsPackable>
    <IncludeSymbols>true</IncludeSymbols>
    <PackageLayoutOutputPath>$(ArtifactsBinDir)Sdks\$(PackageId)\</PackageLayoutOutputPath>
  </PropertyGroup>

  <ItemDefinitionGroup>
    <PackageReference>
      <PrivateAssets>All</PrivateAssets>
      <Publish>true</Publish>
    </PackageReference>
  </ItemDefinitionGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Build.Framework" Version="$(MicrosoftBuildFrameworkVersion)" ExcludeAssets="Runtime" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="$(MicrosoftBuildUtilitiesCoreVersion)" ExcludeAssets="Runtime" />
    <PackageReference Include="Microsoft.Extensions.DependencyModel" Version="$(MicrosoftExtensionsDependencyModelVersion)" />
    <PackageReference Include="NuGet.ProjectModel" Version="$(NuGetProjectModelVersion)" />
    <PackageReference Include="NuGet.Build.Tasks.Pack" Version="$(NuGetBuildTasksPackVersion)" ExcludeAssets="All" />
  </ItemGroup>

  <!-- These are loaded from the CLI's copy on .NET Core, we don't need to duplicate them on disk -->
  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp2.0'">
    <PackageReference Update="Microsoft.Extensions.DependencyModel" ExcludeAssets="Runtime" />
    <PackageReference Update="NuGet.ProjectModel" ExcludeAssets="Runtime" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="**\*.cs" />
    <Compile Include="..\Common\**\*.cs" LinkBase="Common" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="..\Common\Resources\Strings.resx" LinkBase="Resources" GenerateSource="True" Namespace="Microsoft.NET.Build.Tasks" />
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="Microsoft.NET.Build.Tasks.UnitTests" />
    <InternalsVisibleTo Include="Microsoft.NET.Build.Tests" />
    <InternalsVisibleTo Include="Microsoft.NET.ToolPack.Tests" />
  </ItemGroup>

  <ItemGroup>
    <None Include="targets\**\*" PackagePath="targets\" />
    <None Include="sdk\**\*" PackagePath="Sdk\" />
    <None Include="..\Common\targets\**\*" PackagePath="targets\" LinkBase="targets" />
    <None Include="..\Common\Resources\xlf\**\*" LinkBase="Resources\xlf" />
  </ItemGroup>

  <Target Name="PrepareAdditionalFilesToLayout" BeforeTargets="AssignTargetPaths">
    <PropertyGroup>
      <_NugetBuildTasksPackPath>$(NuGetPackageRoot)nuget.build.tasks.pack\$(NuGetBuildTasksPackVersion)</_NugetBuildTasksPackPath>
      <_Stage0SdksFolder>$(DOTNET_INSTALL_DIR)\sdk\$(NETCoreSdkVersion)\Sdks</_Stage0SdksFolder>
    </PropertyGroup>
    <ItemGroup>
      <LayoutFile Include="@(None)" Condition="'%(None.PackagePath)' != ''">
        <TargetPath>%(None.PackagePath)\%(None.RecursiveDir)%(None.Filename)%(None.Extension)</TargetPath>
      </LayoutFile>
      <PackFile Include="$(_NugetBuildTasksPackPath)\**\*" Exclude="$(_NugetBuildTasksPackPath)\*" />
      <LayoutFile Include="@(PackFile)">
        <TargetPath>..\NuGet.Build.Tasks.Pack\%(PackFile.RecursiveDir)%(PackFile.Filename)%(PackFile.Extension)</TargetPath>
      </LayoutFile>

      <!-- Include some of the Sdks from the Stage 0 CLI for performance tests-->
      <Stage0SdkFile Include="$(_Stage0SdksFolder)\FSharp.NET.Sdk\**" SdkName="FSharp.NET.Sdk" />
      <Stage0SdkFile Include="$(_Stage0SdksFolder)\Microsoft.NET.Sdk.Publish\**" SdkName="Microsoft.NET.Sdk.Publish" />
      <Stage0SdkFile Include="$(_Stage0SdksFolder)\Microsoft.NET.Sdk.Web\**" SdkName="Microsoft.NET.Sdk.Web" />
      <Stage0SdkFile Include="$(_Stage0SdksFolder)\Microsoft.NET.Sdk.Web.ProjectSystem\**" SdkName="Microsoft.NET.Sdk.Web.ProjectSystem" />
      <Stage0SdkFile Include="$(_Stage0SdksFolder)\Microsoft.NET.Sdk.Razor\**" SdkName="Microsoft.NET.Sdk.Razor" />
      <LayoutFile Include="@(Stage0SdkFile)">
        <TargetPath>..\%(Stage0SdkFile.SdkName)\%(Stage0SdkFile.RecursiveDir)%(Stage0SdkFile.Filename)%(Stage0SdkFile.Extension)</TargetPath>
      </LayoutFile>

    </ItemGroup>
  </Target>

  <Target Name="CopyAdditionalFilesToLayout" Condition="'$(TargetFramework)' == ''" DependsOnTargets="PrepareAdditionalFilesToLayout" AfterTargets="Build" Inputs="@(LayoutFile)" Outputs="@(LayoutFile->'$(PackageLayoutOutputPath)%(TargetPath)')">
    <Copy SourceFiles="@(LayoutFile)" DestinationFiles="@(LayoutFile->'$(PackageLayoutOutputPath)%(TargetPath)')">
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
  </Target>

  <Target Name="PackLayout" DependsOnTargets="CopyAdditionalFilesToLayout" BeforeTargets="$(GenerateNuspecDependsOn)">
    <ItemGroup>
      <Content Include="$(PackageLayoutOutputPath)**\*" PackagePath="\" />
    </ItemGroup>
  </Target>

  <!-- Remove files from copy local that would not be published as they are provided by the platform package -->
  <!-- https://github.com/dotnet/sdk/issues/933 tracks a first class feature for this -->
  <Target Name="FilterCopyLocal" DependsOnTargets="GetFrameworkPaths;GetReferenceAssemblyPaths;RunResolvePublishAssemblies" BeforeTargets="ResolveLockFileCopyLocalProjectDeps">
    <ItemGroup>
      <_CopyLocalButNotPublished Include="@(AllCopyLocalItems)" Exclude="@(ResolvedAssembliesToPublish)" />
      <AllCopyLocalItems Remove="@(_CopyLocalButNotPublished)" />
    </ItemGroup>
  </Target>

  <Import Project="Sdk.targets" Sdk="RoslynTools.RepoToolset" />

</Project>
