<!--
***********************************************************************************************
Microsoft.NET.Sdk.Analyzers.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your projects from the command-line or the IDE.

Copyright (c) .NET Foundation. All rights reserved. 
***********************************************************************************************
-->
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>

    <!-- Analysis level is a single property that can be used to control both the compiler warning waves
         and enable .NET analyzers. Valid values are 'none', 'latest', 'preview', or a version number  -->

    <!-- Automatically set AnalysisLevel if not specified -->
    <AnalysisLevel Condition="'$(AnalysisLevel)' == '' And
                              '$(TargetFrameworkIdentifier)' == '.NETCoreApp' And
                              $([MSBuild]::VersionGreaterThanOrEquals($(_TargetFrameworkVersionWithoutV), '5.0'))">latest</AnalysisLevel>

    <!-- EffectiveAnalysisLevel is used to differentiate from user specified strings (such as 'none')
         and an implied numerical option (such as '4')-->
    <EffectiveAnalysisLevel Condition="'$(AnalysisLevel)' == 'none'">4.0</EffectiveAnalysisLevel>
    <EffectiveAnalysisLevel Condition="'$(AnalysisLevel)' == 'latest'">5.0</EffectiveAnalysisLevel>
    <EffectiveAnalysisLevel Condition="'$(AnalysisLevel)' == 'preview'">6.0</EffectiveAnalysisLevel>

    <!-- Set EffectiveAnalysisLevel to the value of AnalysisLevel if it is a version number -->
    <EffectiveAnalysisLevel Condition="'$(EffectiveAnalysisLevel)' == '' And 
                                       '$(AnalysisLevel)' != ''">$(AnalysisLevel)</EffectiveAnalysisLevel>

    <!-- EnableNETAnalyzers Allows analyzers to be disabled in bulk via msbuild if the user wants to -->
    <EnableNETAnalyzers Condition="'$(EnableNETAnalyzers)' == '' And 
                                   '$(EffectiveAnalysisLevel)' != '' And
                                    $([MSBuild]::VersionGreaterThanOrEquals($(EffectiveAnalysisLevel), '5.0'))">true</EnableNETAnalyzers>
    <EnableNETAnalyzers Condition="'$(EnableNETAnalyzers)' == ''">false</EnableNETAnalyzers>

    <!-- EnforceCodeStyleInBuild Allows code style analyzers to be disabled in bulk via msbuild if the user wants to -->
    <EnforceCodeStyleInBuild Condition="'$(EnforceCodeStyleInBuild)' == ''">false</EnforceCodeStyleInBuild>
    
    <!-- Compiler warning level, defaulted to 4. We promote it to 5 if the user has set analysis level to 5 or higher
         NOTE: at this time only the C# compiler supports warning waves -->
    <WarningLevel Condition="'$(Language)' == 'C#' And
                             '$(WarningLevel)' == '' And
                             '$(EffectiveAnalysisLevel)' != '' And
                             $([MSBuild]::VersionGreaterThanOrEquals($(EffectiveAnalysisLevel), '5.0'))">5</WarningLevel>
    <!-- If the user specified 'preview' we want to pick a very high warning level to opt into the highest possible warning wave -->
    <WarningLevel Condition="'$(Language)' == 'C#' And
                             '$(WarningLevel)' == '' And
                             '$(AnalysisLevel)' == 'preview'">9999</WarningLevel>

  </PropertyGroup>
  <!-- Unconditionally import 'Microsoft.CodeAnalysis.NetAnalyzers.props' for all C# and VB projects for supporting https://github.com/dotnet/roslyn-analyzers/issues/3977 -->
  <Import Project="$(MSBuildThisFileDirectory)..\analyzers\build\Microsoft.CodeAnalysis.NetAnalyzers.props"
          Condition="'$(Language)' == 'C#' Or '$(Language)' == 'VB'" />
  <Import Project="$(MSBuildThisFileDirectory)..\analyzers\build\Microsoft.CodeAnalysis.NetAnalyzers.targets"
          Condition="$(EnableNETAnalyzers)" />

  <!-- .NET Analyzers -->
  <ItemGroup Condition="$(EnableNETAnalyzers)">
    <Analyzer
      Condition="'$(Language)' == 'VB'"
      Include="$(MSBuildThisFileDirectory)..\analyzers\Microsoft.CodeAnalysis.VisualBasic.NetAnalyzers.dll"
      IsImplicitlyDefined="true" />
    <Analyzer
      Condition="'$(Language)' == 'C#'"
      Include="$(MSBuildThisFileDirectory)..\analyzers\Microsoft.CodeAnalysis.CSharp.NetAnalyzers.dll"
      IsImplicitlyDefined="true" />
    <Analyzer
      Include="$(MSBuildThisFileDirectory)..\analyzers\Microsoft.CodeAnalysis.NetAnalyzers.dll"
      IsImplicitlyDefined="true" />
  </ItemGroup>

  <!-- C# Code Style Analyzers -->
  <ItemGroup Condition="$(EnforceCodeStyleInBuild) And '$(Language)' == 'C#'">
    <Analyzer
      Include="$(MSBuildThisFileDirectory)..\codestyle\cs\Microsoft.CodeAnalysis.CodeStyle.dll"
      IsImplicitlyDefined="true" />
    <Analyzer
      Include="$(MSBuildThisFileDirectory)..\codestyle\cs\Microsoft.CodeAnalysis.CodeStyle.Fixes.dll"
      IsImplicitlyDefined="true" />
    <Analyzer
      Include="$(MSBuildThisFileDirectory)..\codestyle\cs\Microsoft.CodeAnalysis.CSharp.CodeStyle.dll"
      IsImplicitlyDefined="true" />
    <Analyzer
      Include="$(MSBuildThisFileDirectory)..\codestyle\cs\Microsoft.CodeAnalysis.CSharp.CodeStyle.Fixes.dll"
      IsImplicitlyDefined="true" />
  </ItemGroup>

  <!-- Visual Basic Code Style Analyzers -->
  <ItemGroup Condition="$(EnforceCodeStyleInBuild) And '$(Language)' == 'VB'">
    <Analyzer
      Include="$(MSBuildThisFileDirectory)..\codestyle\vb\Microsoft.CodeAnalysis.CodeStyle.dll"
      IsImplicitlyDefined="true" />
    <Analyzer
      Include="$(MSBuildThisFileDirectory)..\codestyle\vb\Microsoft.CodeAnalysis.CodeStyle.Fixes.dll"
      IsImplicitlyDefined="true" />
    <Analyzer
      Include="$(MSBuildThisFileDirectory)..\codestyle\vb\Microsoft.CodeAnalysis.VisualBasic.CodeStyle.dll"
      IsImplicitlyDefined="true" />
    <Analyzer
      Include="$(MSBuildThisFileDirectory)..\codestyle\vb\Microsoft.CodeAnalysis.VisualBasic.CodeStyle.Fixes.dll"
      IsImplicitlyDefined="true" />
  </ItemGroup>
</Project>
