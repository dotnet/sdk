<!--
***********************************************************************************************
Microsoft.NET.PackTool.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your projects from the command-line or the IDE.

Copyright (c) .NET Foundation. All rights reserved.
***********************************************************************************************
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask TaskName="Microsoft.NET.Build.Tasks.GenerateToolsSettingsFile"
            AssemblyFile="$(MicrosoftNETBuildTasksAssembly)" />
  <UsingTask TaskName="Microsoft.NET.Build.Tasks.GenerateShims"
            AssemblyFile="$(MicrosoftNETBuildTasksAssembly)" />
  <UsingTask TaskName="Microsoft.NET.Build.Tasks.PublishRelativePathToPackPackagePath"
            AssemblyFile="$(MicrosoftNETBuildTasksAssembly)" />
  <UsingTask TaskName="Microsoft.NET.Build.Tasks.GetEmbeddedApphostPaths"
      AssemblyFile="$(MicrosoftNETBuildTasksAssembly)" />

  <!--
    Mark all dependecy as private assets. But keep them as Publish. So dependency DLLs will be included in NuGet package, while
    there is no dependency in nuspec. And add Microsoft.NETCore.Platforms, which is used to select correct RID assets.
    -->
  <PropertyGroup>
    <_ToolsSettingsFilePath>$(BaseIntermediateOutputPath)DotnetToolSettings.xml</_ToolsSettingsFilePath>
    <SuppressDependenciesWhenPacking Condition=" '$(PackAsTool)' == 'true' ">true</SuppressDependenciesWhenPacking>
  </PropertyGroup>

  <Target Name="PackTool" DependsOnTargets="GenerateToolsSettingsFileFromBuildProperty;Publish;_PackToolValidation" Condition=" '$(PackAsTool)' == 'true' ">
    <ItemGroup>
      <_GeneratedFiles Include="$(PublishDepsFilePath)"/>
      <_GeneratedFiles Include="$(PublishRuntimeConfigFilePath)"/>
      <_GeneratedFiles Include="$(_ToolsSettingsFilePath)"/>
    </ItemGroup>

    <PublishRelativePathToPackPackagePath
      ResolvedFileToPublish="@(ResolvedFileToPublish)"
      PublishDir="$(PublishDir)"
      TargetFramework="$(TargetFramework)">

      <Output TaskParameter="ResolvedFileToPublishWithPackagePath" ItemName="_ResolvedFileToPublishWithPackagePath" />
    </PublishRelativePathToPackPackagePath>

    <ItemGroup>
      <TfmSpecificPackageFile Include="@(_GeneratedFiles)">
        <PackagePath>tools/$(TargetFramework)/any/%(_GeneratedFiles.RecursiveDir)%(_GeneratedFiles.Filename)%(_GeneratedFiles.Extension)</PackagePath>
      </TfmSpecificPackageFile>

      <TfmSpecificPackageFile Include="@(_ResolvedFileToPublishWithPackagePath)">
        <PackagePath>%(_ResolvedFileToPublishWithPackagePath.PackagePath)</PackagePath>
      </TfmSpecificPackageFile>
    </ItemGroup>
  </Target>

  <PropertyGroup>
    <ToolCommandName Condition=" '$(ToolCommandName)' == '' ">$(TargetName)</ToolCommandName>
    <ToolEntryPoint Condition=" '$(ToolEntryPoint)' == '' ">$(TargetFileName)</ToolEntryPoint>
  </PropertyGroup>

  <Target Name="GenerateToolsSettingsFileFromBuildProperty" >
    <GenerateToolsSettingsFile
       EntryPointRelativePath="$(ToolEntryPoint)"
       CommandName="$(ToolCommandName)"
       ToolsSettingsFilePath="$(_ToolsSettingsFilePath)" />
  </Target>

  <Target Name="_PackToolValidation" Condition=" '$(PackAsTool)' == 'true' ">
    <NETSdkError Condition=" '$(SelfContained)' == 'true' "
             ResourceName="PackAsToolCannotSupportSelfContained" />

    <NETSdkError Condition=" '$(TargetFrameworkIdentifier)' != '.NETCoreApp' "
                 ResourceName="DotnetToolOnlySupportNetcoreapp" />

    <NETSdkError Condition=" '$(_TargetFrameworkVersionWithoutV)' &lt; '2.1' "
                 ResourceName="DotnetToolDoesNotSupportTFMLowerThanNetcoreapp21" />
  </Target>

  <!--
    ============================================================
                                        GenerateShimsAssets

    Generate packaged shims for signing when PackAsToolShimRuntimeIdentifiers is set
    ============================================================
    -->

  <PropertyGroup>
    <_ShimInputCacheFile Condition="'$(_ShimInputCacheFile)' == ''">$(IntermediateOutputPath)$(MSBuildProjectName).shiminput.cache</_ShimInputCacheFile>
    <_ShimInputCacheFile>$([MSBuild]::NormalizePath($(MSBuildProjectDirectory), $(_ShimInputCacheFile)))</_ShimInputCacheFile>
  </PropertyGroup>

  <ItemGroup>
    <_GenerateShimsAssetsInput Include="@(_ApphostsForShimRuntimeIdentifiers)"/>
  </ItemGroup>

  <Target Name="GenerateShimsAssets"
          BeforeTargets="CopyFilesToOutputDirectory"
          DependsOnTargets="ResolvePackageAssets;_PackToolValidation;_GenerateShimInputCache;_ComputeExpectedEmbeddedApphostPaths"
          Condition="'$(PackAsTool)' == 'true'"
          Inputs="@(_GenerateShimsAssetsInput)"
          Outputs="@(_EmbeddedApphostPaths)"
          >

    <PropertyGroup>
      <PackagedShimOutputRootDirectory Condition=" '$(PackagedShimOutputRootDirectory)' == '' ">$(OutDir)</PackagedShimOutputRootDirectory>
    </PropertyGroup>

    <GenerateShims
      ApphostsForShimRuntimeIdentifiers="@(_ApphostsForShimRuntimeIdentifiers)"
      PackagedShimOutputDirectory="$(PackagedShimOutputRootDirectory)/shims/$(TargetFramework)"
      PackageId="$(PackageId)"
      PackageVersion="$(Version)"
      ShimRuntimeIdentifiers="@(_PackAsToolShimRuntimeIdentifiers)"
      TargetFrameworkMoniker="$(NuGetTargetMoniker)"
      ToolCommandName="$(ToolCommandName)"
      ToolEntryPoint="$(ToolEntryPoint)"
      >

      <Output TaskParameter="EmbeddedApphostPaths" ItemName="_EmbeddedApphostPaths" />
    </GenerateShims>

    <ItemGroup>
      <!-- Do this in an ItemGroup instead of as an output parameter so that it still gets added to the item set
           during incremental builds when the task is skipped -->
      <FileWrites Include="@(_EmbeddedApphostPaths)" Condition="Exists('@(_EmbeddedApphostPaths)')"/>
    </ItemGroup>
  </Target>

  <Target Name="_ComputeExpectedEmbeddedApphostPaths">
    <ItemGroup>
      <_PackAsToolShimRuntimeIdentifiers Include="$(PackAsToolShimRuntimeIdentifiers)"/>
    </ItemGroup>

    <GetEmbeddedApphostPaths
      PackagedShimOutputDirectory="$(OutDir)/shims/$(TargetFramework)"
      ShimRuntimeIdentifiers="@(_PackAsToolShimRuntimeIdentifiers)"
      ToolCommandName="$(ToolCommandName)"
      >

      <Output TaskParameter="EmbeddedApphostPaths" ItemName="_EmbeddedApphostPaths" />
    </GetEmbeddedApphostPaths>
  </Target>

  <!--To achieve incremental build with property change. When any property changes, WriteOnlyWhenDifferent will be triggered to write cache file.
  And the cache file's timestamp will be later, and it then triggers the incremental build.-->
  <Target Name="_GenerateShimInputCache" DependsOnTargets="ResolveAssemblyReferences">
    <ItemGroup>
      <_GenerateShimsAssetsInput Include="$(_ShimInputCacheFile)" />
      <_GenerateShimsAssetsInputCacheToHash Include="$(PackageId)"/>
      <_GenerateShimsAssetsInputCacheToHash Include="$(Version)"/>
      <_GenerateShimsAssetsInputCacheToHash Include="$(NuGetTargetMoniker)"/>
      <_GenerateShimsAssetsInputCacheToHash Include="$(ToolCommandName)"/>
      <_GenerateShimsAssetsInputCacheToHash Include="$(ToolEntryPoint)"/>
    </ItemGroup>

    <Hash ItemsToHash="@(_GenerateShimsAssetsInputCacheToHash)">
      <Output TaskParameter="HashResult" PropertyName="_GenerateShimsAssetsInputCacheHash" />
    </Hash>

    <WriteLinesToFile Lines="$(_GenerateShimsAssetsInputCacheHash)" File="$(_ShimInputCacheFile)" Overwrite="True" WriteOnlyWhenDifferent="True" />

    <ItemGroup>
      <FileWrites Include="$(_ShimInputCacheFile)" Condition="Exists('$(_ShimInputCacheFile)')" />
    </ItemGroup>
  </Target>

</Project>
