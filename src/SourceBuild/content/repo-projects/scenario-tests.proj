<Project Sdk="Microsoft.Build.NoTargets" TreatAsLocalProperty="CleanWhileBuilding">

  <PropertyGroup>
    <!-- The scenario-tests repo shouldn't be cleaned after building as we run tests from it. -->
    <CleanWhileBuilding>false</CleanWhileBuilding>

    <ScenarioTestsResultsDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsTestResultsDir)', 'scenario-tests'))</ScenarioTestsResultsDir>
  </PropertyGroup>

  <ItemGroup>
    <RepositoryReference Include="arcade" />
    <RepositoryReference Include="command-line-api" />
  </ItemGroup>

  <ItemGroup Condition="'$(DotNetBuildSourceOnly)' == 'true'">
    <RepositoryReference Include="source-build-externals" />
    <RepositoryReference Include="source-build-reference-packages" />
  </ItemGroup>

  <ItemGroup Condition="'$(DotNetBuildSourceOnly)' != 'true'">
    <!-- Depends on NuGet packages from the sdk repo and transitive repositories. -->
    <RepositoryReference Include="sdk" />
  </ItemGroup>

  <Target Name="PrepareScenarioTestsInputs"
          DependsOnTargets="DetermineSourceBuiltSdkVersion"
          BeforeTargets="RepoTest">
    <PropertyGroup>
      <_CurrentDateTime>$([System.DateTime]::Now.ToString("yyyy-MM-dd_HH_mm_ss"))</_CurrentDateTime>
      <_TestXmlOutputPath>$(ScenarioTestsResultsDir)$(_CurrentDateTime).xml</_TestXmlOutputPath>
      <_ScenarioTestsAdditionalArgs>--xml $(_TestXmlOutputPath) --target-rid $(TargetRid) --no-cleanup --no-traits Category=MultiTFM</_ScenarioTestsAdditionalArgs>

      <!-- It's necessary to explicitly define the path to the dotnet tool to prevent Arcade from attempting to derive it. Otherwise, it will run the dotnet
           install script to get a new one. We must use the locally built SDK instead in order to support non-portable RIDs for source build. -->
      <_DotNetTool>$(DotNetSdkExtractDir)$([System.IO.Path]::GetFileName('$(DotNetTool)'))</_DotNetTool>
    </PropertyGroup>

    <MakeDir Directories="$(ScenarioTestsResultsDir)" />

    <ItemGroup>
      <TestEnvironmentVariable Include="
        DotNetRoot=$(DotNetSdkExtractDir);
        TestSdkVersion=$(SourceBuiltSdkVersion);
        AdditionalTestArgs=$(_ScenarioTestsAdditionalArgs);
        DotNetTool=$(_DotNetTool);
        _InitializeDotNetCli=$(DotNetSdkExtractDir.TrimEnd('/\'))" />
    </ItemGroup>
  </Target>

  <Target Name="SetAzureDevOpsVariableForScenarioTests"
          Condition="'$(ContinuousIntegrationBuild)' == 'true'"
          BeforeTargets="Test">
    <Message Importance="High" Text="##vso[task.setvariable variable=hasScenarioTestResults]true" />
  </Target>

</Project>
