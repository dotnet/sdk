<Project Sdk="Microsoft.Build.NoTargets" TreatAsLocalProperty="CleanWhileBuilding">

  <PropertyGroup>
    <!-- The scenario-tests repo shouldn't be cleaned after building as we run tests from it. -->
    <CleanWhileBuilding>false</CleanWhileBuilding>

    <ScenarioTestsResultsDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsTestResultsDir)', 'scenario-tests'))</ScenarioTestsResultsDir>
    <TestXmlOutputPath>$(ScenarioTestsResultsDir)$([System.DateTime]::Now.ToString("yyyy-MM-dd_HH_mm_ss")).xml</TestXmlOutputPath>

    <TestArgs>$(TestArgs) /p:AdditionalTestArgs="--xml $(TestXmlOutputPath) --target-rid $(TargetRid) --portable-rid $(PortableRid) --no-cleanup --no-traits Category=MultiTFM"</TestArgs>
    <TestArgs>$(TestArgs) /p:TestBinlogDir="$(ArtifactsLogRepoDir.TrimEnd('\'))"</TestArgs>
    <TestArgs>$(TestArgs) /p:UseFxVersionOverride=true</TestArgs>

    <TestDependsOn>PrepareScenarioTestsInputs;$(TestDependsOn)</TestDependsOn>
  </PropertyGroup>

  <ItemGroup>
    <RepositoryReference Include="arcade" />
    <RepositoryReference Include="command-line-api" />
  </ItemGroup>

  <ItemGroup Condition="'$(DotNetBuildSourceOnly)' == 'true'">
    <RepositoryReference Include="source-build-externals" />
    <RepositoryReference Include="source-build-reference-packages" />
  </ItemGroup>

  <ItemGroup Condition="'$(DotNetBuildSourceOnly)' != 'true'">
    <!-- Depends on NuGet packages from the sdk repo and transitive repositories. -->
    <RepositoryReference Include="sdk" />
  </ItemGroup>

  <Target Name="PrepareScenarioTestsInputs" DependsOnTargets="DetermineSourceBuiltSdkVersion">
    <PropertyGroup>
      <!-- When testing scenario-tests, use the live produced SDK. -->
      <RepoDotNetRoot>$(DotNetSdkExtractDir)</RepoDotNetRoot>
      <RepoNETCoreSdkVersion>$(SourceBuiltSdkVersion)</RepoNETCoreSdkVersion>

      <!-- Don't use the updated NuGet.config file that includes the live package feeds when testing source-only as in that configuration
           the Microsoft built packages should be used. -->
      <UseIntermediateNuGetConfigFile Condition="'$(DotNetBuildSourceOnly)' == 'true'">false</UseIntermediateNuGetConfigFile>
    </PropertyGroup>

    <MakeDir Directories="$(ScenarioTestsResultsDir)" />
  </Target>

  <Target Name="SetAzureDevOpsVariableForScenarioTests"
          Condition="'$(ContinuousIntegrationBuild)' == 'true'"
          BeforeTargets="Test">
    <Message Importance="High" Text="##vso[task.setvariable variable=hasScenarioTestResults]true" />
  </Target>

</Project>
