<Project Sdk="Microsoft.Build.NoTargets" TreatAsLocalProperty="CleanWhileBuilding">

  <PropertyGroup>
    <!-- The scenario-tests repo shouldn't be cleaned after building as we run tests from it. -->
    <CleanWhileBuilding>false</CleanWhileBuilding>

    <ScenarioTestsArtifactsDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsDir)', 'scenario-tests'))</ScenarioTestsArtifactsDir>
    <ScenarioTestsResultsDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsTestResultsDir)', 'scenario-tests'))</ScenarioTestsResultsDir>
    <NuGetConfigInputForScenarioTests>$([MSBuild]::NormalizePath('$(SrcDir)', 'sdk', 'NuGet.config'))</NuGetConfigInputForScenarioTests>
    <NuGetConfigOutputForScenarioTests>$(ScenarioTestsArtifactsDir)NuGet.config</NuGetConfigOutputForScenarioTests>
  </PropertyGroup>

  <ItemGroup>
    <RepositoryReference Include="arcade" />
    <RepositoryReference Include="command-line-api" />
  </ItemGroup>

  <ItemGroup Condition="'$(DotNetBuildSourceOnly)' == 'true'">
    <RepositoryReference Include="source-build-externals" />
    <RepositoryReference Include="source-build-reference-packages" />
  </ItemGroup>

  <Target Name="SetupNuGetConfig"
          Inputs="$(NuGetConfigInputForScenarioTests)"
          Outputs="$(NuGetConfigOutputForScenarioTests)">
    <Copy SourceFiles="$(NuGetConfigInputForScenarioTests)"
          DestinationFiles="$(NuGetConfigOutputForScenarioTests)" />
  </Target>

  <Target Name="PrepareScenarioTestsInputs"
          DependsOnTargets="SetupNuGetConfig;DetermineSourceBuiltSdkVersion"
          BeforeTargets="Test">
    <PropertyGroup>
      <_CurrentDateTime>$([System.DateTime]::Now.ToString("yyyy-MM-dd_HH_mm_ss"))</_CurrentDateTime>
      <_TestXmlOutputPath>$(ScenarioTestsResultsDir)$(_CurrentDateTime).xml</_TestXmlOutputPath>
      <_ScenarioTestsAdditionalArgs>--xml $(_TestXmlOutputPath) --target-rid $(TargetRid) --no-cleanup --no-traits Category=MultiTFM</_ScenarioTestsAdditionalArgs>

      <!-- Define the test root as a sub-directory of the scenario test artifacts directory. It needs to be a sub-directory because the scenario test execution
           will clean that directory. Since we need the NuGet.config file that we copied in to be preserved, that's stored in the directory above the test root. -->
      <_TestRoot>$(ScenarioTestsArtifactsDir)artifacts/</_TestRoot>

      <!-- It's necessary to explicitly define the path to the dotnet tool to prevent Arcade from attempting to derive it. Otherwise, it will run the dotnet
           install script to get a new one. We must use the locally built SDK instead in order to support non-portable RIDs for source build. -->
      <_DotNetTool>$(DotNetSdkExtractDir)$([System.IO.Path]::GetFileName('$(DotNetTool)'))</_DotNetTool>
    </PropertyGroup>

    <MakeDir Directories="$(ScenarioTestsResultsDir)" />

    <ItemGroup>
      <TestEnvironmentVariable Include="
        TestRoot=$(_TestRoot);
        DotNetRoot=$(DotNetSdkExtractDir);
        TestSdkVersion=$(SourceBuiltSdkVersion);
        AdditionalTestArgs=$(_ScenarioTestsAdditionalArgs);
        DotNetTool=$(_DotNetTool);
        _InitializeDotNetCli=$(DotNetSdkExtractDir)" />
    </ItemGroup>
  </Target>

</Project>
