<Project Sdk="Microsoft.Build.NoTargets">
  <PropertyGroup>
    <!-- The dotnet "repo" project just uses Arcade to drive the build. -->
    <BuildScript>$(ProjectDirectory)eng\common\build$(ShellExtension)</BuildScript>
    <UseRepoArtifactsOutputPaths>false</UseRepoArtifactsOutputPaths>

    <BuildArgs Condition="'$(ArtifactsStagingDir)' != ''">$(BuildArgs) /p:ArtifactsStagingDir="$(ArtifactsStagingDir)"</BuildArgs>
    <BuildArgs>$(BuildArgs) /p:VerticalArtifactsDir="$(ArtifactsDir.TrimEnd('/\'))"</BuildArgs>
  </PropertyGroup>

  <!-- This project file serves a couple of purpose.
       - We conditionally include repos based on what works on different platforms/configurations.
       - We need an "empty" build after the last real repo for prebuilt detection to work - this is that file.
       - If we have a repo that is not in sdk's dependency tree, we can still build it by including it here.  -->

  <ItemGroup>
    <RepositoryReference Condition="'$(ShortStack)' != 'true'" Include="sdk" />
    <RepositoryReference Condition="'$(ShortStack)' == 'true'" Include="runtime" />
  </ItemGroup>

  <ItemGroup Condition="'$(DotNetBuildPass)' == '2' and '$(TargetOS)' == 'windows' and '$(TargetArchitecture)' == 'x64'">
    <!-- Building Windows Bundle Installers-->
    <RepositoryReference Remove="@(RepositoryReference)" />
    <RepositoryReference Include="sdk" DotNetBuildPass="2" />
  </ItemGroup>

  <ItemGroup Condition="'$(DotNetBuildPass)' == '2' and '$(TargetOS)' == 'windows' and '$(TargetArchitecture)' == 'x86'">
    <!-- Building the cross-OS DACs -->
    <RepositoryReference Remove="@(RepositoryReference)" />
    <RepositoryReference Include="runtime" DotNetBuildPass="2" />
  </ItemGroup>
</Project>
