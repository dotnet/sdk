<Project>

  <PropertyGroup>
    <Configuration Condition="$(Configuration) == ''">Release</Configuration>
    <DotNetBuildOrchestrator>true</DotNetBuildOrchestrator>
    <RootRepo>dotnet</RootRepo>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <Import Project="$(MSBuildThisFileDirectory)eng/RuntimeIdentifier.props" />

  <Import Project="Sdk.props" Sdk="Microsoft.DotNet.Arcade.Sdk" Condition="'$(SkipArcadeSdkImport)' != 'true'" />

  <!-- Init basic Arcade props, if the project importing this file doesn't use Arcade.
       Keep in sync with props/targets in the Arcade.Sdk. -->
  <PropertyGroup Condition="'$(SkipArcadeSdkImport)' == 'true'">
    <!-- RepoLayout.props -->
    <NuGetPackageRoot Condition="'$(NuGetPackageRoot)' != ''">$([MSBuild]::NormalizeDirectory('$(NuGetPackageRoot)'))</NuGetPackageRoot>
    <NuGetPackageRoot Condition="'$(NuGetPackageRoot)' == '' and '$(NUGET_PACKAGES)' != ''">$([MSBuild]::NormalizeDirectory('$(NUGET_PACKAGES)'))</NuGetPackageRoot>
    <NuGetPackageRoot Condition="'$(NuGetPackageRoot)' == '' and '$(OS)' == 'Windows_NT'">$([MSBuild]::NormalizeDirectory('$(UserProfile)', '.nuget', 'packages'))</NuGetPackageRoot>
    <NuGetPackageRoot Condition="'$(NuGetPackageRoot)' == '' and '$(OS)' != 'Windows_NT'">$([MSBuild]::NormalizeDirectory('$(HOME)', '.nuget', 'packages'))</NuGetPackageRoot>

    <RepoRoot Condition="'$(RepoRoot)' == ''">$([MSBuild]::NormalizeDirectory('$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), 'global.json'))'))</RepoRoot>

    <ArtifactsDir Condition="'$(ArtifactsDir)' == ''">$([MSBuild]::NormalizeDirectory('$(RepoRoot)', 'artifacts'))</ArtifactsDir>
    <ArtifactsObjDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsDir)', 'obj'))</ArtifactsObjDir>
    <ArtifactsBinDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsDir)', 'bin'))</ArtifactsBinDir>
    <RepositoryEngineeringDir>$([MSBuild]::NormalizeDirectory('$(RepoRoot)', 'eng'))</RepositoryEngineeringDir>

    <!-- ProjectLayout.props -->
    <PlatformName Condition="'$(PlatformName)' == ''">$(Platform)</PlatformName>
    <OutDirName Condition="'$(OutDirName)' == ''">$(MSBuildProjectName)</OutDirName>

    <BaseOutputPath Condition="'$(BaseOutputPath)' == ''">$([System.IO.Path]::GetFullPath('$(ArtifactsBinDir)$(OutDirName)\'))</BaseOutputPath>
    <OutputPath Condition="'$(PlatformName)' == 'AnyCPU'">$(BaseOutputPath)$(Configuration)\</OutputPath>
    <OutputPath Condition="'$(PlatformName)' != 'AnyCPU'">$(BaseOutputPath)$(PlatformName)\$(Configuration)\</OutputPath>

    <BaseIntermediateOutputPath Condition="'$(BaseIntermediateOutputPath)' == ''">$([System.IO.Path]::GetFullPath('$(ArtifactsObjDir)$(OutDirName)\'))</BaseIntermediateOutputPath>
    <IntermediateOutputPath Condition="'$(PlatformName)' == 'AnyCPU'">$(BaseIntermediateOutputPath)$(Configuration)\</IntermediateOutputPath>
    <IntermediateOutputPath Condition="'$(PlatformName)' != 'AnyCPU'">$(BaseIntermediateOutputPath)$(PlatformName)\$(Configuration)\</IntermediateOutputPath>

    <!-- TargetFrameworkDefaults.props -->
    <NetCurrent>net10.0</NetCurrent>
  </PropertyGroup>

  <!-- Manually import the Versions.props file when the Arcade SDK isn't used. -->
  <Import Project="$(RepositoryEngineeringDir)Versions.props" Condition="'$(SkipArcadeSdkImport)' == 'true'" />

  <PropertyGroup>
    <!-- TODO: Remove when Arcade updated NetCurrent to net10.0. -->
    <NetCurrent>net10.0</NetCurrent>
    <!-- We have no projects targeting multiple frameworks, so don't include in output path. -->
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <!-- This repo's projects are entirely infrastructure and do not ship. -->
    <IsShipping>false</IsShipping>
    <!-- It's not unusual to build with a preview SDK -->
    <SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>
    <!-- By default, the VMR builds with online sources when not building source-only. -->
    <DotNetBuildWithOnlineFeeds Condition="'$(DotNetBuildWithOnlineFeeds)' == '' and '$(DotNetBuildSourceOnly)' != 'true'">true</DotNetBuildWithOnlineFeeds>
    <!-- Don't use Arcade's ExcludeFrom* build infra in the VMR orchestrator. -->
    <DisableArcadeExcludeFromBuildSupport>true</DisableArcadeExcludeFromBuildSupport>
    <LangVersion>latest</LangVersion>
    <!-- Explicitly set NuGetAuditModel level as it's currently disabled in the product. -->
    <NuGetAuditMode>all</NuGetAuditMode>
    <!-- Only upgrade NuGetAudit warnings to errors for official builds. -->
    <WarningsNotAsErrors Condition="'$(OfficialBuildId)' == ''">$(WarningsNotAsErrors);NU1901;NU1902;NU1903;NU1904</WarningsNotAsErrors>
  </PropertyGroup>

  <PropertyGroup>
    <LogVerbosity Condition="'$(LogVerbosity)'==''">minimal</LogVerbosity>

    <ShellExtension Condition="'$(BuildOS)' == 'windows'">.cmd</ShellExtension>
    <ShellExtension Condition="'$(BuildOS)' != 'windows'">.sh</ShellExtension>
  </PropertyGroup>

  <Import Project="$(RepositoryEngineeringDir)VmrLayout.props" />
</Project>
