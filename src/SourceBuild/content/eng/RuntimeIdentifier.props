<Project>
  <!-- TargetRID calculations should go in this file. -->
  <PropertyGroup Label="CalculateTargetOS">
    <BuildOS>linux</BuildOS>
    <BuildOS Condition="$([MSBuild]::IsOSPlatform('OSX'))">osx</BuildOS>
    <BuildOS Condition="$([MSBuild]::IsOSPlatform('FREEBSD'))">freebsd</BuildOS>
    <BuildOS Condition="$([MSBuild]::IsOSPlatform('NETBSD'))">netbsd</BuildOS>
    <BuildOS Condition="$([MSBuild]::IsOSPlatform('ILLUMOS'))">illumos</BuildOS>
    <BuildOS Condition="$([MSBuild]::IsOSPlatform('SOLARIS'))">solaris</BuildOS>
    <BuildOS Condition="$([MSBuild]::IsOSPlatform('HAIKU'))">haiku</BuildOS>
    <BuildOS Condition="$([MSBuild]::IsOSPlatform('WINDOWS'))">windows</BuildOS>
    <TargetOS Condition="'$(TargetOS)' == ''">$(BuildOS)</TargetOS>
    <HostOS Condition="'$(HostOS)' == ''">$(TargetOS)</HostOS>
  </PropertyGroup>

  <!-- This is a list of cases where we aren't producing a whole SDK, just a runtime. -->
  <PropertyGroup Label="ShortStacks">
    <ShortStack Condition="'$(TargetOS)' == 'wasi'">true</ShortStack>
    <ShortStack Condition="'$(TargetOS)' == 'browser'">true</ShortStack>
    <ShortStack Condition="'$(TargetOS)' == 'ios'">true</ShortStack>
    <ShortStack Condition="'$(TargetOS)' == 'iossimulator'">true</ShortStack>
    <ShortStack Condition="'$(TargetOS)' == 'tvos'">true</ShortStack>
    <ShortStack Condition="'$(TargetOS)' == 'tvossimulator'">true</ShortStack>
    <ShortStack Condition="'$(TargetOS)' == 'maccatalyst'">true</ShortStack>
    <ShortStack Condition="'$(TargetOS)' == 'android'">true</ShortStack>
    <ShortStack Condition="'$(TargetOS)' == 'linux-bionic'">true</ShortStack>
    <!-- Mono LLVM builds are short -->
    <ShortStack Condition="'$(DotNetBuildMonoEnableLLVM)' == 'true' or '$(DotNetBuildMonoAOTEnableLLVM)' == 'true'">true</ShortStack>
    <!-- Short stack builds stop at runtime, not the whole SDK -->
    <RootRepo Condition="'$(ShortStack)' == 'true'">runtime</RootRepo>
  </PropertyGroup>

  <!-- See https://github.com/dotnet/arcade/blob/main/Documentation/UnifiedBuild/Unified-Build-Controls.md#output-controls for
       control set definition. -->
  <PropertyGroup Label="CalculateArch">
    <!-- Build architecture is what we are building on. -->
    <BuildArchitecture>$([System.Runtime.InteropServices.RuntimeInformation]::ProcessArchitecture.ToString().ToLowerInvariant)</BuildArchitecture>
    <!-- The target architecture is the what the customer is targeting their outputs to run on. -->
    <TargetArchitecture Condition="'$(TargetArchitecture)' == ''">$(BuildArchitecture)</TargetArchitecture>
    <!-- The host architecture is the what the customer will build on. Much of the time, Host==Target. -->
    <HostArchitecture Condition="'$(HostArchitecture)' == ''">$(TargetArchitecture)</HostArchitecture>

    <Platform Condition="'$(Platform)' == ''">AnyCPU</Platform>
  </PropertyGroup>

  <PropertyGroup Label="CalculateRID">
    <!-- Use current machine distro RID if set. Otherwise, fall back to RuntimeInformation.RuntimeIdentifier -->
    <BuildRid>$(__DistroRid)</BuildRid>
    <BuildRid Condition="'$(BuildRid)' == '' and '$(MSBuildRuntimeType)' == 'core'">$([System.Runtime.InteropServices.RuntimeInformation]::RuntimeIdentifier)</BuildRid>
    <BuildRid Condition="'$(BuildRid)' == '' and '$(MSBuildRuntimeType)' != 'core'">win-$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture.ToString().ToLowerInvariant)</BuildRid>

    <TargetRid Condition="'$(TargetRid)' == ''">$(BuildRid.Substring(0, $(BuildRid.LastIndexOf('-'))))-$(TargetArchitecture)</TargetRid>
    <HostRid Condition="'$(HostRid)' == ''">$(TargetRid)</HostRid>

    <!-- Source-only builds are non portable, except for cross-builds.
         Source-only cross-builds default to the portable configuration so the resulting SDK works on a wider range of distros. -->
    <PortableBuild Condition="'$(PortableBuild)' == '' and '$(DotNetBuildSourceOnly)' == 'true' and '$(BuildArchitecture)' == '$(TargetArchitecture)'">false</PortableBuild>
    <PortableBuild Condition="'$(PortableBuild)' == ''">true</PortableBuild>

    <PortableRid Condition="'$(__PortableTargetOS)' != ''">$(__PortableTargetOS)-$(TargetArchitecture)</PortableRid>
    <PortableRid Condition="'$(PortableRid)' == '' and '$(TargetOS)' == 'freebsd'">freebsd-$(TargetArchitecture)</PortableRid>
    <PortableRid Condition="'$(PortableRid)' == '' and '$(TargetOS)' == 'osx'">osx-$(TargetArchitecture)</PortableRid>
    <PortableRid Condition="'$(PortableRid)' == '' and '$(TargetOS)' == 'linux'">linux-$(TargetArchitecture)</PortableRid>
    <PortableRid Condition="$(TargetRid.StartsWith('linux-musl')) or $(TargetRid.StartsWith('alpine'))">linux-musl-$(TargetArchitecture)</PortableRid>
    <PortableRid Condition="'$(PortableRid)' == '' and '$(TargetOS)' == 'windows'">win-$(TargetArchitecture)</PortableRid>

    <TargetRid Condition="'$(PortableBuild)' == 'true' and '$(PortableRid)' != ''">$(PortableRid)</TargetRid>
    <TargetRid Condition="'$(ShortStack)' == 'true' and '$(TargetOS)' != 'windows'">$(TargetOS)-$(TargetArchitecture)</TargetRid>
    <TargetRid Condition="'$(ShortStack)' == 'true' and '$(TargetOS)' == 'windows'">win-$(TargetArchitecture)</TargetRid>
  </PropertyGroup>
</Project>
