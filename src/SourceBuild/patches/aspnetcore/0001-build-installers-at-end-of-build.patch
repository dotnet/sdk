From 4d0efc241bbcd7b64b38506857efa68ced3971a5 Mon Sep 17 00:00:00 2001
From: Viktor Hofer <viktor.hofer@microsoft.com>
Date: Fri, 15 Nov 2024 15:45:27 +0000
Subject: [PATCH] Build installers at the end of the repo build

Build the Installer projects after everythign else
got built by adding a new Traversal project that
builds all P2Ps in it in parallel.

Fixes https://github.com/dotnet/aspnetcore/issues/58984
Unblocks https://github.com/dotnet/sdk/pull/44828

Backport: https://github.com/dotnet/aspnetcore/pull/58987

---
 eng/Build.props                               | 71 +-----------------
 eng/Installers.proj                           | 72 +++++++++++++++++++
 eng/build.ps1                                 | 42 ++++-------
 eng/targets/ResolveReferences.targets         |  4 --
 global.json                                   |  3 +-
 .../SharedFrameworkBundle.wixproj             |  8 ++-
 6 files changed, 96 insertions(+), 104 deletions(-)
 create mode 100644 eng/Installers.proj

diff --git a/eng/Build.props b/eng/Build.props
index b6a70dfd94..908353850c 100644
--- a/eng/Build.props
+++ b/eng/Build.props
@@ -71,74 +71,6 @@
       </ItemGroup>
     </When>
     <Otherwise>
-      <PropertyGroup>
-        <_BuildWindowsInstallers Condition="'$(BuildInstallers)' == 'true' AND '$(TargetOsName)' == 'win' AND ('$(TargetArchitecture)' == 'x86' OR '$(TargetArchitecture)' == 'x64' OR '$(TargetArchitecture)' == 'arm64') ">true</_BuildWindowsInstallers>
-        <_WixTargetPlatform Condition="'$(TargetArchitecture)' == 'x86' ">Win32</_WixTargetPlatform>
-        <_WixTargetPlatform Condition="'$(TargetArchitecture)' == 'x64' ">x64</_WixTargetPlatform>
-        <_WixTargetPlatform Condition="'$(TargetArchitecture)' == 'arm64' ">ARM64</_WixTargetPlatform>
-      </PropertyGroup>
-      <ItemGroup Condition="'$(DotNetBuild)' != 'true' and '$(_BuildWindowsInstallers)' == 'true' ">
-        <!-- Build the ANCM custom action -->
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\CustomAction\aspnetcoreCA.vcxproj" AdditionalProperties="Platform=x64" />
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\CustomAction\aspnetcoreCA.vcxproj" AdditionalProperties="Platform=Win32" />
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\CustomAction\aspnetcoreCA.vcxproj" AdditionalProperties="Platform=ARM64" />
-
-        <!-- Build the ANCM msis -->
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\ANCMIISExpressV2\AncmIISExpressV2.wixproj" AdditionalProperties="Platform=x64" />
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\ANCMIISExpressV2\AncmIISExpressV2.wixproj" AdditionalProperties="Platform=x86" />
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\ANCMIISExpressV2\AncmIISExpressV2.wixproj" AdditionalProperties="Platform=arm64" />
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\ANCMV2\ANCMV2.wixproj" AdditionalProperties="Platform=x64" />
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\ANCMV2\ANCMV2.wixproj" AdditionalProperties="Platform=x86" />
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\ANCMV2\ANCMV2.wixproj" AdditionalProperties="Platform=arm64" />
-
-        <!-- Build the targeting pack installers -->
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\TargetingPack\TargetingPack.wixproj" AdditionalProperties="Platform=x64" />
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\TargetingPack\TargetingPack.wixproj" AdditionalProperties="Platform=x86" />
-        <!-- This really shouldn't be here, but instead of harvesting from the intermediate/output directories, the targeting pack installer logic
-        harvests from a zip of the reference assemblies. Producing it in each leg ends up with multiple targeting packs
-        getting produced and the BAR will reject the build. Centralize building the targeting pack in the x86/x64 leg. -->
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\TargetingPack\TargetingPack.wixproj" AdditionalProperties="Platform=arm64" />
-
-        <!-- Build the SharedFramework installers -->
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\SharedFrameworkBundle\SharedFrameworkBundle.wixproj" AdditionalProperties="Platform=x64" />
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\SharedFrameworkBundle\SharedFrameworkBundle.wixproj" AdditionalProperties="Platform=x86" />
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\SharedFrameworkBundle\SharedFrameworkBundle.wixproj" AdditionalProperties="Platform=arm64" />
-
-        <!-- Build the SharedFramework wixlib -->
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\SharedFrameworkLib\SharedFrameworkLib.wixproj" AdditionalProperties="Platform=x64" />
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\SharedFrameworkLib\SharedFrameworkLib.wixproj" AdditionalProperties="Platform=x86" />
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\SharedFrameworkLib\SharedFrameworkLib.wixproj" AdditionalProperties="Platform=arm64" />
-
-        <!-- Windows hosting bundle -->
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\WindowsHostingBundle\WindowsHostingBundle.wixproj" AdditionalProperties="Platform=x86" />
-      </ItemGroup>
-
-      <!-- In a vertical build, only build the MSIs for the current vertical in the first pass and build the hosting bundle in the second pass -->
-      <ItemGroup Condition="'$(DotNetBuild)' == 'true' and ('$(DotNetBuildPass)' == '' or '$(DotNetBuildPass)' == '1') and '$(_BuildWindowsInstallers)' == 'true'">
-        <!-- Build the ANCM custom action -->
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\CustomAction\aspnetcoreCA.vcxproj" AdditionalProperties="Platform=$(_WixTargetPlatform)" />
-        <!-- Build the ANCM msis -->
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\ANCMIISExpressV2\AncmIISExpressV2.wixproj" AdditionalProperties="Platform=$(_WixTargetPlatform)" />
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\ANCMV2\ANCMV2.wixproj" AdditionalProperties="Platform=$(_WixTargetPlatform)" />
-        <!-- Build the targeting pack installers -->
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\TargetingPack\TargetingPack.wixproj" AdditionalProperties="Platform=$(_WixTargetPlatform)" />
-        <!-- Build the SharedFramework installers -->
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\SharedFrameworkBundle\SharedFrameworkBundle.wixproj" AdditionalProperties="Platform=$(_WixTargetPlatform)" />
-        <!-- Build the SharedFramework wixlib -->
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\SharedFrameworkLib\SharedFrameworkLib.wixproj" AdditionalProperties="Platform=$(_WixTargetPlatform)" />
-      </ItemGroup>
-
-      <ItemGroup Condition="'$(DotNetBuild)' == 'true' and ('$(DotNetBuildPass)' == '2') and '$(BuildInstallers)' == 'true' AND '$(TargetOsName)' == 'win' and '$(TargetArchitecture)' == 'x64'">
-        <ProjectToBuild Include="$(RepoRoot)src\Installers\Windows\WindowsHostingBundle\WindowsHostingBundle.wixproj" AdditionalProperties="Platform=x86" />
-      </ItemGroup>
-
-      <ItemGroup Condition="'$(BuildInstallers)' == 'true' AND ('$(TargetRuntimeIdentifier)' == 'linux-x64' OR '$(TargetRuntimeIdentifier)' == 'linux-arm64')">
-        <ProjectToBuild Condition=" '$(LinuxInstallerType)' == 'deb' "
-                        Include="$(RepoRoot)src\Installers\Debian\**\*.*proj" />
-        <ProjectToBuild Condition=" '$(LinuxInstallerType)' == 'rpm' "
-                        Include="$(RepoRoot)src\Installers\Rpm\**\*.*proj" />
-      </ItemGroup>
-
       <ItemGroup Condition=" '$(TargetOsName)' == 'win' AND ('$(TargetArchitecture)' == 'x86' OR '$(TargetArchitecture)' == 'x64' OR '$(TargetArchitecture)' == 'arm64') ">
         <NativeProjects Include="$(RepoRoot)src\**\*.vcxproj" Exclude="@(ProjectToExclude)" AdditionalProperties="Platform=x64" />
         <NativeProjects Include="$(RepoRoot)src\**\*.vcxproj" Exclude="@(ProjectToExclude)" AdditionalProperties="Platform=Win32" />
@@ -269,6 +201,9 @@
 
         <ProjectToBuild Condition=" '$(BuildManaged)' == 'true'" Include="@(DotNetProjects)" Exclude="@(ProjectToExclude)" />
         <ProjectToExclude Condition=" '$(BuildManaged)' != 'true'" Include="@(DotNetProjects)" />
+
+        <!-- Build installers after everything else got built. -->
+        <ProjecttoBuild Condition="'$(BuildInstallers)' == 'true'" Include="$(MSBuildThisFileDirectory)Installers.proj" BuildInParallel="false" />
       </ItemGroup>
     </Otherwise>
   </Choose>
diff --git a/eng/Installers.proj b/eng/Installers.proj
new file mode 100644
index 0000000000..aac8ea8742
--- /dev/null
+++ b/eng/Installers.proj
@@ -0,0 +1,72 @@
+<Project Sdk="Microsoft.Build.Traversal">
+
+  <PropertyGroup>
+    <_BuildWindowsInstallers Condition="'$(TargetOsName)' == 'win' and ('$(TargetArchitecture)' == 'x86' or '$(TargetArchitecture)' == 'x64' or '$(TargetArchitecture)' == 'arm64')">true</_BuildWindowsInstallers>
+    <_WixTargetPlatform Condition="'$(TargetArchitecture)' == 'x86' ">Win32</_WixTargetPlatform>
+    <_WixTargetPlatform Condition="'$(TargetArchitecture)' == 'x64' ">x64</_WixTargetPlatform>
+    <_WixTargetPlatform Condition="'$(TargetArchitecture)' == 'arm64' ">ARM64</_WixTargetPlatform>
+  </PropertyGroup>
+
+  <ItemGroup Condition="'$(DotNetBuild)' != 'true' and '$(_BuildWindowsInstallers)' == 'true'">
+    <!-- Build the ANCM custom action -->
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\CustomAction\aspnetcoreCA.vcxproj" AdditionalProperties="Platform=x64" />
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\CustomAction\aspnetcoreCA.vcxproj" AdditionalProperties="Platform=Win32" />
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\CustomAction\aspnetcoreCA.vcxproj" AdditionalProperties="Platform=ARM64" />
+
+    <!-- Build the ANCM msis -->
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\ANCMIISExpressV2\AncmIISExpressV2.wixproj" AdditionalProperties="Platform=x64" />
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\ANCMIISExpressV2\AncmIISExpressV2.wixproj" AdditionalProperties="Platform=x86" />
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\ANCMIISExpressV2\AncmIISExpressV2.wixproj" AdditionalProperties="Platform=arm64" />
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\ANCMV2\ANCMV2.wixproj" AdditionalProperties="Platform=x64" />
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\ANCMV2\ANCMV2.wixproj" AdditionalProperties="Platform=x86" />
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\ANCMV2\ANCMV2.wixproj" AdditionalProperties="Platform=arm64" />
+
+    <!-- Build the targeting pack installers -->
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\TargetingPack\TargetingPack.wixproj" AdditionalProperties="Platform=x64" />
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\TargetingPack\TargetingPack.wixproj" AdditionalProperties="Platform=x86" />
+    <!-- This really shouldn't be here, but instead of harvesting from the intermediate/output directories, the targeting pack installer logic
+    harvests from a zip of the reference assemblies. Producing it in each leg ends up with multiple targeting packs
+    getting produced and the BAR will reject the build. Centralize building the targeting pack in the x86/x64 leg. -->
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\TargetingPack\TargetingPack.wixproj" AdditionalProperties="Platform=arm64" />
+
+    <!-- Build the SharedFramework installers -->
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\SharedFrameworkBundle\SharedFrameworkBundle.wixproj" AdditionalProperties="Platform=x64" />
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\SharedFrameworkBundle\SharedFrameworkBundle.wixproj" AdditionalProperties="Platform=x86" />
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\SharedFrameworkBundle\SharedFrameworkBundle.wixproj" AdditionalProperties="Platform=arm64" />
+
+    <!-- Build the SharedFramework wixlib -->
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\SharedFrameworkLib\SharedFrameworkLib.wixproj" AdditionalProperties="Platform=x64" />
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\SharedFrameworkLib\SharedFrameworkLib.wixproj" AdditionalProperties="Platform=x86" />
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\SharedFrameworkLib\SharedFrameworkLib.wixproj" AdditionalProperties="Platform=arm64" />
+
+    <!-- Windows hosting bundle -->
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\WindowsHostingBundle\WindowsHostingBundle.wixproj" AdditionalProperties="Platform=x86" />
+  </ItemGroup>
+
+  <!-- In a vertical build, only build the MSIs for the current vertical in the first pass and build the hosting bundle in the second pass -->
+  <ItemGroup Condition="'$(DotNetBuild)' == 'true' and ('$(DotNetBuildPass)' == '' or '$(DotNetBuildPass)' == '1') and '$(_BuildWindowsInstallers)' == 'true'">
+    <!-- Build the ANCM custom action -->
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\CustomAction\aspnetcoreCA.vcxproj" AdditionalProperties="Platform=$(_WixTargetPlatform)" />
+    <!-- Build the ANCM msis -->
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\ANCMIISExpressV2\AncmIISExpressV2.wixproj" AdditionalProperties="Platform=$(_WixTargetPlatform)" />
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\AspNetCoreModule-Setup\ANCMV2\ANCMV2.wixproj" AdditionalProperties="Platform=$(_WixTargetPlatform)" />
+    <!-- Build the targeting pack installers -->
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\TargetingPack\TargetingPack.wixproj" AdditionalProperties="Platform=$(_WixTargetPlatform)" />
+    <!-- Build the SharedFramework installers -->
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\SharedFrameworkBundle\SharedFrameworkBundle.wixproj" AdditionalProperties="Platform=$(_WixTargetPlatform)" />
+    <!-- Build the SharedFramework wixlib -->
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\SharedFrameworkLib\SharedFrameworkLib.wixproj" AdditionalProperties="Platform=$(_WixTargetPlatform)" />
+  </ItemGroup>
+
+  <ItemGroup Condition="'$(DotNetBuild)' == 'true' and ('$(DotNetBuildPass)' == '2') and '$(TargetOsName)' == 'win' and '$(TargetArchitecture)' == 'x64'">
+    <ProjectReference Include="$(RepoRoot)src\Installers\Windows\WindowsHostingBundle\WindowsHostingBundle.wixproj" AdditionalProperties="Platform=x86" />
+  </ItemGroup>
+
+  <ItemGroup Condition="'$(TargetRuntimeIdentifier)' == 'linux-x64' or '$(TargetRuntimeIdentifier)' == 'linux-arm64'">
+    <ProjectReference Condition=" '$(LinuxInstallerType)' == 'deb' "
+                    Include="$(RepoRoot)src\Installers\Debian\**\*.*proj" />
+    <ProjectReference Condition=" '$(LinuxInstallerType)' == 'rpm' "
+                    Include="$(RepoRoot)src\Installers\Rpm\**\*.*proj" />
+  </ItemGroup>
+
+</Project>
diff --git a/eng/build.ps1 b/eng/build.ps1
index 3696fe11e0..964fe28e2a 100644
--- a/eng/build.ps1
+++ b/eng/build.ps1
@@ -288,14 +288,9 @@ if ($RuntimeSourceFeed -or $RuntimeSourceFeedKey) {
 }
 
 # Split build categories between dotnet msbuild and desktop msbuild. Use desktop msbuild as little as possible.
-[string[]]$dotnetBuildArguments = $MSBuildArguments
-if ($All) { $dotnetBuildArguments += '/p:BuildAllProjects=true' }
+if ($All) { $MSBuildArguments += '/p:BuildAllProjects=true' }
 if ($Projects) {
-    if ($BuildNative) {
-        $MSBuildArguments += "/p:ProjectToBuild=$Projects"
-    } else {
-        $dotnetBuildArguments += "/p:ProjectToBuild=$Projects"
-    }
+    $MSBuildArguments += "/p:ProjectToBuild=$Projects"
 }
 
 if ($NoBuildInstallers) { $MSBuildArguments += "/p:BuildInstallers=false"; $BuildInstallers = $false }
@@ -307,12 +302,12 @@ $BuildNative = $true
 if ($NoBuildNative) { $MSBuildArguments += "/p:BuildNative=false"; $BuildNative = $false }
 if ($BuildNative) { $MSBuildArguments += "/p:BuildNative=true"}
 
-if ($NoBuildJava) { $dotnetBuildArguments += "/p:BuildJava=false"; $BuildJava = $false }
-if ($BuildJava) { $dotnetBuildArguments += "/p:BuildJava=true" }
-if ($NoBuildManaged) { $dotnetBuildArguments += "/p:BuildManaged=false"; $BuildManaged = $false }
-if ($BuildManaged) { $dotnetBuildArguments += "/p:BuildManaged=true" }
-if ($NoBuildNodeJS) { $dotnetBuildArguments += "/p:BuildNodeJSUnlessSourcebuild=false"; $BuildNodeJS = $false }
-if ($BuildNodeJS) { $dotnetBuildArguments += "/p:BuildNodeJSUnlessSourcebuild=true" }
+if ($NoBuildJava) { $MSBuildArguments += "/p:BuildJava=false"; $BuildJava = $false }
+if ($BuildJava) { $MSBuildArguments += "/p:BuildJava=true" }
+if ($NoBuildManaged) { $MSBuildArguments += "/p:BuildManaged=false"; $BuildManaged = $false }
+if ($BuildManaged) { $MSBuildArguments += "/p:BuildManaged=true" }
+if ($NoBuildNodeJS) { $MSBuildArguments += "/p:BuildNodeJSUnlessSourcebuild=false"; $BuildNodeJS = $false }
+if ($BuildNodeJS) { $MSBuildArguments += "/p:BuildNodeJSUnlessSourcebuild=true" }
 
 # Don't bother with two builds if just one will build everything. Ignore super-weird cases like
 # "-Projects ... -NoBuildJava -NoBuildManaged -NoBuildNodeJS". An empty `./build.ps1` command will build both
@@ -413,8 +408,7 @@ function LocateJava {
 if ($BinaryLog) {
     $bl = GetMSBuildBinaryLogCommandLineArgument($MSBuildArguments)
     if (-not $bl) {
-        $dotnetBuildArguments += "/bl:" + (Join-Path $LogDir "Build.binlog")
-        $MSBuildArguments += "/bl:" + (Join-Path $LogDir "Build.native.binlog")
+        $MSBuildArguments += "/bl:" + (Join-Path $LogDir "Build.binlog")
         $ToolsetBuildArguments += "/bl:" + (Join-Path $LogDir "Build.repotasks.binlog")
     } else {
         # Use a different binary log path when running desktop msbuild if doing both builds.
@@ -473,21 +467,11 @@ try {
     }
 
     if (-not $OnlyBuildRepoTasks) {
-        if ($performDesktopBuild) {
-            Write-Host
-            Remove-Item variable:global:_BuildTool -ErrorAction Ignore
-            $msbuildEngine = 'vs'
-
-            MSBuild $toolsetBuildProj /p:RepoRoot=$RepoRoot @MSBuildArguments
-        }
-
-        if ($performDotnetBuild) {
-            Write-Host
-            Remove-Item variable:global:_BuildTool -ErrorAction Ignore
-            $msbuildEngine = 'dotnet'
+        Write-Host
+        Remove-Item variable:global:_BuildTool -ErrorAction Ignore
+        $msbuildEngine = 'vs'
 
-            MSBuild $toolsetBuildProj /p:RepoRoot=$RepoRoot @dotnetBuildArguments
-        }
+        MSBuild $toolsetBuildProj /p:RepoRoot=$RepoRoot @MSBuildArguments
     }
 }
 catch {
diff --git a/eng/targets/ResolveReferences.targets b/eng/targets/ResolveReferences.targets
index e416d43f30..a4018289c9 100644
--- a/eng/targets/ResolveReferences.targets
+++ b/eng/targets/ResolveReferences.targets
@@ -227,10 +227,6 @@
       Condition=" '@(PackageReference->HasMetadata('Private')->Count())' != '0' "
       Code="BUILD004"
       Text="%25(Private) metadata should not be applied to the %(Identity) package reference. Did you mean %25(PrivateAssets)?" />
-    <Warning
-      Condition=" '@(ProjectReference->HasMetadata('PrivateAssets')->Count())' != '0' "
-      Code="BUILD005"
-      Text="%25(PrivateAssets) metadata should not be applied to the %(Identity) project reference. Did you mean %25(Private)?" />
     <Warning
       Condition=" '@(Reference->HasMetadata('PrivateAssets')->Count())' != '0' "
       Code="BUILD006"
diff --git a/global.json b/global.json
index a553563dce..289c1c3594 100644
--- a/global.json
+++ b/global.json
@@ -28,6 +28,7 @@
   },
   "msbuild-sdks": {
     "Microsoft.DotNet.Arcade.Sdk": "10.0.0-beta.24564.1",
-    "Microsoft.DotNet.Helix.Sdk": "10.0.0-beta.24564.1"
+    "Microsoft.DotNet.Helix.Sdk": "10.0.0-beta.24564.1",
+    "Microsoft.Build.Traversal": "3.4.0"
   }
 }
diff --git a/src/Installers/Windows/SharedFrameworkBundle/SharedFrameworkBundle.wixproj b/src/Installers/Windows/SharedFrameworkBundle/SharedFrameworkBundle.wixproj
index 5f47072f1f..c308442b3f 100644
--- a/src/Installers/Windows/SharedFrameworkBundle/SharedFrameworkBundle.wixproj
+++ b/src/Installers/Windows/SharedFrameworkBundle/SharedFrameworkBundle.wixproj
@@ -46,13 +46,17 @@
     </When>
     <Otherwise>
       <ItemGroup>
-        <ProjectReference Include="..\SharedFrameworkLib\SharedFrameworkLib.wixproj" SetPlatform="Platform=x86">
+        <ProjectReference Include="..\SharedFrameworkLib\SharedFrameworkLib.wixproj"
+                          SetPlatform="Platform=x86"
+                          Condition="'$(DotNetBuild)' != 'true' or '$(Platform)' == 'Win32'">
           <Name>SharedFrameworkLib</Name>
           <Project>{5244BC49-2568-4701-80A6-EAB8950AB5FA}</Project>
           <Private>True</Private>
           <DoNotHarvest>True</DoNotHarvest>
         </ProjectReference>
-        <ProjectReference Include="..\SharedFrameworkLib\SharedFrameworkLib.wixproj" SetPlatform="Platform=x64">
+        <ProjectReference Include="..\SharedFrameworkLib\SharedFrameworkLib.wixproj"
+                          SetPlatform="Platform=x64"
+                          Condition="'$(DotNetBuild)' != 'true' or '$(Platform)' == 'x64'">
           <Name>SharedFrameworkLib</Name>
           <Project>{5244BC49-2568-4701-80A6-EAB8950AB5FA}</Project>
           <Private>True</Private>
