<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Copyright (c)  Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->

  <!-- Workaround: See: #https://github.com/dotnet/roslyn-project-system/issues/292 -->
  <Target Name="_CopySharedTemplateFiles" BeforeTargets="GetZipFilesFromVSTemplates" Inputs="@(SharedTemplateFiles)" Outputs="%(SharedTemplateFiles.TargetPath)">
    <Copy SourceFiles="@(SharedTemplateFiles)" DestinationFiles="%(SharedTemplateFiles.TargetPath)" OverwriteReadOnlyFiles="true">
      <Output TaskParameter="CopiedFiles" ItemName="FileWrites" />
    </Copy>
  </Target>
  
  <!-- Project templates reference the Microsoft.NET.Sdk package produced in this project.
       The following Custom Inline Task and Target write version number associated with this build
       into the project json template associated with the project template.
    -->

  <!-- RewriteToken Task: Reads a template and writes to a rewrite path with token replaced  -->
  <UsingTask TaskName="RewriteToken" 
    TaskFactory="CodeTaskFactory" 
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    
    <ParameterGroup>
      <TemplatePath ParameterType="System.String" Required="true" />
      <RewritePath  ParameterType="System.String" Required="true" />
      <Token        ParameterType="System.String" Required="true" />
      <Replacement  ParameterType="System.String" Required="true" />
    </ParameterGroup>

    <Task>
      <Code Type="Fragment" Language="cs"><![CDATA[
        string content = File.ReadAllText(TemplatePath);
        content = content.Replace(Token, Replacement);
        File.WriteAllText(RewritePath, content);
      ]]></Code>
    </Task>
  </UsingTask>

  <!-- _UpdateNETCoreSdkVersion Target: produce project template with current build version -->
  <Target Name="_UpdateNETCoreSdkVersion" BeforeTargets="GetZipFilesFromVSTemplates" 
    Inputs="@(ProjectTemplate)" Outputs="%(ProjectTemplate.TargetPath)">

    <RewriteToken 
      TemplatePath="@(ProjectTemplate)" 
      RewritePath="%(ProjectTemplate.TargetPath)"
      Token="$$buildversion$$" 
      Replacement="$(Version)"/>

  </Target>

  <!-- Returns the current build version. Used in .vsixmanifests to substitute our build version into them -->
  <Target Name="GetBuildVersion" Outputs="$(VsixVersion)" />

  <PropertyGroup>
    <DeployExtension>false</DeployExtension>
    <NoWarn>$(NoWarn);2008</NoWarn>
  </PropertyGroup>

  <Import Project="$(VSToolsPath)\VSSDK\Microsoft.VsSDK.targets" Condition="Exists('$(VSToolsPath)\VSSDK\Microsoft.VsSDK.targets')" /> 
  <Import Project="Signing.Imports.targets"/>

</Project>