.\" Automatically generated by Pandoc 2.14.1
.\"
.TH "" "1" "" "" ".NET"
.hy
.SH Environment variables used by .NET SDK, .NET CLI, and .NET runtime
.PP
\f[B]This article applies to:\f[R] \[u2714]\[uFE0F] .NET Core 2.1 SDK and later versions
.PP
Use the following environment variables to configure the .NET SDK, .NET CLI, and .NET runtime.
.SS \f[C]DOTNET_ROOT\f[R], \f[C]DOTNET_ROOT(x86)\f[R]
.PP
Specifies the location of the .NET runtimes, if they are not installed in the default location.
The default location on Windows is \f[C]C:\[rs]Program Files\[rs]dotnet\f[R].
The default location on Linux and macOS is \f[C]/usr/share/dotnet\f[R].
This environment variable is used only when running apps via generated executables (apphosts).
\f[C]DOTNET_ROOT(x86)\f[R] is used instead when running a 32-bit executable on a 64-bit OS.
.SS \f[C]NUGET_PACKAGES\f[R]
.PP
The global packages folder.
If not set, it defaults to \f[C]\[ti]/.nuget/packages\f[R] on Unix or \f[C]%userprofile%\[rs].nuget\[rs]packages\f[R] on Windows.
.SS \f[C]DOTNET_SERVICING\f[R]
.PP
Specifies the location of the servicing index to use by the shared host when loading the runtime.
.SS \f[C]DOTNET_NOLOGO\f[R]
.PP
Specifies whether .NET welcome and telemetry messages are displayed on first run.
Set to \f[C]true\f[R] to mute these messages (values \f[C]true\f[R], \f[C]1\f[R], or \f[C]yes\f[R] accepted) or set to \f[C]false\f[R] to allow (values \f[C]false\f[R], \f[C]0\f[R], or \f[C]no\f[R] accepted).
If not set, the default is \f[C]false\f[R] and the messages will be displayed on first run.
This flag has no effect on telemetry (see \f[C]DOTNET_CLI_TELEMETRY_OPTOUT\f[R] for opting out of sending telemetry).
.SS \f[C]DOTNET_CLI_TELEMETRY_OPTOUT\f[R]
.PP
Specifies whether data about the .NET tools usage is collected and sent to Microsoft.
Set to \f[C]true\f[R] to opt-out of the telemetry feature (values \f[C]true\f[R], \f[C]1\f[R], or \f[C]yes\f[R] accepted).
Otherwise, set to \f[C]false\f[R] to opt into the telemetry features (values \f[C]false\f[R], \f[C]0\f[R], or \f[C]no\f[R] accepted).
If not set, the default is \f[C]false\f[R] and the telemetry feature is active.
.SS \f[C]DOTNET_MULTILEVEL_LOOKUP\f[R]
.PP
Specifies whether .NET runtime, shared framework, or SDK are resolved from the global location.
If not set, it defaults to 1 (logical \f[C]true\f[R]).
Set to 0 (logical \f[C]false\f[R]) to not resolve from the global location and have isolated .NET installations.
For more information about multi-level lookup, see Multi-level SharedFX Lookup (https://github.com/dotnet/core-setup/blob/master/Documentation/design-docs/multilevel-sharedfx-lookup.md).
.SS \f[C]DOTNET_ROLL_FORWARD\f[R]
.PP
Determines roll forward behavior.
For more information, see the \f[C]--roll-forward\f[R] option earlier in this article.
\f[B]Available starting with .NET Core 3.x.\f[R]
.SS \f[C]DOTNET_ROLL_FORWARD_TO_PRERELEASE\f[R]
.PP
If set to \f[C]1\f[R] (enabled), enables rolling forward to a pre-release version from a release version.
By default (\f[C]0\f[R] - disabled), when a release version of .NET runtime is requested, roll-forward will only consider installed release versions.
\f[B]Available starting with .NET Core 3.x.\f[R]
.PP
For more information, see Roll forward.
.SS \f[C]DOTNET_ROLL_FORWARD_ON_NO_CANDIDATE_FX\f[R]
.PP
Disables minor version roll forward, if set to \f[C]0\f[R].
For more information, see Roll forward.
.PP
This setting is superseded in .NET Core 3.0 by \f[C]DOTNET_ROLL_FORWARD\f[R].
The new settings should be used instead.
.SS \f[C]DOTNET_CLI_UI_LANGUAGE\f[R]
.PP
Sets the language of the CLI UI using a locale value such as \f[C]en-us\f[R].
The supported values are the same as for Visual Studio.
For more information, see the section on changing the installer language in the Visual Studio installation documentation.
The .NET resource manager rules apply, so you don\[cq]t have to pick an exact match\[em]you can also pick descendants in the \f[C]CultureInfo\f[R] tree.
For example, if you set it to \f[C]fr-CA\f[R], the CLI will find and use the \f[C]fr\f[R] translations.
If you set it to a language that is not supported, the CLI falls back to English.
.SS \f[C]DOTNET_DISABLE_GUI_ERRORS\f[R]
.PP
For GUI-enabled generated executables - disables dialog popup, which normally shows for certain classes of errors.
It only writes to \f[C]stderr\f[R] and exits in those cases.
.SS \f[C]DOTNET_ADDITIONAL_DEPS\f[R]
.PP
Equivalent to CLI option \f[C]--additional-deps\f[R].
.SS \f[C]DOTNET_RUNTIME_ID\f[R]
.PP
Overrides the detected RID.
.SS \f[C]DOTNET_SHARED_STORE\f[R]
.PP
Location of the \[lq]shared store\[rq] which assembly resolution falls back to in some cases.
.SS \f[C]DOTNET_STARTUP_HOOKS\f[R]
.PP
List of assemblies to load and execute startup hooks from.
.SS \f[C]DOTNET_BUNDLE_EXTRACT_BASE_DIR\f[R]
.PP
Specifies a directory to which a single-file application is extracted before it is executed.
\f[B]Available starting with .NET Core 3.x.\f[R]
.PP
For more information, see Single-file executables.
.SS \f[C]COREHOST_TRACE\f[R]
.PP
Controls diagnostics tracing from the hosting components, such as \f[C]dotnet.exe\f[R], \f[C]hostfxr\f[R], and \f[C]hostpolicy\f[R].
.IP \[bu] 2
\f[C]COREHOST_TRACE=[0/1]\f[R] - default is \f[C]0\f[R] - tracing disabled.
If set to \f[C]1\f[R], diagnostics tracing is enabled.
.IP \[bu] 2
\f[C]COREHOST_TRACEFILE=<file path>\f[R] - only has effect if tracing is enabled via \f[C]COREHOST_TRACE=1\f[R].
When set, the tracing information is written to the specified file, otherwise the tracing information is written to \f[C]stderr\f[R].
\f[B]Available starting with .NET Core 3.x.\f[R]
.IP \[bu] 2
\f[C]COREHOST_TRACE_VERBOSITY=[1/2/3/4]\f[R] - default is \f[C]4\f[R].
The setting is used only when tracing is enabled via \f[C]COREHOST_TRACE=1\f[R].
\f[B]Available starting with .NET Core 3.x.\f[R]
.RS 2
.IP \[bu] 2
\f[C]4\f[R] - all tracing information is written
.IP \[bu] 2
\f[C]3\f[R] - only informational, warning and error messages are written
.IP \[bu] 2
\f[C]2\f[R] - only warning and error messages are written
.IP \[bu] 2
\f[C]1\f[R] - only error messages are written
.RE
.PP
The typical way to get detailed trace information about application startup is to set \f[C]COREHOST_TRACE=1\f[R] and\f[C]COREHOST_TRACEFILE=host_trace.txt\f[R] and then run the application.
A new file \f[C]host_trace.txt\f[R] will be created in the current directory with the detailed information.
.SS \f[C]DOTNET_CLI_WORKLOAD_UPDATE_NOTIFY_DISABLE\f[R]
.PP
Disables background download of advertising manifests for workloads.
Default is \f[C]false\f[R] - not disabled.
If set to \f[C]true\f[R], downloading is disabled.
For more information, see Advertising manifests.
.SS \f[C]DOTNET_CLI_WORKLOAD_UPDATE_NOTIFY_INTERVAL_HOURS\f[R]
.PP
Specifies the minimum number of hours between background downloads of advertising manifests for workloads.
Default is \f[C]24\f[R] - no more frequently than once a day.
For more information, see Advertising manifests.
.SS See also
.IP \[bu] 2
dotnet command
.IP \[bu] 2
Runtime Configuration Files (https://github.com/dotnet/sdk/blob/main/documentation/specs/runtime-configuration-file.md)
.IP \[bu] 2
\&.NET runtime configuration settings
