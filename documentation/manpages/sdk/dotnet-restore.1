.\" Automatically generated by Pandoc 2.7.2
.\"
.TH "dotnet restore command" "1" "" "" ".NET Core"
.hy
.SH dotnet restore
.PP
.SH NAME
.PP
\f[C]dotnet restore\f[R] - Restores the dependencies and tools of a project.
.SH SYNOPSIS
.SS .NET Core 2.x
.IP
.nf
\f[C]
dotnet restore [<ROOT>] [--configfile] [--disable-parallel] [--force] [--ignore-failed-sources] [--no-cache]
    [--no-dependencies] [--packages] [-r|--runtime] [-s|--source] [-v|--verbosity] [--interactive]
dotnet restore [-h|--help]
\f[R]
.fi
.SS .NET Core 1.x
.IP
.nf
\f[C]
dotnet restore [<ROOT>] [--configfile] [--disable-parallel] [--ignore-failed-sources] [--no-cache]
    [--no-dependencies] [--packages] [-r|--runtime] [-s|--source] [-v|--verbosity]
dotnet restore [-h|--help]
\f[R]
.fi
.PP
   *   *   *   *   *
.SH DESCRIPTION
.PP
The \f[C]dotnet restore\f[R] command uses NuGet to restore dependencies as well as project-specific tools that are specified in the project file.
By default, the restoration of dependencies and tools are executed in parallel.
.PP
.PP
To restore the dependencies, NuGet needs the feeds where the packages are located.
Feeds are usually provided via the \f[I]nuget.config\f[R] configuration file.
A default configuration file is provided when the CLI tools are installed.
You specify additional feeds by creating your own \f[I]nuget.config\f[R] file in the project directory.
You also specify additional feeds per invocation at a command prompt.
.PP
For dependencies, you specify where the restored packages are placed during the restore operation using the \f[C]--packages\f[R] argument.
If not specified, the default NuGet package cache is used, which is found in the \f[C].nuget/packages\f[R] directory in the user\[cq]s home directory on all operating systems.
For example, \f[I]/home/user1\f[R] on Linux or \f[I]C:1\f[R] on Windows.
.PP
For project-specific tooling, \f[C]dotnet restore\f[R] first restores the package in which the tool is packed, and then proceeds to restore the tool\[cq]s dependencies as specified in its project file.
.SS nuget.config differences
.PP
The behavior of the \f[C]dotnet restore\f[R] command is affected by the settings in the \f[I]nuget.config\f[R] file, if present.
For example, setting the \f[C]globalPackagesFolder\f[R] in \f[I]nuget.config\f[R] places the restored NuGet packages in the specified folder.
This is an alternative to specifying the \f[C]--packages\f[R] option on the \f[C]dotnet restore\f[R] command.
For more information, see the nuget.config reference.
.PP
There are three specific settings that \f[C]dotnet restore\f[R] ignores:
.IP \[bu] 2
bindingRedirects
.RS 2
.PP
Binding redirects don\[cq]t work with \f[C]<PackageReference>\f[R] elements and .NET Core only supports \f[C]<PackageReference>\f[R] elements for NuGet packages.
.RE
.IP \[bu] 2
solution
.RS 2
.PP
This setting is Visual Studio specific and doesn\[cq]t apply to .NET Core.
\&.NET Core doesn\[cq]t use a \f[C]packages.config\f[R] file and instead uses \f[C]<PackageReference>\f[R] elements for NuGet packages.
.RE
.IP \[bu] 2
trustedSigners
.RS 2
.PP
This setting isn\[cq]t applicable as NuGet doesn\[cq]t yet support cross-platform verification of trusted packages.
.RE
.SS Implicit \f[C]dotnet restore\f[R]
.PP
Starting with .NET Core 2.0, \f[C]dotnet restore\f[R] is run implicitly if necessary when you issue the following commands:
.IP \[bu] 2
\f[C]dotnet new\f[R]
.IP \[bu] 2
\f[C]dotnet build\f[R]
.IP \[bu] 2
\f[C]dotnet build-server\f[R]
.IP \[bu] 2
\f[C]dotnet run\f[R]
.IP \[bu] 2
\f[C]dotnet test\f[R]
.IP \[bu] 2
\f[C]dotnet publish\f[R]
.IP \[bu] 2
\f[C]dotnet pack\f[R]
.PP
In most cases, you no longer need to explicitly use the \f[C]dotnet restore\f[R] command.
.PP
Sometimes, it might be inconvenient to run \f[C]dotnet restore\f[R] implicitly.
For example, some automated systems, such as build systems, need to call \f[C]dotnet restore\f[R] explicitly to control when the restore occurs so that they can control network usage.
To prevent \f[C]dotnet restore\f[R] from running implicitly, you can use the \f[C]--no-restore\f[R] flag with any of these commands to disable implicit restore.
.SS Arguments
.PP
\f[C]ROOT\f[R]
.PP
Optional path to the project file to restore.
.SH OPTIONS
.SS .NET Core 2.x
.PP
\f[C]--configfile <FILE>\f[R]
.PP
The NuGet configuration file (\f[I]nuget.config\f[R]) to use for the restore operation.
.PP
\f[C]--disable-parallel\f[R]
.PP
Disables restoring multiple projects in parallel.
.PP
\f[C]--force\f[R]
.PP
Forces all dependencies to be resolved even if the last restore was successful.
Specifying this flag is the same as deleting the \f[I]project.assets.json\f[R] file.
.PP
\f[C]-h|--help\f[R]
.PP
Prints out a short help for the command.
.PP
\f[C]--ignore-failed-sources\f[R]
.PP
Only warn about failed sources if there are packages meeting the version requirement.
.PP
\f[C]--no-cache\f[R]
.PP
Specifies to not cache packages and HTTP requests.
.PP
\f[C]--no-dependencies\f[R]
.PP
When restoring a project with project-to-project (P2P) references, restores the root project and not the references.
.PP
\f[C]--packages <PACKAGES_DIRECTORY>\f[R]
.PP
Specifies the directory for restored packages.
.PP
\f[C]-r|--runtime <RUNTIME_IDENTIFIER>\f[R]
.PP
Specifies a runtime for the package restore.
This is used to restore packages for runtimes not explicitly listed in the \f[C]<RuntimeIdentifiers>\f[R] tag in the \f[I].csproj\f[R] file.
For a list of Runtime Identifiers (RIDs), see the RID catalog.
Provide multiple RIDs by specifying this option multiple times.
.PP
\f[C]-s|--source <SOURCE>\f[R]
.PP
Specifies a NuGet package source to use during the restore operation.
This setting overrides all of the sources specified in the \f[I]nuget.config\f[R] files.
Multiple sources can be provided by specifying this option multiple times.
.PP
\f[C]--verbosity <LEVEL>\f[R]
.PP
Sets the verbosity level of the command.
Allowed values are \f[C]q[uiet]\f[R], \f[C]m[inimal]\f[R], \f[C]n[ormal]\f[R], \f[C]d[etailed]\f[R], and \f[C]diag[nostic]\f[R].
Default value is \f[C]minimal\f[R].
.PP
\f[C]--interactive\f[R]
.PP
Allows the command to stop and wait for user input or action (for example to complete authentication).
Since .NET Core 2.1.400.
.SS .NET Core 1.x
.PP
\f[C]--configfile <FILE>\f[R]
.PP
The NuGet configuration file (\f[I]nuget.config\f[R]) to use for the restore operation.
.PP
\f[C]--disable-parallel\f[R]
.PP
Disables restoring multiple projects in parallel.
.PP
\f[C]-h|--help\f[R]
.PP
Prints out a short help for the command.
.PP
\f[C]--ignore-failed-sources\f[R]
.PP
Only warn about failed sources if there are packages meeting the version requirement.
.PP
\f[C]--no-cache\f[R]
.PP
Specifies to not cache packages and HTTP requests.
.PP
\f[C]--no-dependencies\f[R]
.PP
When restoring a project with project-to-project (P2P) references, restores the root project and not the references.
.PP
\f[C]--packages <PACKAGES_DIRECTORY>\f[R]
.PP
Specifies the directory for restored packages.
.PP
\f[C]-r|--runtime <RUNTIME_IDENTIFIER>\f[R]
.PP
Specifies a runtime for the package restore.
This is used to restore packages for runtimes not explicitly listed in the \f[C]<RuntimeIdentifiers>\f[R] tag in the \f[I].csproj\f[R] file.
For a list of Runtime Identifiers (RIDs), see the RID catalog.
Provide multiple RIDs by specifying this option multiple times.
.PP
\f[C]-s|--source <SOURCE>\f[R]
.PP
Specifies a NuGet package source to use during the restore operation.
This overrides all of the sources specified in the \f[I]nuget.config\f[R] files, effectively reading the \f[I]nuget.config\f[R] file as if the \f[C]<packageSource>\f[R] element was not there.
Multiple sources can be provided by specifying this option multiple times.
.PP
\f[C]--verbosity <LEVEL>\f[R]
.PP
Sets the verbosity level of the command.
Allowed values are \f[C]q[uiet]\f[R], \f[C]m[inimal]\f[R], \f[C]n[ormal]\f[R], \f[C]d[etailed]\f[R], and \f[C]diag[nostic]\f[R].
The default is \f[C]minimal\f[R].
.PP
   *   *   *   *   *
.SH EXAMPLES
.PP
Restore dependencies and tools for the project in the current directory:
.PP
\f[C]dotnet restore\f[R]
.PP
Restore dependencies and tools for the \f[C]app1\f[R] project found in the given path:
.PP
\f[C]dotnet restore \[ti]/projects/app1/app1.csproj\f[R]
.PP
Restore the dependencies and tools for the project in the current directory using the file path provided as the source:
.PP
\f[C]dotnet restore -s c:\[rs]packages\[rs]mypackages\f[R]
.PP
Restore the dependencies and tools for the project in the current directory using the two file paths provided as sources:
.PP
\f[C]dotnet restore -s c:\[rs]packages\[rs]mypackages -s c:\[rs]packages\[rs]myotherpackages\f[R]
.PP
Restore dependencies and tools for the project in the current directory showing detailed output:
.PP
\f[C]dotnet restore --verbosity detailed\f[R]
