'\" t
.\" Automatically generated by Pandoc 2.14.1
.\"
.TH "" "1" "" "" ".NET"
.hy
.SH dotnet command
.PP
\f[B]This article applies to:\f[R] \[u2714]\[uFE0F] .NET Core 2.1 SDK and later versions
.SH NAME
.PP
\f[C]dotnet\f[R] - The generic driver for the .NET CLI.
.SH SYNOPSIS
.PP
To get information about the available commands and the environment:
.IP
.nf
\f[C]
dotnet [--version] [--info] [--list-runtimes] [--list-sdks]

dotnet -h|--help
\f[R]
.fi
.PP
To run a command (requires SDK installation):
.IP
.nf
\f[C]
dotnet <COMMAND> [-d|--diagnostics] [-h|--help] [--verbosity <LEVEL>]
    [command-options] [arguments]
\f[R]
.fi
.PP
To run an application:
.IP
.nf
\f[C]
dotnet [--additionalprobingpath <PATH>] [--additional-deps <PATH>]
    [--fx-version <VERSION>]  [--roll-forward <SETTING>]
    <PATH_TO_APPLICATION> [arguments]

dotnet exec [--additionalprobingpath] [--additional-deps <PATH>]
    [--fx-version <VERSION>]  [--roll-forward <SETTING>]
    <PATH_TO_APPLICATION> [arguments]
\f[R]
.fi
.PP
\f[C]--roll-forward\f[R] is available since .NET Core 3.x.
Use \f[C]--roll-forward-on-no-candidate-fx\f[R] for .NET Core 2.x.
.SH DESCRIPTION
.PP
The \f[C]dotnet\f[R] command has two functions:
.IP \[bu] 2
It provides commands for working with .NET projects.
.RS 2
.PP
For example, \f[C]dotnet build\f[R] builds a project.
Each command defines its own options and arguments.
All commands support the \f[C]--help\f[R] option for printing out brief documentation about how to use the command.
.RE
.IP \[bu] 2
It runs .NET applications.
.RS 2
.PP
You specify the path to an application \f[C].dll\f[R] file to run the application.
To run the application means to find and execute the entry point, which in the case of console apps is the \f[C]Main\f[R] method.
For example, \f[C]dotnet myapp.dll\f[R] runs the \f[C]myapp\f[R] application.
See .NET application deployment to learn about deployment options.
.RE
.SH OPTIONS
.PP
Different options are available for \f[C]dotnet\f[R] by itself, for running a command, and for running an application.
.SS Options for dotnet by itself
.PP
The following options are for \f[C]dotnet\f[R] by itself.
For example, \f[C]dotnet --info\f[R].
They print out information about the environment.
.IP \[bu] 2
\f[B]\f[CB]--info\f[B]\f[R]
.RS 2
.PP
Prints out detailed information about a .NET installation and the machine environment, such as the current operating system, and commit SHA of the .NET version.
.RE
.IP \[bu] 2
\f[B]\f[CB]--version\f[B]\f[R]
.PP
Prints out the version of the .NET SDK used by dotnet commands.
Includes the effects of any global.json
.IP \[bu] 2
\f[B]\f[CB]--list-runtimes\f[B]\f[R]
.RS 2
.PP
Prints out a list of the installed .NET runtimes.
An x86 version of the SDK lists only x86 runtimes, and an x64 version of the SDK lists only x64 runtimes.
.RE
.IP \[bu] 2
\f[B]\f[CB]--list-sdks\f[B]\f[R]
.RS 2
.PP
Prints out a list of the installed .NET SDKs.
.RE
.IP \[bu] 2
\f[B]\f[CB]-?|-h|--help\f[B]\f[R]
.RS 2
.PP
Prints out a list of available commands.
.RE
.SS SDK options for running a command
.PP
The following options are for \f[C]dotnet\f[R] with a command.
For example, \f[C]dotnet build --help\f[R].
.IP \[bu] 2
\f[B]\f[CB]-d|--diagnostics\f[B]\f[R]
.RS 2
.PP
Enables diagnostic output.
.RE
.IP \[bu] 2
\f[B]\f[CB]-v|--verbosity <LEVEL>\f[B]\f[R]
.RS 2
.PP
Sets the verbosity level of the command.
Allowed values are \f[C]q[uiet]\f[R], \f[C]m[inimal]\f[R], \f[C]n[ormal]\f[R], \f[C]d[etailed]\f[R], and \f[C]diag[nostic]\f[R].
Not supported in every command.
See specific command page to determine if this option is available.
.RE
.IP \[bu] 2
\f[B]\f[CB]-?|-h|--help\f[B]\f[R]
.RS 2
.PP
Prints out documentation for a given command, such as \f[C]dotnet build --help\f[R].
.RE
.IP \[bu] 2
\f[B]\f[CB]command options\f[B]\f[R]
.RS 2
.PP
Each command defines options specific to that command.
See specific command page for a list of available options.
.RE
.SS Runtime options
.PP
The following options are available when \f[C]dotnet\f[R] runs an application.
For example, \f[C]dotnet myapp.dll --roll-forward Major\f[R].
.IP \[bu] 2
\f[B]\f[CB]--additionalprobingpath <PATH>\f[B]\f[R]
.RS 2
.PP
Path containing probing policy and assemblies to probe.
.RE
.IP \[bu] 2
\f[B]\f[CB]--additional-deps <PATH>\f[B]\f[R]
.RS 2
.PP
Path to an additional \f[I].deps.json\f[R] file.
A \f[I]deps.json\f[R] file contains a list of dependencies, compilation dependencies, and version information used to address assembly conflicts.
For more information, see Runtime Configuration Files (https://github.com/dotnet/sdk/blob/main/documentation/specs/runtime-configuration-file.md) on GitHub.
.RE
.IP \[bu] 2
\f[B]\f[CB]--depsfile <PATH_TO_DEPSFILE>\f[B]\f[R]
.RS 2
.PP
Path to the \f[I]deps.json\f[R] file.
A \f[I]deps.json\f[R] file is a configuration file that contains information about dependencies necessary to run the application.
This file is generated by the .NET SDK.
.RE
.IP \[bu] 2
\f[B]\f[CB]--runtimeconfig\f[B]\f[R]
.RS 2
.PP
Path to a \f[I]runtimeconfig.json\f[R] file.
A \f[I]runtimeconfig.json\f[R] file is a configuration file that contains run-time settings.
For more information, see .NET runtime configuration settings.
.RE
.IP \[bu] 2
\f[B]\f[CB]--roll-forward <SETTING>\f[B]\f[R] \f[B]Available starting with .NET Core SDK 3.0.\f[R]
.RS 2
.PP
Controls how roll forward is applied to the app.
The \f[C]SETTING\f[R] can be one of the following values.
If not specified, \f[C]Minor\f[R] is the default.
.IP \[bu] 2
\f[C]LatestPatch\f[R] - Roll forward to the highest patch version.
This disables minor version roll forward.
.IP \[bu] 2
\f[C]Minor\f[R] - Roll forward to the lowest higher minor version, if requested minor version is missing.
If the requested minor version is present, then the LatestPatch policy is used.
.IP \[bu] 2
\f[C]Major\f[R] - Roll forward to lowest higher major version, and lowest minor version, if requested major version is missing.
If the requested major version is present, then the Minor policy is used.
.IP \[bu] 2
\f[C]LatestMinor\f[R] - Roll forward to highest minor version, even if requested minor version is present.
Intended for component hosting scenarios.
.IP \[bu] 2
\f[C]LatestMajor\f[R] - Roll forward to highest major and highest minor version, even if requested major is present.
Intended for component hosting scenarios.
.IP \[bu] 2
\f[C]Disable\f[R] - Don\[cq]t roll forward.
Only bind to specified version.
This policy isn\[cq]t recommended for general use because it disables the ability to roll forward to the latest patches.
This value is only recommended for testing.
.PP
With the exception of \f[C]Disable\f[R], all settings will use the highest available patch version.
.PP
Roll forward behavior can also be configured in a project file property, a runtime configuration file property, and an environment variable.
For more information, see Major-version runtime roll forward.
.RE
.IP \[bu] 2
\f[B]\f[CB]--roll-forward-on-no-candidate-fx <N>\f[B]\f[R] \f[B]Available in .NET Core 2.x SDK.\f[R]
.RS 2
.PP
Defines behavior when the required shared framework is not available.
\f[C]N\f[R] can be:
.IP \[bu] 2
\f[C]0\f[R] - Disable even minor version roll forward.
.IP \[bu] 2
\f[C]1\f[R] - Roll forward on minor version, but not on major version.
This is the default behavior.
.IP \[bu] 2
\f[C]2\f[R] - Roll forward on minor and major versions.
.PP
For more information, see Roll forward.
.PP
Starting with .NET Core 3.0, this option is superseded by \f[C]--roll-forward\f[R], and that option should be used instead.
.RE
.IP \[bu] 2
\f[B]\f[CB]--fx-version <VERSION>\f[B]\f[R]
.RS 2
.PP
Version of the .NET runtime to use to run the application.
.PP
This option overrides the version of the first framework reference in the application\[cq]s \f[C].runtimeconfig.json\f[R] file.
This means it only works as expected if there\[cq]s just one framework reference.
If the application has more than one framework reference, using this option may cause errors.
.RE
.SS dotnet commands
.SS General
.PP
.TS
tab(@);
l l.
T{
Command
T}@T{
Function
T}
_
T{
dotnet build
T}@T{
Builds a .NET application.
T}
T{
dotnet build-server
T}@T{
Interacts with servers started by a build.
T}
T{
dotnet clean
T}@T{
Clean build outputs.
T}
T{
dotnet help
T}@T{
Shows more detailed documentation online for the command.
T}
T{
dotnet migrate
T}@T{
Migrates a valid Preview 2 project to a .NET Core SDK 1.0 project.
T}
T{
dotnet msbuild
T}@T{
Provides access to the MSBuild command line.
T}
T{
dotnet new
T}@T{
Initializes a C# or F# project for a given template.
T}
T{
dotnet pack
T}@T{
Creates a NuGet package of your code.
T}
T{
dotnet publish
T}@T{
Publishes a .NET framework-dependent or self-contained application.
T}
T{
dotnet restore
T}@T{
Restores the dependencies for a given application.
T}
T{
dotnet run
T}@T{
Runs the application from source.
T}
T{
dotnet sdk check
T}@T{
Shows up-to-date status of installed SDK and Runtime versions.
T}
T{
dotnet sln
T}@T{
Options to add, remove, and list projects in a solution file.
T}
T{
dotnet store
T}@T{
Stores assemblies in the runtime package store.
T}
T{
dotnet test
T}@T{
Runs tests using a test runner.
T}
.TE
.SS Project references
.PP
.TS
tab(@);
l l.
T{
Command
T}@T{
Function
T}
_
T{
dotnet add reference
T}@T{
Adds a project reference.
T}
T{
dotnet list reference
T}@T{
Lists project references.
T}
T{
dotnet remove reference
T}@T{
Removes a project reference.
T}
.TE
.SS NuGet packages
.PP
.TS
tab(@);
l l.
T{
Command
T}@T{
Function
T}
_
T{
dotnet add package
T}@T{
Adds a NuGet package.
T}
T{
dotnet remove package
T}@T{
Removes a NuGet package.
T}
.TE
.SS NuGet commands
.PP
.TS
tab(@);
l l.
T{
Command
T}@T{
Function
T}
_
T{
dotnet nuget delete
T}@T{
Deletes or unlists a package from the server.
T}
T{
dotnet nuget push
T}@T{
Pushes a package to the server and publishes it.
T}
T{
dotnet nuget locals
T}@T{
Clears or lists local NuGet resources such as http-request cache, temporary cache, or machine-wide global packages folder.
T}
T{
dotnet nuget add source
T}@T{
Adds a NuGet source.
T}
T{
dotnet nuget disable source
T}@T{
Disables a NuGet source.
T}
T{
dotnet nuget enable source
T}@T{
Enables a NuGet source.
T}
T{
dotnet nuget list source
T}@T{
Lists all configured NuGet sources.
T}
T{
dotnet nuget remove source
T}@T{
Removes a NuGet source.
T}
T{
dotnet nuget update source
T}@T{
Updates a NuGet source.
T}
.TE
.SS Workload commands
.PP
.TS
tab(@);
l l.
T{
Command
T}@T{
Function
T}
_
T{
dotnet workload install
T}@T{
Installs an optional workload.
T}
T{
dotnet workload list
T}@T{
Lists all installed workloads.
T}
T{
dotnet workload repair
T}@T{
Repairs all installed workloads.
T}
T{
dotnet workload search
T}@T{
List selected workloads or all available workloads.
T}
T{
dotnet workload uninstall
T}@T{
Uninstalls a workload.
T}
T{
dotnet workload update
T}@T{
Reinstalls all installed workloads.
T}
.TE
.SS Global, tool-path, and local tools commands
.PP
Tools are console applications that are installed from NuGet packages and are invoked from the command prompt.
You can write tools yourself or install tools written by third parties.
Tools are also known as global tools, tool-path tools, and local tools.
For more information, see .NET tools overview.
Global and tool-path tools are available starting with .NET Core SDK 2.1.
Local tools are available starting with .NET Core SDK 3.0.
.PP
.TS
tab(@);
l l.
T{
Command
T}@T{
Function
T}
_
T{
dotnet tool install
T}@T{
Installs a tool on your machine.
T}
T{
dotnet tool list
T}@T{
Lists all global, tool-path, or local tools currently installed on your machine.
T}
T{
dotnet tool search
T}@T{
Searches NuGet.org for tools that have the specified search term in their name or metadata.
T}
T{
dotnet tool uninstall
T}@T{
Uninstalls a tool from your machine.
T}
T{
dotnet tool update
T}@T{
Updates a tool that is installed on your machine.
T}
.TE
.SS Additional tools
.PP
Starting with .NET Core SDK 2.1.300, a number of tools that were available only on a per project basis using \f[C]DotnetCliToolReference\f[R] are now available as part of the .NET SDK.
These tools are listed in the following table:
.PP
.TS
tab(@);
l l.
T{
Tool
T}@T{
Function
T}
_
T{
dev-certs
T}@T{
Creates and manages development certificates.
T}
T{
ef
T}@T{
Entity Framework Core command-line tools.
T}
T{
sql-cache
T}@T{
SQL Server cache command-line tools.
T}
T{
user-secrets
T}@T{
Manages development user secrets.
T}
T{
watch
T}@T{
Starts a file watcher that runs a command when files change.
T}
.TE
.PP
For more information about each tool, type \f[C]dotnet <tool-name> --help\f[R].
.SH EXAMPLES
.PP
Create a new .NET console application:
.IP
.nf
\f[C]
dotnet new console
\f[R]
.fi
.PP
Build a project and its dependencies in a given directory:
.IP
.nf
\f[C]
dotnet build
\f[R]
.fi
.PP
Run an application:
.IP
.nf
\f[C]
dotnet myapp.dll
\f[R]
.fi
.SS See also
.IP \[bu] 2
Environment variables used by .NET SDK, .NET CLI, and .NET runtime
.IP \[bu] 2
Runtime Configuration Files (https://github.com/dotnet/sdk/blob/main/documentation/specs/runtime-configuration-file.md)
.IP \[bu] 2
\&.NET runtime configuration settings
