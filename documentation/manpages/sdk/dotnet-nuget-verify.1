'\" t
.\" Automatically generated by Pandoc 2.18
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "dotnet-nuget-verify" "1" "2022-11-08" "" ".NET Documentation"
.hy
.SH dotnet nuget verify
.PP
\f[B]This article applies to:\f[R] \[u2714]\[uFE0F] .NET 5.0.100-rc.2.x SDK and later versions
.SH NAME
.PP
dotnet-nuget-verify - Verifies a signed NuGet package.
.SH SYNOPSIS
.IP
.nf
\f[C]
dotnet nuget verify [<package-path(s)>]
    [--all]
    [--certificate-fingerprint <FINGERPRINT>]
    [-v|--verbosity <LEVEL>]
    [--configfile <FILE>]

dotnet nuget verify -h|--help
\f[R]
.fi
.SH DESCRIPTION
.PP
The \f[V]dotnet nuget verify\f[R] command verifies a signed NuGet package.
.RS
.PP
This command requires a certificate root store that is valid for both code signing and timestamping.
See NuGet signed package verification for details.
.RE
.SH ARGUMENTS
.IP \[bu] 2
\f[B]\f[VB]package-path(s)\f[B]\f[R]
.RS 2
.PP
Specifies the file path to the package(s) to be verified.
Multiple position arguments can be passed in to verify multiple packages.
.RE
.SH OPTIONS
.IP \[bu] 2
\f[B]\f[VB]--all\f[B]\f[R]
.RS 2
.PP
Specifies that all verifications possible should be performed on the package(s).
By default, only \f[V]signatures\f[R] are verified.
.RE
.RS
.PP
This command currently supports only \f[V]signature\f[R] verification.
.RE
.IP \[bu] 2
\f[B]\f[VB]--certificate-fingerprint <FINGERPRINT>\f[B]\f[R]
.RS 2
.PP
Verify that the signer certificate matches with one of the specified \f[V]SHA256\f[R] fingerprints.
This option can be supplied multiple times to provide multiple fingerprints.
.RE
.IP \[bu] 2
\f[B]\f[VB]-v|--verbosity <LEVEL>\f[B]\f[R]
.RS 2
.PP
Sets the verbosity level of the command.
Allowed values are \f[V]q[uiet]\f[R], \f[V]m[inimal]\f[R], \f[V]n[ormal]\f[R], \f[V]d[etailed]\f[R], and \f[V]diag[nostic]\f[R].
The default is \f[V]minimal\f[R].
For more information, see <xref:Microsoft.Build.Framework.LoggerVerbosity>.
.PP
The following table shows what is displayed for each verbosity level.
.PP
.TS
tab(@);
l l l l l l.
T{
\[u200B]
T}@T{
\f[V]q[uiet]\f[R]
T}@T{
\f[V]m[inimal]\f[R]
T}@T{
\f[V]n[ormal]\f[R]
T}@T{
\f[V]d[etailed]\f[R]
T}@T{
\f[V]diag[nostic]\f[R]
T}
_
T{
\f[V]Certificate chain Information\f[R]
T}@T{
\[u274C]
T}@T{
\[u274C]
T}@T{
\[u274C]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}
T{
\f[V]Path to package being verified\f[R]
T}@T{
\[u274C]
T}@T{
\[u274C]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}
T{
\f[V]Hashing algorithm used for signature\f[R]
T}@T{
\[u274C]
T}@T{
\[u274C]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}
T{
\f[V]Author/Repository Certificate -> SHA1 hash\f[R]
T}@T{
\[u274C]
T}@T{
\[u274C]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}
T{
\f[V]Author/Repository Certificate -> Issued By\f[R]
T}@T{
\[u274C]
T}@T{
\[u274C]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}
T{
\f[V]Timestamp Certificate -> Issued By\f[R]
T}@T{
\[u274C]
T}@T{
\[u274C]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}
T{
\f[V]Timestamp Certificate -> SHA-256 hash\f[R]
T}@T{
\[u274C]
T}@T{
\[u274C]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}
T{
\f[V]Timestamp Certificate -> Validity period\f[R]
T}@T{
\[u274C]
T}@T{
\[u274C]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}
T{
\f[V]Timestamp Certificate -> SHA1 hash\f[R]
T}@T{
\[u274C]
T}@T{
\[u274C]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}
T{
\f[V]Timestamp Certificate -> Subject name\f[R]
T}@T{
\[u274C]
T}@T{
\[u274C]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}
T{
\f[V]Author/Repository Certificate -> Subject name\f[R]
T}@T{
\[u274C]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}
T{
\f[V]Author/Repository Certificate -> SHA-256 hash\f[R]
T}@T{
\[u274C]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}
T{
\f[V]Author/Repository Certificate -> Validity period\f[R]
T}@T{
\[u274C]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}
T{
\f[V]Author/Repository Certificate -> Service index URL (If applicable)\f[R]
T}@T{
\[u274C]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}
T{
\f[V]Package name being verified\f[R]
T}@T{
\[u274C]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}
T{
\f[V]Type of signature (author or repository)\f[R]
T}@T{
\[u274C]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}@T{
\[u2714]\[uFE0F]
T}
.TE
.PP
\[u274C] indicates details that are \f[B]not\f[R] displayed.
\[u2714]\[uFE0F] indicates details that are displayed.
.RE
.IP \[bu] 2
\f[B]\f[VB]--configfile <FILE>\f[B]\f[R]
.RS 2
.PP
The NuGet configuration file (\f[I]nuget.config\f[R]) to use.
If specified, only the settings from this file will be used.
If not specified, the hierarchy of configuration files from the current directory will be used.
For more information, see Common NuGet Configurations.
.RE
.IP \[bu] 2
\f[B]\f[VB]-?|-h|--help\f[B]\f[R]
.RS 2
.PP
Prints out a description of how to use the command.
.RE
.SH EXAMPLES
.IP \[bu] 2
Verify \f[I]foo.nupkg\f[R]:
.RS 2
.IP
.nf
\f[C]
dotnet nuget verify foo.nupkg
\f[R]
.fi
.RE
.IP \[bu] 2
Verify multiple NuGet packages - \f[I]foo.nupkg\f[R] and \f[I]all .nupkg files in the directory specified\f[R]:
.RS 2
.IP
.nf
\f[C]
dotnet nuget verify foo.nupkg c:\[rs]mydir\[rs]*.nupkg
\f[R]
.fi
.RE
.IP \[bu] 2
Verify \f[I]foo.nupkg\f[R] signature matches with the specified certificate fingerprint:
.RS 2
.IP
.nf
\f[C]
dotnet nuget verify foo.nupkg --certificate-fingerprint CE40881FF5F0AD3E58965DA20A9F571EF1651A56933748E1BF1C99E537C4E039
\f[R]
.fi
.RE
.IP \[bu] 2
Verify \f[I]foo.nupkg\f[R] signature matches with one of the specified certificate fingerprints:
.RS 2
.IP
.nf
\f[C]
dotnet nuget verify foo.nupkg --certificate-fingerprint CE40881FF5F0AD3E58965DA20A9F571EF1651A56933748E1BF1C99E537C4E039 --certificate-fingerprint EC10992GG5F0AD3E58965DA20A9F571EF1651A56933748E1BF1C99E537C4E027
\f[R]
.fi
.RE
.IP \[bu] 2
Verify the signature of \f[I]foo.nupkg\f[R] by using settings (\f[V]packagesources\f[R] and \f[V]trustedSigners\f[R]) only from the specified \f[I]nuget.config\f[R] file:
.RS 2
.IP
.nf
\f[C]
dotnet nuget verify foo.nupkg --configfile ..\[rs]Settings\[rs]nuget.config
\f[R]
.fi
.RE
