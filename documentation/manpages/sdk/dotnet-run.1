.\" Automatically generated by Pandoc 2.18
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "dotnet-run" "1" "2022-10-10" "" ".NET Documentation"
.hy
.SH dotnet run
.PP
\f[B]This article applies to:\f[R] \[u2714]\[uFE0F] .NET Core 3.1 SDK and later versions
.SH NAME
.PP
dotnet-run - Runs source code without any explicit compile or launch commands.
.SH SYNOPSIS
.IP
.nf
\f[C]
dotnet run [-a|--arch <ARCHITECTURE>] [-c|--configuration <CONFIGURATION>]
    [-f|--framework <FRAMEWORK>] [--force] [--interactive]
    [--launch-profile <NAME>] [--no-build]
    [--no-dependencies] [--no-launch-profile] [--no-restore]
    [--os <OS>] [--project <PATH>] [-r|--runtime <RUNTIME_IDENTIFIER>]
    [-v|--verbosity <LEVEL>] [[--] [application arguments]]

dotnet run -h|--help
\f[R]
.fi
.SH DESCRIPTION
.PP
The \f[V]dotnet run\f[R] command provides a convenient option to run your application from the source code with one command.
It\[cq]s useful for fast iterative development from the command line.
The command depends on the \f[V]dotnet build\f[R] command to build the code.
Any requirements for the build, such as that the project must be restored first, apply to \f[V]dotnet run\f[R] as well.
.RS
.PP
\f[V]dotnet run\f[R] doesn\[cq]t respect arguments like \f[V]/property:property=value\f[R], which are respected by \f[V]dotnet build\f[R].
.RE
.PP
Output files are written into the default location, which is \f[V]bin/<configuration>/<target>\f[R].
For example if you have a \f[V]netcoreapp2.1\f[R] application and you run \f[V]dotnet run\f[R], the output is placed in \f[V]bin/Debug/netcoreapp2.1\f[R].
Files are overwritten as needed.
Temporary files are placed in the \f[V]obj\f[R] directory.
.PP
If the project specifies multiple frameworks, executing \f[V]dotnet run\f[R] results in an error unless the \f[V]-f|--framework <FRAMEWORK>\f[R] option is used to specify the framework.
.PP
The \f[V]dotnet run\f[R] command is used in the context of projects, not built assemblies.
If you\[cq]re trying to run a framework-dependent application DLL instead, you must use dotnet without a command.
For example, to run \f[V]myapp.dll\f[R], use:
.IP
.nf
\f[C]
dotnet myapp.dll
\f[R]
.fi
.PP
For more information on the \f[V]dotnet\f[R] driver, see the .NET Command Line Tools (CLI) topic.
.PP
To run the application, the \f[V]dotnet run\f[R] command resolves the dependencies of the application that are outside of the shared runtime from the NuGet cache.
Because it uses cached dependencies, it\[cq]s not recommended to use \f[V]dotnet run\f[R] to run applications in production.
Instead, create a deployment using the \f[V]dotnet publish\f[R] command and deploy the published output.
.SS Implicit restore
.PP
You don\[cq]t have to run \f[V]dotnet restore\f[R] because it\[cq]s run implicitly by all commands that require a restore to occur, such as \f[V]dotnet new\f[R], \f[V]dotnet build\f[R], \f[V]dotnet run\f[R], \f[V]dotnet test\f[R], \f[V]dotnet publish\f[R], and \f[V]dotnet pack\f[R].
To disable implicit restore, use the \f[V]--no-restore\f[R] option.
.PP
The \f[V]dotnet restore\f[R] command is still useful in certain scenarios where explicitly restoring makes sense, such as continuous integration builds in Azure DevOps Services or in build systems that need to explicitly control when the restore occurs.
.PP
For information about how to manage NuGet feeds, see the \f[V]dotnet restore\f[R] documentation.
.PP
This command supports the \f[V]dotnet restore\f[R] options when passed in the long form (for example, \f[V]--source\f[R]).
Short form options, such as \f[V]-s\f[R], are not supported.
.SS Workload manifest downloads
.PP
When you run this command, it initiates an asynchronous background download of advertising manifests for workloads.
If the download is still running when this command finishes, the download is stopped.
For more information, see Advertising manifests.
.SH OPTIONS
.IP \[bu] 2
\f[B]\f[VB]--\f[B]\f[R]
.RS 2
.PP
Delimits arguments to \f[V]dotnet run\f[R] from arguments for the application being run.
All arguments after this delimiter are passed to the application run.
.RE
.IP \[bu] 2
\f[B]\f[VB]-a|--arch <ARCHITECTURE>\f[B]\f[R]
.RS 2
.PP
Specifies the target architecture.
This is a shorthand syntax for setting the Runtime Identifier (RID), where the provided value is combined with the default RID.
For example, on a \f[V]win-x64\f[R] machine, specifying \f[V]--arch x86\f[R] sets the RID to \f[V]win-x86\f[R].
If you use this option, don\[cq]t use the \f[V]-r|--runtime\f[R] option.
Available since .NET 6 Preview 7.
.RE
.IP \[bu] 2
\f[B]\f[VB]-c|--configuration <CONFIGURATION>\f[B]\f[R]
.RS 2
.PP
Defines the build configuration.
The default for most projects is \f[V]Debug\f[R], but you can override the build configuration settings in your project.
.RE
.IP \[bu] 2
\f[B]\f[VB]-f|--framework <FRAMEWORK>\f[B]\f[R]
.RS 2
.PP
Builds and runs the app using the specified framework.
The framework must be specified in the project file.
.RE
.IP \[bu] 2
\f[B]\f[VB]--force\f[B]\f[R]
.RS 2
.PP
Forces all dependencies to be resolved even if the last restore was successful.
Specifying this flag is the same as deleting the \f[I]project.assets.json\f[R] file.
.RE
.IP \[bu] 2
\f[B]\f[VB]-?|-h|--help\f[B]\f[R]
.RS 2
.PP
Prints out a description of how to use the command.
.RE
.IP \[bu] 2
\f[B]\f[VB]--interactive\f[B]\f[R]
.RS 2
.PP
Allows the command to stop and wait for user input or action.
For example, to complete authentication.
Available since .NET Core 3.0 SDK.
.RE
.IP \[bu] 2
\f[B]\f[VB]--launch-profile <NAME>\f[B]\f[R]
.RS 2
.PP
The name of the launch profile (if any) to use when launching the application.
Launch profiles are defined in the \f[I]launchSettings.json\f[R] file and are typically called \f[V]Development\f[R], \f[V]Staging\f[R], and \f[V]Production\f[R].
For more information, see Working with multiple environments.
.RE
.IP \[bu] 2
\f[B]\f[VB]--no-build\f[B]\f[R]
.RS 2
.PP
Doesn\[cq]t build the project before running.
It also implicitly sets the \f[V]--no-restore\f[R] flag.
.RE
.IP \[bu] 2
\f[B]\f[VB]--no-dependencies\f[B]\f[R]
.RS 2
.PP
When restoring a project with project-to-project (P2P) references, restores the root project and not the references.
.RE
.IP \[bu] 2
\f[B]\f[VB]--no-launch-profile\f[B]\f[R]
.RS 2
.PP
Doesn\[cq]t try to use \f[I]launchSettings.json\f[R] to configure the application.
.RE
.IP \[bu] 2
\f[B]\f[VB]--no-restore\f[B]\f[R]
.RS 2
.PP
Doesn\[cq]t execute an implicit restore when running the command.
.RE
.IP \[bu] 2
\f[B]\f[VB]--os <OS>\f[B]\f[R]
.RS 2
.PP
Specifies the target operating system (OS).
This is a shorthand syntax for setting the Runtime Identifier (RID), where the provided value is combined with the default RID.
For example, on a \f[V]win-x64\f[R] machine, specifying \f[V]--os linux\f[R] sets the RID to \f[V]linux-x64\f[R].
If you use this option, don\[cq]t use the \f[V]-r|--runtime\f[R] option.
Available since .NET 6.
.RE
.IP \[bu] 2
\f[B]\f[VB]--project <PATH>\f[B]\f[R]
.RS 2
.PP
Specifies the path of the project file to run (folder name or full path).
If not specified, it defaults to the current directory.
.PP
The \f[V]-p\f[R] abbreviation for \f[V]--project\f[R] is deprecated starting in .NET 6 SDK.
For a limited time starting in .NET 6 RC1 SDK, \f[V]-p\f[R] can still be used for \f[V]--project\f[R] despite the deprecation warning.
If the argument provided for the option doesn\[cq]t contain \f[V]=\f[R], the command accepts \f[V]-p\f[R] as short for \f[V]--project\f[R].
Otherwise, the command assumes that \f[V]-p\f[R] is short for \f[V]--property\f[R].
This flexible use of \f[V]-p\f[R] for \f[V]--project\f[R] will be phased out in .NET 7.
.RE
.IP \[bu] 2
\f[B]\f[VB]--property:<NAME>=<VALUE>\f[B]\f[R]
.RS 2
.PP
Sets one or more MSBuild properties.
Specify multiple properties delimited by semicolons or by repeating the option:
.IP
.nf
\f[C]
--property:<NAME1>=<VALUE1>;<NAME2>=<VALUE2>
--property:<NAME1>=<VALUE1> --property:<NAME2>=<VALUE2>
\f[R]
.fi
.PP
The short form \f[V]-p\f[R] can be used for \f[V]--property\f[R].
If the argument provided for the option contains \f[V]=\f[R], \f[V]-p\f[R] is accepted as short for \f[V]--property\f[R].
Otherwise, the command assumes that \f[V]-p\f[R] is short for \f[V]--project\f[R].
.PP
To pass \f[V]--property\f[R] to the application rather than set an MSBuild property, provide the option after the \f[V]--\f[R] syntax separator, for example:
.IP
.nf
\f[C]
dotnet run -- --property name=value
\f[R]
.fi
.RE
.IP \[bu] 2
\f[B]\f[VB]-r|--runtime <RUNTIME_IDENTIFIER>\f[B]\f[R]
.RS 2
.PP
Specifies the target runtime to restore packages for.
For a list of Runtime Identifiers (RIDs), see the RID catalog.
.RE
.IP \[bu] 2
\f[B]\f[VB]-v|--verbosity <LEVEL>\f[B]\f[R]
.RS 2
.PP
Sets the verbosity level of the command.
Allowed values are \f[V]q[uiet]\f[R], \f[V]m[inimal]\f[R], \f[V]n[ormal]\f[R], \f[V]d[etailed]\f[R], and \f[V]diag[nostic]\f[R].
The default is \f[V]minimal\f[R].
For more information, see <xref:Microsoft.Build.Framework.LoggerVerbosity>.
.RE
.SH EXAMPLES
.IP \[bu] 2
Run the project in the current directory:
.RS 2
.IP
.nf
\f[C]
dotnet run
\f[R]
.fi
.RE
.IP \[bu] 2
Run the specified project:
.RS 2
.IP
.nf
\f[C]
dotnet run --project ./projects/proj1/proj1.csproj
\f[R]
.fi
.RE
.IP \[bu] 2
Run the project in the current directory, specifying Release configuration:
.RS 2
.IP
.nf
\f[C]
dotnet run --property:Configuration=Release
\f[R]
.fi
.RE
.IP \[bu] 2
Run the project in the current directory (the \f[V]--help\f[R] argument in this example is passed to the application, since the blank \f[V]--\f[R] option is used):
.RS 2
.IP
.nf
\f[C]
dotnet run --configuration Release -- --help
\f[R]
.fi
.RE
.IP \[bu] 2
Restore dependencies and tools for the project in the current directory only showing minimal output and then run the project:
.RS 2
.IP
.nf
\f[C]
dotnet run --verbosity m
\f[R]
.fi
.RE
