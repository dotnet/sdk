.\" Automatically generated by Pandoc 2.18
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "dotnet-package-add" "1" "2025-06-13" "" ".NET Documentation"
.hy
.SH dotnet package add
.PP
\f[B]This article applies to:\f[R] \[u2714]\[uFE0F] .NET Core 3.1 SDK and later versions
.SH NAME
.PP
dotnet-package-add - Adds or updates a package reference in a project file.
.RS
.PP
If you\[cq]re using .NET 9 SDK or earlier, use the \[lq]verb first\[rq] form (dotnet-add-package) instead.
The \[lq]noun first\[rq] form was introduced in .NET 10.
For more information, see More consistent command order.
.RE
.SH SYNOPSIS
.IP
.nf
\f[C]
dotnet package add <PACKAGE_NAME>
    [-f|--framework <FRAMEWORK>] [--interactive] [--project <PROJECT>]
    [-n|--no-restore] [--package-directory <PACKAGE_DIRECTORY>]
    [--prerelease] [-s|--source <SOURCE>] [-v|--version <VERSION>]

dotnet package add -h|--help
\f[R]
.fi
.SH DESCRIPTION
.PP
The \f[V]dotnet package add\f[R] command provides a convenient option to add or update a package reference in a project file.
When you run the command, there\[cq]s a compatibility check to ensure the package is compatible with the frameworks in the project.
If the check passes and the package isn\[cq]t referenced in the project file, a \f[V]<PackageReference>\f[R] element is added to the project file.
If the check passes and the package is already referenced in the project file, the \f[V]<PackageReference>\f[R] element is updated to the latest compatible version.
After the project file is updated, dotnet restore is run.
.PP
For example, adding \f[V]Microsoft.EntityFrameworkCore\f[R] to \f[I]ToDo.csproj\f[R] produces output similar to the following example:
.IP
.nf
\f[C]
  Determining projects to restore...
  Writing C:\[rs]Users\[rs]username\[rs]AppData\[rs]Local\[rs]Temp\[rs]tmp24A8.tmp
info : Adding PackageReference for package \[aq]Microsoft.EntityFrameworkCore\[aq] into project \[aq]C:\[rs]ToDo\[rs]ToDo.csproj\[aq].
info :   CACHE https://api.nuget.org/v3/registration5-gz-semver2/microsoft.entityframeworkcore/index.json
info :   GET https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/516521bf-6417-457e-9a9c-0a4bdfde03e7/nuget/v3/registrations2-semver2/microsoft.entityframeworkcore/index.json
info :   CACHE https://api.nuget.org/v3/registration5-gz-semver2/microsoft.entityframeworkcore/page/0.0.1-alpha/3.1.3.json
info :   CACHE https://api.nuget.org/v3/registration5-gz-semver2/microsoft.entityframeworkcore/page/3.1.4/7.0.0-preview.2.22153.1.json
info :   CACHE https://api.nuget.org/v3/registration5-gz-semver2/microsoft.entityframeworkcore/page/7.0.0-preview.3.22175.1/7.0.0-preview.3.22175.1.json
info :   NotFound https://pkgs.dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_packaging/516521bf-6417-457e-9a9c-0a4bdfde03e7/nuget/v3/registrations2-semver2/microsoft.entityframeworkcore/index.json 257ms
info : Restoring packages for C:\[rs]ToDo\[rs]ToDo.csproj...
info : Package \[aq]Microsoft.EntityFrameworkCore\[aq] is compatible with all the specified frameworks in project \[aq]C:\[rs]ToDo\[rs]ToDo.csproj\[aq].
info : PackageReference for package \[aq]Microsoft.EntityFrameworkCore\[aq] version \[aq]6.0.4\[aq] added to file \[aq]C:\[rs]ToDo\[rs]ToDo.csproj\[aq].
info : Writing assets file to disk. Path: C:\[rs]ToDo\[rs]obj\[rs]project.assets.json
log  : Restored C:\[rs]ToDo\[rs]ToDo.csproj (in 171 ms).
\f[R]
.fi
.PP
The \f[I]ToDo.csproj\f[R] file now contains a \f[V]<PackageReference>\f[R] element for the referenced package.
.IP
.nf
\f[C]
<PackageReference Include=\[dq]Microsoft.EntityFrameworkCore\[dq] Version=\[dq]6.0.4\[dq] />
\f[R]
.fi
.PP
If the project is onboarded onto Central Package Management (CPM) (https://devblogs.microsoft.com/nuget/introducing-central-package-management/) the \f[V]<PackageVersion>\f[R] element in the \f[V]Directory.Packages.props file\f[R] is added/updated and the \f[V]<PackageReference>\f[R] element is added to the project file.
.PP
The following scenarios are currently supported.
These examples assume that the latest version of \f[V]Microsoft.EntityFrameworkCore\f[R] is 6.0.4.
Additional scenarios related to CPM are documented in this design spec (https://github.com/NuGet/Home/pull/11915).
.PP
Scenario 1: \f[V]<PackageReference>\f[R] does not exist in the project file, \f[V]<PackageVersion>\f[R] element does not exist in the \f[V]Directory.Packages.props file\f[R], and the version argument is not passed from the commandline.
.PP
CLI command that is executed: \f[V]dotnet package add Microsoft.EntityFrameworkCore --project ToDo.csproj\f[R]
.PP
The \f[V]<PackageVersion>\f[R] element is added to the \f[V]Directory.Packages.props file\f[R].
.IP
.nf
\f[C]
<PackageVersion Include=\[dq]Microsoft.EntityFrameworkCore\[dq] Version=\[dq]6.0.4\[dq] />
\f[R]
.fi
.PP
The \f[V]<PackageReference>\f[R] element is added to the project file.
.IP
.nf
\f[C]
<PackageReference Include=\[dq]Microsoft.EntityFrameworkCore\[dq] />
\f[R]
.fi
.PP
Scenario 2: \f[V]<PackageReference>\f[R] does not exist in the project file, \f[V]<PackageVersion>\f[R] element does not exist in the \f[V]Directory.Packages.props file\f[R], and the version argument is passed from the commandline.
.PP
CLI command that is executed: \f[V]dotnet package add Microsoft.EntityFrameworkCore --version 5.0.4 --project ToDo.csproj\f[R]
.PP
The \f[V]<PackageVersion>\f[R] element is added to the \f[V]Directory.Packages.props file\f[R].
.IP
.nf
\f[C]
<PackageVersion Include=\[dq]Microsoft.EntityFrameworkCore\[dq] Version=\[dq]5.0.4\[dq] />
\f[R]
.fi
.PP
The \f[V]<PackageReference>\f[R] element is added to the project file.
.IP
.nf
\f[C]
<PackageReference Include=\[dq]Microsoft.EntityFrameworkCore\[dq] />
\f[R]
.fi
.PP
Scenario 3: \f[V]<PackageReference>\f[R] does not exist in the project file, \f[V]<PackageVersion>\f[R] element does exist in the \f[V]Directory.Packages.props file\f[R], and the version argument is not passed from the commandline.
.PP
CLI command that is executed: \f[V]dotnet package add Microsoft.EntityFrameworkCore --project ToDo.csproj\f[R]
.PP
The \f[V]<PackageVersion>\f[R] element is added to the \f[V]Directory.Packages.props file\f[R].
.IP
.nf
\f[C]
<PackageVersion Include=\[dq]Microsoft.EntityFrameworkCore\[dq] Version=\[dq]6.0.4\[dq] />
\f[R]
.fi
.PP
The \f[V]<PackageReference>\f[R] element is added to the project file.
.IP
.nf
\f[C]
<PackageReference Include=\[dq]Microsoft.EntityFrameworkCore\[dq] />
\f[R]
.fi
.PP
Scenario 4: \f[V]<PackageReference>\f[R] does not exist in the project file, \f[V]<PackageVersion>\f[R] element does exist in the \f[V]Directory.Packages.props file\f[R], and the version argument is passed from the commandline.
.PP
CLI command that is executed: \f[V]dotnet package add Microsoft.EntityFrameworkCore --version 5.0.4 --project ToDo.csproj\f[R]
.PP
The \f[V]<PackageVersion>\f[R] element is added to the \f[V]Directory.Packages.props file\f[R].
.IP
.nf
\f[C]
<PackageVersion Include=\[dq]Microsoft.EntityFrameworkCore\[dq] Version=\[dq]5.0.4\[dq] />
\f[R]
.fi
.PP
The \f[V]<PackageReference>\f[R] element is added to the project file.
.IP
.nf
\f[C]
<PackageReference Include=\[dq]Microsoft.EntityFrameworkCore\[dq] />
\f[R]
.fi
.SS Implicit restore
.PP
You don\[cq]t have to run \f[V]dotnet restore\f[R] because it\[cq]s run implicitly by all commands that require a restore to occur, such as \f[V]dotnet new\f[R], \f[V]dotnet build\f[R], \f[V]dotnet run\f[R], \f[V]dotnet test\f[R], \f[V]dotnet publish\f[R], and \f[V]dotnet pack\f[R].
To disable implicit restore, use the \f[V]--no-restore\f[R] option.
.PP
The \f[V]dotnet restore\f[R] command is still useful in certain scenarios where explicitly restoring makes sense, such as continuous integration builds in Azure DevOps Services or in build systems that need to explicitly control when the restore occurs.
.PP
For information about how to manage NuGet feeds, see the \f[V]dotnet restore\f[R] documentation.
.SH ARGUMENTS
.IP \[bu] 2
\f[B]\f[VB]PROJECT\f[B]\f[R]
.RS 2
.PP
Specifies the project file.
If not specified, the command searches the current directory for one.
.RE
.IP \[bu] 2
\f[B]\f[VB]PACKAGE_NAME\f[B]\f[R]
.RS 2
.PP
The package reference to add.
.RE
.SH OPTIONS
.IP \[bu] 2
\f[B]\f[VB]-f|--framework <FRAMEWORK>\f[B]\f[R]
.RS 2
.PP
Adds a package reference only when targeting a specific framework.
.RE
.IP \[bu] 2
\f[B]\f[VB]-?|-h|--help\f[B]\f[R]
.RS 2
.PP
Prints out a description of how to use the command.
.RE
.IP \[bu] 2
\f[B]\f[VB]--interactive\f[B]\f[R]
.RS 2
.PP
Allows the command to stop and wait for user input or action.
For example, to complete authentication.
.RE
.IP \[bu] 2
\f[B]\f[VB]-n|--no-restore\f[B]\f[R]
.RS 2
.PP
Adds a package reference without performing a restore preview and compatibility check.
.RE
.IP \[bu] 2
\f[B]\f[VB]--package-directory <PACKAGE_DIRECTORY>\f[B]\f[R]
.RS 2
.PP
The directory where to restore the packages.
The default package restore location is \f[V]%userprofile%\[rs].nuget\[rs]packages\f[R] on Windows and \f[V]\[ti]/.nuget/packages\f[R] on macOS and Linux.
For more information, see Managing the global packages, cache, and temp folders in NuGet.
.RE
.IP \[bu] 2
\f[B]\f[VB]--prerelease\f[B]\f[R]
.RS 2
.PP
Allows prerelease packages to be installed.
Available since .NET Core 5 SDK
.RE
.IP \[bu] 2
\f[B]\f[VB]-s|--source <SOURCE>\f[B]\f[R]
.RS 2
.PP
The URI of the NuGet package source to use during the restore operation.
.RE
.IP \[bu] 2
\f[B]\f[VB]-v|--version <VERSION>\f[B]\f[R]
.RS 2
.PP
Version of the package.
See NuGet package versioning.
.RE
.SH EXAMPLES
.IP \[bu] 2
Add \f[V]Microsoft.EntityFrameworkCore\f[R] NuGet package to a project:
.RS 2
.IP
.nf
\f[C]
dotnet package add Microsoft.EntityFrameworkCore
\f[R]
.fi
.RE
.IP \[bu] 2
Add a specific version of a package to a project:
.RS 2
.IP
.nf
\f[C]
dotnet package add Microsoft.Azure.DocumentDB.Core -v 1.0.0 --project ToDo.csproj
\f[R]
.fi
.RE
.IP \[bu] 2
Add a package using a specific NuGet source:
.RS 2
.IP
.nf
\f[C]
dotnet package add Microsoft.AspNetCore.StaticFiles -s https://dotnet.myget.org/F/dotnet-core/api/v3/index.json
\f[R]
.fi
.RE
.SH SEE ALSO
.IP \[bu] 2
Managing the global packages, cache, and temp folders in NuGet
.IP \[bu] 2
NuGet package versioning
