name: Fix completion snapshots on command

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  fix-completions:
    # Only run on PR comments that start with /fixcompletions
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/fixcompletions')
    runs-on: ubuntu-latest
    
    steps:
      - name: React to comment
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'eyes'
            });
      
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Checkout PR branch
        run: |
          gh pr checkout ${{ github.event.issue.number }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build repository
        id: build
        run: |
          chmod +x ./build.sh
          ./build.sh
        continue-on-error: true
        timeout-minutes: 15
      
      - name: Run completion tests
        id: test
        if: steps.build.outcome == 'success'
        run: |
          # Use the repo-local dotnet that was built
          ./.dotnet/dotnet test test/dotnet.Tests/dotnet.Tests.csproj --filter "Name~VerifyCompletions"
        continue-on-error: true
        timeout-minutes: 10
      
      - name: Compare snapshots
        id: compare
        if: steps.test.outcome != 'skipped'
        run: |
          dotnet restore test/dotnet.Tests/ /t:CompareCliSnapshots
        continue-on-error: true
      
      - name: Check for snapshot changes
        id: check-changes
        if: steps.compare.outcome == 'success'
        run: |
          # Check if there are changes to snapshot files
          if git diff --name-only test/dotnet.Tests/CompletionTests/snapshots/ | grep -E '\.received\.'; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changed snapshot files:"
            git diff --name-only test/dotnet.Tests/CompletionTests/snapshots/
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Update verified snapshots
        id: update
        if: steps.check-changes.outputs.changes == 'true'
        run: |
          # This renames .received.* files to .verified.*
          dotnet restore test/dotnet.Tests/ /t:UpdateCliSnapshots
        continue-on-error: true
      
      - name: Commit and push snapshot changes
        id: commit
        if: steps.update.outcome == 'success'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Add snapshot files
          git add test/dotnet.Tests/CompletionTests/snapshots/
          
          # Create commit
          COMMIT_DATE=$(date -u +"%Y-%m-%d")
          git commit -m "Update CLI completion snapshots - $COMMIT_DATE"
          
          # Push to the PR branch
          git push
        continue-on-error: true
      
      - name: Comment on PR - Success
        if: steps.commit.outcome == 'success'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: '✅ CLI completion snapshots have been updated and committed to this PR.'
            });
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: '+1'
            });
      
      - name: Comment on PR - No changes
        if: steps.compare.outcome == 'success' && steps.check-changes.outputs.changes == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: 'ℹ️ No completion snapshot files needed to be updated.'
            });
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: '+1'
            });
      
      - name: Comment on PR - Failure
        if: steps.build.outcome == 'failure' || (steps.test.outcome == 'failure' && steps.compare.outcome != 'success') || (steps.check-changes.outputs.changes == 'true' && (steps.update.outcome == 'failure' || steps.commit.outcome == 'failure'))
        uses: actions/github-script@v7
        with:
          script: |
            let errorMsg = '❌ Failed to update completion snapshots.';
            
            if ('${{ steps.build.outcome }}' === 'failure') {
              errorMsg += ' The build failed.';
            } else if ('${{ steps.update.outcome }}' === 'failure') {
              errorMsg += ' Could not update snapshot files.';
            } else if ('${{ steps.commit.outcome }}' === 'failure') {
              errorMsg += ' Could not commit changes.';
            }
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: errorMsg + ' Please check the workflow logs for details.'
            });
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'confused'
            });
