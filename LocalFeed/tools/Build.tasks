<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <UsingTask TaskName="CreateBuildNumber" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
        <ParameterGroup>
            <BuildNumber ParameterType="System.Int32" Output="true" />
            <StartYear ParameterType="System.Int32" Required="true" />
            <BaseBuildNumber ParameterType="System.Int32" />
        </ParameterGroup>
        <Task>
            <Using Namespace="System" />
            <Using Namespace="Microsoft.Build.Framework" />
            <Using Namespace="Microsoft.Build.Utilities" />
            <Code Type="Fragment" Language="cs">
                <![CDATA[
                var now = DateTime.Now;
                if (BaseBuildNumber == 0)
                {
                    BaseBuildNumber = 10000;
                }
                BuildNumber = BaseBuildNumber+((((now.Year-StartYear)*12)+now.Month)*100)+now.Day;
                ]]>
            </Code>
        </Task>
    </UsingTask>

    <UsingTask TaskName="DownloadFile" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
        <ParameterGroup>
            <Address ParameterType="System.String" Required="true" />
            <FileName ParameterType="System.String" Required="true" />
        </ParameterGroup>
        <Task>
            <Using Namespace="System" />
            <Using Namespace="System.Collections.Generic" />
            <Using Namespace="System.Net" />
            <Using Namespace="Microsoft.Build.Framework" />
            <Using Namespace="Microsoft.Build.Utilities" />
            <Code Type="Fragment" Language="cs">
                <![CDATA[
                try
                {
                    Log.LogMessage(MessageImportance.High, String.Format("Attempting to download from {0}", Address));
                    var wc = new WebClient();
                    wc.DownloadFile(Address, FileName);
                }
                catch (Exception e)
                {
                    Log.LogErrorFromException(e); 
                }
                return !Log.HasLoggedErrors;
                ]]>
            </Code>
        </Task>
    </UsingTask>

</Project>
