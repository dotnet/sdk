# Pipeline: https://dev.azure.com/dnceng-public/public/_build?definitionId=101

trigger: none

pr:
  branches:
    include:
    - main
    - release/*
    - internal/release/*

variables:
- template: /eng/pipelines/templates/variables/sdk-defaults.yml
# Variables used: DncEngPublicBuildPool
- template: /eng/common/templates/variables/pool-providers.yml
### LOCAL ONLY ###
- name: _linuxOsProperties
  value: /p:OSName=linux /p:IsLinuxPortable=true
- name: _helixTargetContainerPrefix
  value: '@mcr.microsoft.com/dotnet-buildtools/prereqs:'

resources:
  containers:
  - container: alpine319WithNode
    image: mcr.microsoft.com/dotnet-buildtools/prereqs:alpine-3.19-WithNode
  - container: centosStream8
    image: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-stream8
  - container: centosStream9
    image: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-stream9
  - container: debian11Amd64
    image: mcr.microsoft.com/dotnet-buildtools/prereqs:debian-11-amd64
  - container: fedora39
    image: mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-39
  - container: ubuntu2204
    image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-22.04

stages:
############### BUILD STAGE ###############
- stage: build
  displayName: Build
  jobs:
  ############### WINDOWS ###############
  - template: /eng/pipelines/templates/jobs/sdk-job-matrix.yml@self
    parameters:
      pool:
        name: $(DncEngPublicBuildPool)
        demands: ImageOverride -equals 1es-windows-2022-open
        os: windows
      helixTargetQueue: windows.amd64.vs2022.pre.open
      jobParameterSets:
      ### TESTS ###
      - categoryName: TestBuild
        publishRetryConfig: true
      - categoryName: FullFramework
        testFullMSBuild: true
      - categoryName: TestAsTools
        runTestsAsTool: true
        # This uses the build step for testing, so the extra test step is not necessary.
        runTests: false
      - categoryName: TemplateEngine
        testProjects: $(Build.SourcesDirectory)/test/Microsoft.TemplateEngine.Cli.UnitTests/Microsoft.TemplateEngine.Cli.UnitTests.csproj;$(Build.SourcesDirectory)/test/dotnet-new.Tests/dotnet-new.IntegrationTests.csproj
      - categoryName: AoT
        runAoTTests: true

  ############### LINUX ###############
  - template: /eng/pipelines/templates/jobs/sdk-job-matrix.yml
    parameters:
      pool:
        name: $(DncEngPublicBuildPool)
        demands: ImageOverride -equals build.ubuntu.2204.amd64.open
        os: linux
      helixTargetQueue: ubuntu.2204.amd64.open
      jobParameterSets:
      ### TESTS ###
      - categoryName: TestBuild
        osProperties: $(_linuxOsProperties)
      - categoryName: TestBuild
        buildArchitecture: arm64
        runtimeIdentifier: linux-arm64
        osProperties: $(_linuxOsProperties)
        # Don't run the tests on arm64. Only perform the build itself.
        runTests: false
      - categoryName: ContainerBased
        container: ubuntu2204
        helixTargetContainer: $(_helixTargetContainerPrefix)ubuntu-22.04-helix-amd64
        osProperties: $(_linuxOsProperties)
        # Skipping all container-based testing for now.
        # See: https://github.com/dotnet/sdk/issues/40935
        runTests: false
      - categoryName: ContainerBased
        container: fedora39
        # No fedora Helix container is available, so use the ubuntu one instead.
        helixTargetContainer: $(_helixTargetContainerPrefix)ubuntu-22.04-helix-amd64
        osProperties: $(_linuxOsProperties)
        # Skipping all container-based testing for now.
        # See: https://github.com/dotnet/sdk/issues/40935
        runTests: false
      - categoryName: ContainerBased
        # The centosStream9 assets are not published. So, we need to use 8 for the time being.
        # See: https://github.com/dotnet/runtime/issues/102344
        container: centosStream8
        helixTargetContainer: $(_helixTargetContainerPrefix)centos-stream8-helix
        osProperties: /p:OSName=linux
        # Skipping all container-based testing for now.
        # See: https://github.com/dotnet/sdk/issues/40935
        runTests: false
      - categoryName: ContainerBased
        container: debian11Amd64
        helixTargetContainer: $(_helixTargetContainerPrefix)debian-11-helix-amd64
        osProperties: /p:OSName=linux /p:BuildSdkDeb=true
        # Skipping all container-based testing for now.
        # See: https://github.com/dotnet/sdk/issues/40935
        runTests: false
      - categoryName: ContainerBased
        container: alpine319WithNode
        helixTargetContainer: $(_helixTargetContainerPrefix)alpine-3.18-helix-amd64
        runtimeIdentifier: linux-musl-x64
        # Use HostOSName when running on alpine.
        osProperties: /p:HostOSName=linux-musl
        # Skipping all container-based testing for now.
        # See: https://github.com/dotnet/sdk/issues/40935
        runTests: false
      - categoryName: TemplateEngine
        osProperties: $(_linuxOsProperties)
        testProjects: $(Build.SourcesDirectory)/test/Microsoft.TemplateEngine.Cli.UnitTests/Microsoft.TemplateEngine.Cli.UnitTests.csproj;$(Build.SourcesDirectory)/test/dotnet-new.Tests/dotnet-new.IntegrationTests.csproj

  ############### MACOS ###############
  - template: /eng/pipelines/templates/jobs/sdk-job-matrix.yml
    parameters:
      pool:
        name: Azure Pipelines
        vmImage: macOS-latest
        os: macOS
      helixTargetQueue: osx.13.amd64.open
      jobParameterSets:
      ### TESTS ###
      - categoryName: TestBuild
      - categoryName: TemplateEngine
        testProjects: $(Build.SourcesDirectory)/test/Microsoft.TemplateEngine.Cli.UnitTests/Microsoft.TemplateEngine.Cli.UnitTests.csproj;$(Build.SourcesDirectory)/test/dotnet-new.Tests/dotnet-new.IntegrationTests.csproj
      - categoryName: AoT
        runAoTTests: true

  ############### SOURCE BUILD ###############
  - template: /eng/common/templates/job/source-build.yml
    parameters:
      platform:
        name: Managed
        container: centosStream9

  ############### DOTNET-FORMAT ###############
  - template: /eng/dotnet-format/dotnet-format-integration.yml