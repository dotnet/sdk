<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" TreatAsLocalProperty="OutDir;Configuration">
  <!-- Copyright (c)  Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->
  <!-- This file is imported by all projects at the beginning of the project files -->

  <!-- Project language -->
  <PropertyGroup Condition="'$(ProjectLanguage)' == ''">
    <ProjectLanguage Condition="'$(MSBuildProjectExtension)' == '.csproj' OR '$(Language)' == 'C#'">CSharp</ProjectLanguage>
  </PropertyGroup>

  <PropertyGroup>
    <NetStandardImplicitPackageVersion>1.6.0</NetStandardImplicitPackageVersion>
    <RepositoryRootDirectory>$(MSBuildThisFileDirectory)</RepositoryRootDirectory>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>

    <OutputPath>$([System.IO.Path]::GetFullPath('$(RepositoryRootDirectory)bin\$(Configuration)'))\</OutputPath>
    <OutDir>$(OutputPath)</OutDir>
    <RootOutDir>$(OutDir)</RootOutDir>
    <BaseIntermediateOutputPath>$([System.IO.Path]::GetFullPath('$(RepositoryRootDirectory)bin\obj\$(MSBuildProjectName)'))\</BaseIntermediateOutputPath>
    <RawOutDir>$(OutDir)Raw\</RawOutDir>
    <PackagesLayoutDir>$(OutDir)PackagesLayout\</PackagesLayoutDir>
    <PackagesLayoutToolsDir>$(PackagesLayoutDir)tools\</PackagesLayoutToolsDir>
    <PackagesLayoutToolsNet46Dir>$(PackagesLayoutToolsDir)net46\</PackagesLayoutToolsNet46Dir>
    <PackagesLayoutToolsNetCoreAppDir>$(PackagesLayoutToolsDir)netcoreapp1.0\</PackagesLayoutToolsNetCoreAppDir>

    <!-- Reset $(BuildEpoch) whenever $(VersionPrefix) increments. We subtract this from YYYYMMDD portion of build
         number below to obtain the fourth part of file version that must fit in 16 bits. We can produce builds 
         for seven years from every epoch reset. -->
    <VersionPrefix Condition="'$(VersionPrefix)' == ''">1.0.0</VersionPrefix>
    <BuildEpoch>20170101</BuildEpoch>
    <VersionPrereleasePrefix Condition="'$(VersionPrereleasePrefix)' == ''">alpha</VersionPrereleasePrefix>
    <!-- When running on VSO (for official builds) use a real number. -->
    <BuildNumber Condition="'$(BuildNumber)' == ''">$(BUILD_BUILDNUMBER)</BuildNumber>
    <BuildNumber Condition="'$(BuildNumber)' == ''">00000001-01</BuildNumber>
    <VersionSuffix Condition="'$(VersionSuffix)' == ''">$(VersionPrereleasePrefix)-$(BuildNumber)</VersionSuffix>
    <Version Condition="'$(Version)' == ''">$(VersionPrefix)-$(VersionSuffix)</Version>

    <!-- Prepare Version number used in template builds -->
    <BuildNumberPart1>$(BuildNumber.Split('-')[0])</BuildNumberPart1>
    <BuildNumberPart2>$(BuildNumber.Split('-')[1].PadLeft(2,'0'))</BuildNumberPart2>

    <!-- Unfortunately we have already shipped template manifests with version 2.0.0.0 (matching
         the version for the NETCore Project System.) Changing this version to match $(VsixVersion) 
         which is 1.0.0.xxx may create upgrade problems for users doing B2B or Preview 5 upgrades. 
         Introducing a version variable that continues the 2.0.0.xxx scheme but uses the right build 
         number. This conforms to the dependencies specified in the ManagedDesktop workload [2.0.0.0,3.0.0.0).
         We can get rid of this, and references to it, when we bump Microsoft.NET.Sdk version to 2.0.0.
      -->    
    <VsixVersion Condition="'$(VsixVersion)' == ''">2.0.0.$(BuildNumberPart1)$(BuildNumberPart2)</VsixVersion>

    <!-- Prepare assembly metadata -->
    <Authors>Microsoft Corporation</Authors>
    <Copyright>Â© Microsoft Corporation. All rights reserved.</Copyright>
    <AssemblyVersion>$(VersionPrefix).0</AssemblyVersion>
    <FileVersion Condition="'$(BUILD_BUILDNUMBER)' == ''">$(VersionPrefix).0</FileVersion>
    <FileVersion Condition="'$(BUILD_BUILDNUMBER)' != ''">$(VersionPrefix).$([MSBuild]::Subtract($(BuildNumberPart1), $(BuildEpoch)))</FileVersion>
    <InformationalVersion>$(VersionPrefix).$(BuildNumber)</InformationalVersion>
    <InformationalVersion Condition="'$(BUILD_SOURCEVERSION)' != ''">$(InformationalVersion). Commit Hash: $(BUILD_SOURCEVERSION)</InformationalVersion>

    <DotNet_Install_Dir Condition=" '$(DotNet_Install_Dir)' == ''">$(RepositoryRootDirectory).dotnet_cli\</DotNet_Install_Dir>
    <DotNetTool>$(DotNet_Install_Dir)\dotnet</DotNetTool>

    <NuGet_Packages Condition=" '$(NuGet_Packages)' == ''">$(RepositoryRootDirectory)packages\</NuGet_Packages>
    <NuGetPackageRoot Condition=" '$(NuGetPackageRoot)' == ''">$(NuGet_Packages)</NuGetPackageRoot>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Assembly signing isn't supported by non-Windows MSBuild. Disable until supported. See #55 (https://github.com/dotnet/sdk/issues/55) -->
    <SignAssembly Condition="'$(OS)'=='Windows_NT'">true</SignAssembly>
  </PropertyGroup>

  <Import Project="build\DependencyVersions.props" />
</Project>
