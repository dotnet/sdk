<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" TreatAsLocalProperty="OutDir;Configuration">
  <!-- Copyright (c)  Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->
  <!-- This file is imported by all projects at the beginning of the project files -->

  <!-- Project language -->
  <PropertyGroup Condition="'$(ProjectLanguage)' == ''">
    <ProjectLanguage Condition="'$(MSBuildProjectExtension)' == '.csproj' OR '$(Language)' == 'C#'">CSharp</ProjectLanguage>
  </PropertyGroup>

  <PropertyGroup>
    <RepositoryRootDirectory>$(MSBuildThisFileDirectory)</RepositoryRootDirectory>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>

    <OutDir Condition="'$(OutDir)' == ''">$([System.IO.Path]::GetFullPath('$(RepositoryRootDirectory)bin\$(Configuration)'))\</OutDir>
    <BaseIntermediateOutputPath Condition="'$(BaseIntermediateOutputPath)' == ''">$([System.IO.Path]::GetFullPath('$(RepositoryRootDirectory)bin\obj\$(MSBuildProjectName)'))\</BaseIntermediateOutputPath>
    <PackagesLayoutDir>$(OutDir)\PackagesLayout\</PackagesLayoutDir>
    <PackagesLayoutToolsDir>$(PackagesLayoutDir)tools\</PackagesLayoutToolsDir>
    <PackagesLayoutToolsNet46Dir>$(PackagesLayoutToolsDir)net46\</PackagesLayoutToolsNet46Dir>
    <PackagesLayoutToolsNetCoreAppDir>$(PackagesLayoutToolsDir)netcoreapp1.0\</PackagesLayoutToolsNetCoreAppDir>
    <WebPackagesLayoutDir>$(OutDir)\WebPackagesLayout\</WebPackagesLayoutDir>
    
    <VersionPrefix Condition="'$(VersionPrefix)' == ''">1.0.0</VersionPrefix>
    <VersionPrereleasePrefix Condition="'$(VersionPrereleasePrefix)' == ''">alpha</VersionPrereleasePrefix>
    <!-- When running on VSO (for official builds) use a real number. -->
    <BuildNumber Condition="'$(BuildNumber)' == ''">$(BUILD_BUILDNUMBER)</BuildNumber>
    <BuildNumber Condition="'$(BuildNumber)' == ''">00000001-01</BuildNumber>
    <VersionSuffix Condition="'$(VersionSuffix)' == ''">$(VersionPrereleasePrefix)-$(BuildNumber)</VersionSuffix>
    <Version Condition="'$(Version)' == ''">$(VersionPrefix)-$(VersionSuffix)</Version>

    <!-- Prepare Version number used in template builds -->
    <BuildNumberPart1>$(BuildNumber.Split('-')[0])</BuildNumberPart1>
    <BuildNumberPart2>$(BuildNumber.Split('-')[1].PadLeft(2,'0'))</BuildNumberPart2>
    <VsixVersion Condition="'$(VsixVersion)' == ''">$(VersionPrefix).$(BuildNumberPart1)$(BuildNumberPart2)</VsixVersion>

    <!-- Unfortunately we have already shipped template manifests with version 2.0.0.0 (matching
         the version for the NETCore Project System.) Changing this version to match $(VsixVersion) 
         which is 1.0.0.xxx may create upgrade problems for users doing B2B or Preview 5 upgrades. 
         Introducing a version variable that continues the 2.0.0.xxx scheme but uses the right build 
         number. This conforms to the dependencies specified in the ManagedDesktop workload [2.0.0.0,3.0.0.0).
         We can get rid of this, and references to it, when we bump Microsoft.NET.Sdk version to 2.0.0.
      -->
    <ProjectSystemVsixVersion Condition="'$(ProjectSystemVsixVersion)' == ''">2.0.0.$(BuildNumberPart1)$(BuildNumberPart2)</ProjectSystemVsixVersion>

    <DotNet_Install_Dir Condition=" '$(DotNet_Install_Dir)' == ''">$(RepositoryRootDirectory).dotnet_cli\</DotNet_Install_Dir>
    <DotNetTool>$(DotNet_Install_Dir)\dotnet</DotNetTool>

    <NuGet_Packages Condition=" '$(NuGet_Packages)' == ''">$(RepositoryRootDirectory)packages\</NuGet_Packages>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Assembly signing isn't supported by non-Windows MSBuild. Disable until supported. See #55 (https://github.com/dotnet/sdk/issues/55) -->
    <SignAssembly Condition="'$(SignAssembly)'=='' AND '$(OS)'=='Windows_NT'">true</SignAssembly>
  </PropertyGroup>

  <Import Project="build\DependencyVersions.props" />
</Project>
