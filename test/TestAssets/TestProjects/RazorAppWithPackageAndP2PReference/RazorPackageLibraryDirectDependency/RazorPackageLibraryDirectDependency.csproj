<Project Sdk="Microsoft.NET.Sdk.Razor">

  <PropertyGroup>
    <AddRazorSupportForMvc>true</AddRazorSupportForMvc>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFramework>$(AspNetTestTfm)</TargetFramework>
    <Copyright>Â© Microsoft</Copyright>
    <Product>Razor Test</Product>
    <Company>Microsoft</Company>
    <Description>PackageLibraryDirectDependency Description</Description>
    <DeterministicSourcePaths>false</DeterministicSourcePaths>
    <!-- See Directory.Packages.props for details on $(AspNetTestPackageSource).
         It essentially creates an additional feed for the tests packages at the root
         of the test project
     -->
    <PackageOutputPath>$(AspNetTestPackageSource)</PackageOutputPath>
    <PackageVersion>1.0.2</PackageVersion>
  </PropertyGroup>

  <PropertyGroup>
    <!-- We don't want to run build server when not running as tests. -->
    <UseRazorBuildServer>false</UseRazorBuildServer>
  </PropertyGroup>

  <ItemGroup>
    <FrameworkReference Include="Microsoft.AspNetCore.App"/> 
  </ItemGroup>

  <ItemGroup>
    <!-- <Content Include="build\**" Pack="true" PackagePath="build" /> -->
    <!-- We will remove the line below when we do the item to support packing -->
    <!-- <Content Update="wwwroot\**" Pack="true" PackagePath="razorContent" /> -->
    <ProjectReference Include="..\RazorPackageLibraryTransitiveDependency\RazorPackageLibraryTransitiveDependency.csproj" />
  </ItemGroup>

  <Target Name="EnsureFingerprinting" BeforeTargets="Pack" DependsOnTargets="ResolveStaticWebAssetsConfiguration" >
    <!-- Error if StaticWebAssetFingerprintingEnabled is not true -->
    <Error Condition="'$(StaticWebAssetFingerprintingEnabled)' != 'true'" Text="$(StaticWebAssetFingerprintingEnabled) must be true for the test to pass." />
  </Target>

</Project>
