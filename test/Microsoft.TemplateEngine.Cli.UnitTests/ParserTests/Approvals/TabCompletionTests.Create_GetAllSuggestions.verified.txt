[
  {
    Label: buildprops,
    Kind: Value,
    SortText: buildprops,
    InsertText: buildprops,
    Documentation: An empty Directory.Build.props file which can be used to specify MSBuild properties for an entire folder
  },
  {
    Label: buildtargets,
    Kind: Value,
    SortText: buildtargets,
    InsertText: buildtargets,
    Documentation: An empty Directory.Build.targets file which can be used to specify MSBuild tasks and targets for an entire folder
  },
  {
    Label: classlib,
    Kind: Value,
    SortText: classlib,
    InsertText: classlib,
    Documentation: A project for creating a class library that targets .NET or .NET Standard
  },
  {
    Label: console,
    Kind: Value,
    SortText: console,
    InsertText: console,
    Documentation: A project for creating a command-line application that can run on .NET on Windows, Linux and macOS
  },
  {
    Label: editorconfig,
    Kind: Value,
    SortText: editorconfig,
    InsertText: editorconfig,
    Documentation: Creates an .editorconfig file for configuring code style preferences.
  },
  {
    Label: gitignore,
    Kind: Value,
    SortText: gitignore,
    InsertText: gitignore,
    Documentation: Creates a gitignore file for a dotnet project.
  },
  {
    Label: globaljson,
    Kind: Value,
    SortText: globaljson,
    InsertText: globaljson,
    Documentation: A file for selecting the .NET SDK version.
  },
  {
    Label: mstest,
    Kind: Value,
    SortText: mstest,
    InsertText: mstest,
    Documentation: A project that contains MSTest tests that can run on .NET on Windows, Linux and MacOS.
  },
  {
    Label: mstest-class,
    Kind: Value,
    SortText: mstest-class,
    InsertText: mstest-class,
    Documentation: Creates a new MSTest test class
  },
  {
    Label: mstest-playwright,
    Kind: Value,
    SortText: mstest-playwright,
    InsertText: mstest-playwright,
    Documentation: A project that contains Playwright tests using MSTest test framework, that can run on .NET on Windows, Linux and MacOS.
  },
  {
    Label: nugetconfig,
    Kind: Value,
    SortText: nugetconfig,
    InsertText: nugetconfig,
    Documentation: A file for configuring the locations NuGet will search for packages
  },
  {
    Label: nunit,
    Kind: Value,
    SortText: nunit,
    InsertText: nunit,
    Documentation: A project that contains NUnit tests that can run on .NET on Windows, Linux and macOS
  },
  {
    Label: nunit-playwright,
    Kind: Value,
    SortText: nunit-playwright,
    InsertText: nunit-playwright,
    Documentation: A project that contains Playwright tests using NUnit test framework, that can run on .NET on Windows, Linux and MacOS.
  },
  {
    Label: nunit-test,
    Kind: Value,
    SortText: nunit-test,
    InsertText: nunit-test,
    Documentation: Creates a new NUnit test class
  },
  {
    Label: packagesprops,
    Kind: Value,
    SortText: packagesprops,
    InsertText: packagesprops,
    Documentation: An empty Directory.Packages.props file which can be used to specify package versions centrally
  },
  {
    Label: sln,
    Kind: Value,
    SortText: sln,
    InsertText: sln,
    Documentation: Create an empty solution containing no projects
  },
  {
    Label: tool-manifest,
    Kind: Value,
    SortText: tool-manifest,
    InsertText: tool-manifest,
    Documentation: The file that defines available dotnet tools.
  },
  {
    Label: webconfig,
    Kind: Value,
    SortText: webconfig,
    InsertText: webconfig,
    Documentation: A file used to configure Web Application settings
  },
  {
    Label: xunit,
    Kind: Value,
    SortText: xunit,
    InsertText: xunit,
    Documentation: A project that contains xUnit.net tests that can run on .NET on Windows, Linux and macOS
  },
  {
    Label: --dry-run,
    Kind: Keyword,
    SortText: --dry-run,
    InsertText: --dry-run,
    Detail: Displays a summary of what would happen if the given command line were run if it would result in a template creation.
  },
  {
    Label: --force,
    Kind: Keyword,
    SortText: --force,
    InsertText: --force,
    Detail: Forces content to be generated even if it would change existing files.
  },
  {
    Label: --name,
    Kind: Keyword,
    SortText: --name,
    InsertText: --name,
    Detail: The name for the output being created. If no name is specified, the name of the output directory is used.
  },
  {
    Label: --no-update-check,
    Kind: Keyword,
    SortText: --no-update-check,
    InsertText: --no-update-check,
    Detail: Disables checking for the template package updates when instantiating a template.
  },
  {
    Label: --output,
    Kind: Keyword,
    SortText: --output,
    InsertText: --output,
    Detail: Location to place the generated output.
  },
  {
    Label: --project,
    Kind: Keyword,
    SortText: --project,
    InsertText: --project,
    Detail: The project that should be used for context evaluation.
  },
  {
    Label: -n,
    Kind: Keyword,
    SortText: -n,
    InsertText: -n,
    Detail: The name for the output being created. If no name is specified, the name of the output directory is used.
  },
  {
    Label: -o,
    Kind: Keyword,
    SortText: -o,
    InsertText: -o,
    Detail: Location to place the generated output.
  }
]