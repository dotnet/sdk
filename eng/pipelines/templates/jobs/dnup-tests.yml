parameters:
  # Basic parameters mirroring style of other job templates
  pool: {}
  categoryName: dnupTests
  dependsOn: ''
  variables: {}
  oneESCompat:
    templateFolderName: templates
    publishTaskPrefix: ''
  timeoutInMinutes: 60
  os: windows

jobs:
- job: ${{ parameters.categoryName }}_${{ parameters.os }}
  displayName: 'dnup tests: ${{ parameters.os }}'
  timeoutInMinutes: ${{ parameters.timeoutInMinutes }}
  pool: ${{ parameters.pool }}
  dependsOn: ${{ parameters.dependsOn }}
  variables:
  - ${{ insert }}: ${{ parameters.variables }}
  steps:
  - ${{ if eq(parameters.os, 'windows') }}:
    - powershell: |
        Write-Host "Restoring dnup tests"
        dotnet restore test/dnup.Tests/dnup.Tests.csproj
      displayName: Restore
    - powershell: |
        dotnet build test/dnup.Tests/dnup.Tests.csproj -c Release --no-restore
      displayName: Build
    - powershell: |
        dotnet test test/dnup.Tests/dnup.Tests.csproj -c Release --no-build --logger "trx;LogFileName=dnup-tests.trx" --results-directory $(Build.SourcesDirectory)/artifacts/dnupTestResults
      displayName: Test
  - ${{ if ne(parameters.os, 'windows') }}:
    - script: |
        echo "Restoring dnup tests"
        dotnet restore test/dnup.Tests/dnup.Tests.csproj
      displayName: Restore
    - script: |
        dotnet build test/dnup.Tests/dnup.Tests.csproj -c Release --no-restore
      displayName: Build
    - script: |
        dotnet test test/dnup.Tests/dnup.Tests.csproj -c Release --no-build --logger "trx;LogFileName=dnup-tests.trx" --results-directory $(Build.SourcesDirectory)/artifacts/dnupTestResults
      displayName: Test
  - task: PublishTestResults@2
    displayName: Publish dnup test results
    condition: always()
    inputs:
      testResultsFormat: VSTest
      testResultsFiles: '**/dnup-tests.trx'
      searchFolder: $(Build.SourcesDirectory)/artifacts/dnupTestResults
      testRunTitle: 'dnup ${{ parameters.os }}'
  - task: PublishBuildArtifacts@1
    displayName: Publish dnup test artifacts
    condition: always()
    inputs:
      PathtoPublish: $(Build.SourcesDirectory)/artifacts/dnupTestResults
      ArtifactName: dnupTestResults_${{ parameters.os }}
      publishLocation: Container
