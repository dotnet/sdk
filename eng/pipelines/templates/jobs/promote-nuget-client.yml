# NuGet.Client does not flow to the VMR directly but only to dotnet/sdk where it is validated
# Upon the version bump happens in dotnet/sdk, this job promotes that build of NuGet.Client to
# another channel from where it flows into the VMR.
# The sdk and nuget.client subscriptions are batched and go into the VMR in a single PR.
# More information: https://github.com/dotnet/arcade-services/issues/4618

parameters:
- name: assetName
  type: string
  displayName: Name of the asset to promote

jobs:
- job: PromoteNuGetClient
  displayName: Promote NuGet Client
  pool:
    name: NetCore1ESPool-Publishing-Internal
    image: windows.vs2019.amd64
    os: windows

  steps:
  - template: ../steps/install-darc.yml@self

  - template: ../steps/get-asset-info.yml@self
    parameters:
      assetName: ${{ parameters.assetName }}

  - task: AzureCLI@2
    displayName: ðŸŸ£ Assign build to channel
    inputs:
      azureSubscription: "Darc: Maestro Production"
      scriptType: ps
      scriptLocation: inlineScript
      inlineScript: |
        $version = '$(AssetVersion)'

        Write-Host "Promoting build of asset ${{ parameters.assetName }} / $version..."

        $assets = .\.dotnet\dotnet darc get-asset --name '${{ parameters.assetName }}' --version "$version" --max-age 60 --output-format json --ci
        $parsedAssets = $assets | ConvertFrom-Json

        if (-not $parsedAssets -or -not $parsedAssets[0]) {
          Write-Error "No build found to promote version $version"
          exit 1
        }

        $buildId = $parsedAssets[0].build.id
        try {
            $defaultChannels = .\.dotnet\dotnet darc get-default-channels --source-repo https://github.com/dotnet/sdk --branch "$(Build.SourceBranchName)" --output-format json --ci | ConvertFrom-Json
        } catch {
            Write-Host "No default channels found for branch $(Build.SourceBranchName) - no promotion will take place"
            exit 0
        }

        if ($defaultChannels.Count -eq 0) {
            Write-Host "Default channels list is empty for branch $(Build.SourceBranchName) - no promotion will take place"
            exit 0
        }
        $targetChannel = $defaultChannels[0].channel.name

        Write-Host "Promoting build $buildId to channel $targetChannel"

        .\.dotnet\dotnet darc add-build-to-channel --id $buildId --channel "$targetChannel" --skip-assets-publishing --ci
