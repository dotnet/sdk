parameters:
- name: targetArchitecture
  type: string
  default: ''

- name: OS
  type: string
  values:
    - Windows_NT
    - Linux
    - Darwin

- name: reuseBuildArtifactsFrom
  type: object
  default: ''

steps:
- ${{ if ne(parameters.reuseBuildArtifactsFrom,'') }}:
  - ${{ each reuseBuildArtifacts in parameters.reuseBuildArtifactsFrom }}:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifactName: ${{ reuseBuildArtifacts }}_Artifacts
        targetPath: $(Build.SourcesDirectory)/artifacts/
      displayName: Download Previous Build (${{ reuseBuildArtifacts }})

# This is necessary whenever we want to publish/restore to an AzDO private feed
# Since sdk-task.ps1 tries to restore packages we need to do this authentication here
# otherwise it'll complain about accessing a private feed.
- task: NuGetAuthenticate@1
  displayName: 'Authenticate to AzDO Feeds'

- ${{ if eq(parameters.OS, 'Linux') }}:
  - script: |
      ./build.sh \
      --ci \
      -t \
      --projects test/Microsoft.DotNet.Installer.Tests/Microsoft.DotNet.Installer.Tests.csproj \
      /p:TestRpmPackages=true \
      /p:TestDebPackages=true
    displayName: Validate installer packages
    workingDirectory: $(Build.SourcesDirectory)

  - task: PublishTestResults@2
    displayName: Publish Test Results
    condition: succeededOrFailed()
    continueOnError: true
    inputs:
      testRunner: VSTest
      testResultsFiles: 'artifacts/TestResults/Release/*.trx'
      searchFolder: $(Build.SourcesDirectory)
      mergeTestResults: true
      publishRunAttachments: true
      testRunTitle: Tests_$(Agent.JobName)

  - task: PublishTestResults@2
    displayName: Publish Scenario Test Results
    condition: succeededOrFailed()
    continueOnError: true
    inputs:
      testRunner: xUnit
      testResultsFiles: 'artifacts/TestResults/**/scenario-tests/*.xml'
      searchFolder: $(Build.SourcesDirectory)
      mergeTestResults: true
      publishRunAttachments: true
      testRunTitle: ScenarioTests_$(Agent.JobName)
