parameters:
- name: verticalsStages
  type: stageList
- name: postJoinStages
  type: stageList
  default: []
- name: finalJoinCondition
  type: boolean
# These are not expected to be passed it but rather just object variables reused below
- name: pool_Linux
  type: object
  default:
    name: $(defaultPoolName)
    image: $(poolImage_Linux)
    demands: ImageOverride -equals $(poolImage_Linux)
    os: linux

- name: pool_Windows
  type: object
  default:
    name: $(defaultPoolName)
    image: $(poolImage_Windows)
    demands: ImageOverride -equals $(poolImage_Windows)
    os: windows

- name: pool_LinuxArm64
  type: object
  default:
    name: $(poolName_LinuxArm64)
    image: $(poolImage_LinuxArm64)
    demands: ImageOverride -equals $(poolImage_LinuxArm64)
    hostArchitecture: Arm64
    os: linux

- name: pool_Mac
  type: object
  default:
    name: Azure Pipelines
    vmImage: $(poolImage_Mac)
    os: macOS


- name: pool_Linux_Shortstack
  type: object
  default:
    name: $(shortStackPoolName)
    image: $(poolImage_Linux)
    demands: ImageOverride -equals $(poolImage_Linux)
    os: linux

stages:
- ${{ each vertical in parameters.verticalsStages }}:
  - ${{ insert }}: ${{ vertical }}
- ${{ if parameters.finalJoinCondition }}:
  - stage: VMR_Final_Join
    displayName: 'VMR Final Join'
    dependsOn: ${{ parameters.verticalsStages.*.stage }}
    jobs:
      - job: FinalJoin
        displayName: Final Build Pass
        pool: ${{ parameters.pool_Windows }}
        timeoutInMinutes: 240
        templateContext:
          outputParentDirectory: $(Build.ArtifactStagingDirectory)/artifacts
          inputs:
            - ${{ each vertical in parameters.verticalsStages.*.jobs.*.job }}:
              - input: pipelineArtifact
                path: $(Build.ArtifactStagingDirectory)/VerticalArtifacts/${{ vertical }}
                artifactName: ${{ vertical }}_Artifacts
            - input: pipelineArtifact
              path: $(Build.ArtifactStagingDirectory)/VerticalManifests
              artifactName: VerticalManifests
          outputs:
          - output: pipelineArtifact
            path: $(Build.ArtifactStagingDirectory)/artifacts/MergedManifest.xml
            artifact: AssetManifests
            displayName: Publish Merged Manifest
            sbomEnabled: false
          - output: buildArtifacts
            PathtoPublish: $(Build.ArtifactStagingDirectory)/artifacts/assets
            ArtifactName: BlobArtifacts
            displayName: Publish Blob Artifacts
            sbomEnabled: false
          - output: buildArtifacts
            PathtoPublish: $(Build.ArtifactStagingDirectory)/artifacts/packages
            ArtifactName: PackageArtifacts
            displayName: Publish Package Artifacts
            sbomEnabled: false
          - output: pipelineArtifact
            path: $(Build.ArtifactStagingDirectory)/artifacts/log
            artifact: JoinVerticals_BuildLogs_Attempt$(System.JobAttempt)
            displayName: Publish Build Logs
            sbomEnabled: false
            condition: succeededOrFailed()
        steps:
        - template: ../steps/vmr-join-verticals.yml
          parameters:
            dotNetBuildPass: final
            outputFolder: $(Build.ArtifactStagingDirectory)/artifacts
  # Insert all of the validation stages,
  # adding a dependency on the final join stage
  - ${{ each postJoinStage in parameters.postJoinStages }}:
    - stage: ${{ postJoinStage.stage }}
      ${{ each pair in postJoinStage }}:
        ${{ if notIn(pair.key, 'dependsOn', 'stage') }}:
          ${{ pair.key }}: ${{ pair.value }}
      dependsOn:
        - VMR_Final_Join
        # add any dependencies provided via root yaml
        - ${{ if ne(postJoinStage.dependsOn, '') }}:
          - ${{ each dependency in postJoinStage.dependsOn }}:
            - ${{ dependency }}
