parameters:
# Branch of the VMR to use (to push to for internal builds)
- name: vmrBranch
  type: string
  default: $(Build.SourceBranch)

- name: pool_Windows
  type: object
  default:
    name: $(defaultPoolName)
    image: $(poolImage_Windows)
    demands: ImageOverride -equals $(poolImage_Windows)
    os: windows

stages:
- stage: VMR_Final_Join
  displayName: VMR Final Join
  dependsOn: VMR_Vertical_Build
  condition: succeededOrFailed()
  variables:
  - template: ../variables/vmr-build.yml
    parameters:
      vmrBranch: ${{ parameters.vmrBranch }}

  jobs:
  - job: FinalJoin
    displayName: Final Build Pass
    pool: ${{ parameters.pool_Windows }}
    timeoutInMinutes: 240
    templateContext:
      outputs:
      - output: buildArtifacts
        PathtoPublish: $(Build.ArtifactStagingDirectory)/artifacts/MergedManifest.xml
        ArtifactName: AssetManifests
        displayName: Publish Merged Manifest
        sbomEnabled: false
      - output: buildArtifacts
        PathtoPublish: $(Build.ArtifactStagingDirectory)/artifacts/assets
        ArtifactName: BlobArtifacts
        displayName: Publish Blob Artifacts
        sbomEnabled: false
      - output: buildArtifacts
        PathtoPublish: $(Build.ArtifactStagingDirectory)/artifacts/packages
        ArtifactName: PackageArtifacts
        displayName: Publish Package Artifacts
        sbomEnabled: false
    steps:
    - template: ../steps/vmr-join-verticals.yml
      parameters:
        dotNetBuildPass: final
        primaryDependentJob: Windows_x64
        outputFolder: $(Build.ArtifactStagingDirectory)/artifacts