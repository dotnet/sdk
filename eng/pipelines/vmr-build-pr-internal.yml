# This YAML is used by these PR pipelines:
#
# - dotnet-sdk-source-build-internal
#   https://dev.azure.com/dnceng/internal/_build?definitionId=1378

trigger: none
pr:
  branches:
    include:
    - internal/release/*
    exclude:
    - internal/release/*.0.2xx
    - internal/release/*.0.3xx
    - internal/release/*.0.4xx

parameters:
- name: vmrBranch
  displayName: dotnet/dotnet branch to push to
  type: string
  default: ' '

- name: disableBuild
  displayName: Skip the VMR Build stage
  type: boolean
  default: false

variables:
- template: /eng/common/templates/variables/pool-providers.yml@self
- template: /eng/pipelines/templates/variables/vmr-build.yml@self

- ${{ if ne(parameters.vmrBranch, ' ') }}:
  - name: VmrBranch
    value: ${{ replace(parameters.vmrBranch, ' ', '') }}
- ${{ else }}:
  - name: VmrBranch
    value: ${{ replace(replace(variables['System.PullRequest.TargetBranch'], 'refs/heads/', ''), 'refs/pull/', '') }}

# enable source-only build for pipelines with the -source-build suffix
- name: isSourceOnlyBuild
  value: ${{ contains(variables['Build.DefinitionName'], '-source-build') }}

resources:
  repositories:
  - repository: vmr
    name: dotnet-dotnet
    type: git
    ref: ${{ variables.VmrBranch }}
  
  containers:
    ${{ variables.almaLinuxContainerName }}:
      image: ${{ variables.almaLinuxContainerImage }}
      options: ${{ variables.defaultContainerOptions }}
    ${{ variables.alpineContainerName }}:
      image: ${{ variables.alpineContainerImage }}
      options: ${{ variables.defaultContainerOptions }}
    ${{ variables.centOSStreamContainerName }}:
      image: ${{ variables.centOSStreamContainerImage }}
      options: ${{ variables.defaultContainerOptions }}
    ${{ variables.fedoraContainerName }}:
      image: ${{ variables.fedoraContainerImage }}
      options: ${{ variables.defaultContainerOptions }}
    ${{ variables.ubuntuContainerName }}:
      image: ${{ variables.ubuntuContainerImage }}
      options: ${{ variables.defaultContainerOptions }}
    ${{ variables.ubuntuArmContainerName }}:
      image: ${{ variables.ubuntuArmContainerImage }}
      options: ${{ variables.defaultContainerOptions }}
    ${{ variables.azurelinuxX64CrossContainerName }}:
      image: ${{ variables.azurelinuxX64CrossContainerImage }}
      options: ${{ variables.defaultContainerOptions }}
    ${{ variables.azurelinuxArmCrossContainerName }}:
      image: ${{ variables.azurelinuxArmCrossContainerImage }}
      options: ${{ variables.defaultContainerOptions }}
    ${{ variables.azurelinuxArm64CrossContainerName }}:
      image: ${{ variables.azurelinuxArm64CrossContainerImage }}
      options: ${{ variables.defaultContainerOptions }}
    ${{ variables.azurelinuxX64MuslCrossContainerName }}:
      image: ${{ variables.azurelinuxX64MuslCrossContainerImage }}
      options: ${{ variables.defaultContainerOptions }}
    ${{ variables.azurelinuxArmMuslCrossContainerName }}:
      image: ${{ variables.azurelinuxArmMuslCrossContainerImage }}
      options: ${{ variables.defaultContainerOptions }}
    ${{ variables.azurelinuxArm64MuslCrossContainerName }}:
      image: ${{ variables.azurelinuxArm64MuslCrossContainerImage }}
      options: ${{ variables.defaultContainerOptions }}
    ${{ variables.androidCrossContainerName }}:
      image: ${{ variables.androidCrossContainerImage }}
      options: ${{ variables.defaultContainerOptions }}
    ${{ variables.linuxBionicCrossContainerName }}:
      image: ${{ variables.linuxBionicCrossContainerImage }}
      options: ${{ variables.defaultContainerOptions }}
    ${{ variables.browserCrossContainerName }}:
      image: ${{ variables.browserCrossContainerImage }}
      options: ${{ variables.defaultContainerOptions }}
    ${{ variables.wasiCrossContainerName }}:
      image: ${{ variables.wasiCrossContainerImage }}
      options: ${{ variables.defaultContainerOptions }}

stages:
# You can temporarily disable the VMR Build stage by setting the disableBuild variable
- ${{ if not(parameters.disableBuild) }}:
  - template: templates/stages/vmr-build.yml
    parameters:
      vmrBranch: ${{ variables.VmrBranch }}
      isBuiltFromVmr: false
      isSourceOnlyBuild: ${{ variables.isSourceOnlyBuild }}
      ${{ if contains(variables['Build.DefinitionName'], '-full') }}:
        scope: full
      ${{ elseif eq(variables.isSourceOnlyBuild, 'true') }}:
        scope: ultralite
      ${{ else }}:
        scope: lite

# In case the VMR Build stage is temporarily disabled, the VMR synchronization step is run to validate
# that the PR can be merged and later synchronized into the VMR without problems.
- ${{ else }}:
  - stage: Synchronize_VMR
    displayName: Synchronize VMR
    dependsOn: []
    jobs:
    - template: templates/jobs/vmr-synchronization.yml
      parameters:
        vmrBranch: ${{ variables.VmrBranch }}
        noPush: true
